{
	"id": "416514e0e7c6b3b0aebb950246114a81",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/KicketToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.11;\n\nimport \"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol\";\nimport \"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol\";\nimport \"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol\";\nimport \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\";\nimport \"@klaytn/contracts/utils/Context.sol\";\nimport \"@klaytn/contracts/utils/Address.sol\";\n\n// 0x9376D8B03d92f15C98f6A5b59E3af21dA9E35Dd6\n\ncontract KicketToken is Context, KIP13, IKIP7, IKIP7Metadata {\n\n     using Address for address;\n\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IKIP13-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(KIP13) returns (bool) {\n        return\n            interfaceId == type(IKIP7).interfaceId ||\n            interfaceId == type(IKIP7Metadata).interfaceId ||\n            KIP13.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {KIP7} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IKIP7-balanceOf} and {IKIP7-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IKIP7-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IKIP7-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IKIP7-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IKIP7-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IKIP7-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IKIP7-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {KIP7}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IKIP7-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IKIP7-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"KIP7: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev See {IKIP7-safeTransfer}.\n     *\n     * Emits a {Transfer} event\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     * - if `recipient` is a smart contract, it must implement {IKIP7Receiver}\n     */\n    function safeTransfer(address recipient, uint256 amount) public virtual override {\n        address owner = _msgSender();\n        _safeTransfer(owner, recipient, amount, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-KIP7-safeTransfer-address-uint256-}[`safeTransfer`], with an additional `_data` parameter which is\n     * forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients.\n     *\n     * Emits a {Transfer} event\n     */\n    function safeTransfer(\n        address recipient,\n        uint256 amount,\n        bytes memory _data\n    ) public virtual override {\n        address owner = _msgSender();\n        _safeTransfer(owner, recipient, amount, _data);\n    }\n\n    /**\n     * @dev See {IKIP7-safeTransferFrom}.\n     *\n     * Emits a {Transfer} event\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the KIP. See the note at the beginning of {KIP7}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least `amount`.\n     * - if `recipient` is a smart contract, it must implement {IKIP7Receiver}\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual override {\n        address spender = _msgSender();\n        _spendAllowance(sender, spender, amount);\n        _safeTransfer(sender, recipient, amount, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-KIP7-safeTransferFrom-address-uint256-}[`safeTransferFrom`], with an additional `_data` parameter which is\n     * forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients.\n     *\n     * Emits a {Transfer} event\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory _data\n    ) public virtual override {\n        address spender = _msgSender();\n        _spendAllowance(sender, spender, amount);\n        _safeTransfer(sender, recipient, amount, _data);\n    }\n\n    /**\n     * @dev Safely transfers `amout` token from `from` to `to`, checking first that contract recipients\n     * are aware of the KIP7 protocol to prevent tokens from being forever locked.\n     *\n     * `_data` is additional data, it has no specified format and it is sent in call to `to` to be used\n     * for additional KIP7 receiver handler logic\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - if `to` is a contract it must implement {IKIP7Receiver} and\n     * - If `to` refers to a smart contract, it must implement {IKIP7Receiver}, which is called upon\n     *   a safe transfer.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory _data\n    ) internal virtual {\n        _transfer(from, to, amount);\n        require(_checkOnKIP7Received(from, to, amount, _data), \"KIP7: transfer to non IKIP7Receiver implementer\");\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"KIP7: transfer from the zero address\");\n        require(to != address(0), \"KIP7: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"KIP7: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /**\n     * @dev Safely mints `amount` and transfers it to `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - If `account` refers to a smart contract, it must implement {IKIP7Receiver-onKIP7Received},\n     *   which is called upon a safe mint.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address account, uint256 amount) internal virtual {\n        _safeMint(account, amount, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-KIP7-_safeMint-address-uint256-}[`_safeMint`], with an additional `_data` parameter which is\n     * forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients.\n     */\n    function _safeMint(\n        address account,\n        uint256 amount,\n        bytes memory _data\n    ) internal virtual {\n        _mint(account, amount);\n        require(\n            _checkOnKIP7Received(address(0), account, amount, _data),\n            \"KIP7: transfer to non IKIP7Receiver implementer\"\n        );\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"KIP7: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Internal function to invoke {IKIP7Receiver-onKIP7Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of transfer token amount\n     * @param to target address that will receive the tokens\n     * @param amount uint256 value to be transferred\n     * @param _data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnKIP7Received(\n        address from,\n        address to,\n        uint256 amount,\n        bytes memory _data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IKIP7Receiver(to).onKIP7Received(_msgSender(), from, amount, _data) returns (bytes4 retval) {\n                return retval == IKIP7Receiver.onKIP7Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"KIP7: transfer to non KIP7Receiver implementer\");\n                } else {\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"KIP7: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"KIP7: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"KIP7: approve from the zero address\");\n        require(spender != address(0), \"KIP7: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"KIP7: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}"
			},
			"@klaytn/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			},
			"@klaytn/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@klaytn/contracts/KIP/utils/introspection/KIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/KIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/ERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity ^0.8.0;\n\nimport \"../../interfaces/IKIP13.sol\";\n\n/**\n * @dev Implementation of the {IKIP13} interface.\n *\n * Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract KIP13 is IKIP13 {\n    /**\n     * @dev See {IKIP13-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IKIP13).interfaceId;\n    }\n}\n"
			},
			"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP7/IKIP7Receiver.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC20/IERC20Receiver.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity ^0.8.0;\n\ninterface IKIP7Receiver {\n    /**\n     * @dev Whenever an {IKIP7} `amount` is transferred to this contract via {IKIP7-safeTransfer}\n     * or {IKIP7-safeTransferFrom} by `operator` from `from`, this function is called.\n     *\n     * {onKIP7Received} must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IKIP7Receiver.onKIP7Received.selector`.\n     */\n    function onKIP7Received(\n        address operator,\n        address from,\n        uint256 amount,\n        bytes calldata _data\n    ) external returns (bytes4);\n}\n"
			},
			"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP7/extensions/IKIP7Metadata.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC20/extensions/IERC20Metadata.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity ^0.8.0;\n\nimport \"../IKIP7.sol\";\n\n/**\n * @dev Extension of {KIP7} which exposes metadata functions.\n * See https://kips.klaytn.com/KIPs/kip-7#metadata-extension\n */\ninterface IKIP7Metadata is IKIP7 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/token/KIP7/IKIP7.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (token/ERC20/IERC20.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the KIP7 standard as defined in the KIP.\n * See http://kips.klaytn.com/KIPs/kip-7-fungible_token\n */\ninterface IKIP7 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev  Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransfer(address recipient, uint256 amount) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n     * and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount,\n        bytes memory data\n    ) external;\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external;\n}\n"
			},
			"@klaytn/contracts/KIP/interfaces/IKIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/interfaces/IKIP13.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IKIP13.sol\";\n"
			},
			"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Klaytn Contract Library v1.0.0 (KIP/utils/introspection/IKIP13.sol)\n// Based on OpenZeppelin Contracts v4.5.0 (utils/introspection/IERC165.sol)\n// https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.5.0\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the KIP13 standard as defined in the KIP.\n *\n * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\n */\ninterface IKIP13 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`.\n     * See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n     * to learn more about how these ids are created.\n     *\n     * Requirements:\n     *\n     * - implementation of this function call must use less than 30 000 gas\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol": {
				"IKIP7": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"safeTransfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event."
							},
							"safeTransfer(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"safeTransfer(address,uint256)": "423f6cef",
							"safeTransfer(address,uint256,bytes)": "eb795549",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP7 standard as defined in the KIP. See http://kips.klaytn.com/KIPs/kip-7-fungible_token\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"safeTransfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event.\"},\"safeTransfer(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol\":\"IKIP7\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol\":{\"keccak256\":\"0x9ad208086b69dffd327a65877e2304ff51b111e7303ef415ff01fd884c714a51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ba07be24ca6b3f976160c3351ecc064e56ec47be4c12cba0c693219130bfba2\",\"dweb:/ipfs/QmR3FykeTjeSedaU8cSvfRoJ7bMscoWvP5FWtu1sfzHXCo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol": {
				"IKIP7Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "onKIP7Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"onKIP7Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IKIP7} `amount` is transferred to this contract via {IKIP7-safeTransfer} or {IKIP7-safeTransferFrom} by `operator` from `from`, this function is called. {onKIP7Received} must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IKIP7Receiver.onKIP7Received.selector`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onKIP7Received(address,address,uint256,bytes)": "9d188c22"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onKIP7Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onKIP7Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IKIP7} `amount` is transferred to this contract via {IKIP7-safeTransfer} or {IKIP7-safeTransferFrom} by `operator` from `from`, this function is called. {onKIP7Received} must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IKIP7Receiver.onKIP7Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol\":\"IKIP7Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol\":{\"keccak256\":\"0x67261ba02258b78860bff7a0a955474f7831d6bb00d7027859b63e0ff1f05a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aacb28d196440a8cde1383f8c988992d5842ca610f2cb13b7f79aae15feb9176\",\"dweb:/ipfs/Qma7fkd2hm9Yho8Jbjb2mp52ziawEiPFpfA6qNEZfp9rwm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol": {
				"IKIP7Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {KIP7} which exposes metadata functions. See https://kips.klaytn.com/KIPs/kip-7#metadata-extension",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"safeTransfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event."
							},
							"safeTransfer(address,uint256,bytes)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"safeTransfer(address,uint256)": "423f6cef",
							"safeTransfer(address,uint256,bytes)": "eb795549",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {KIP7} which exposes metadata functions. See https://kips.klaytn.com/KIPs/kip-7#metadata-extension\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"safeTransfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Emits a {Transfer} event.\"},\"safeTransfer(address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient` and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic. Emits a {Transfer} event.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol\":\"IKIP7Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol\":{\"keccak256\":\"0x9ad208086b69dffd327a65877e2304ff51b111e7303ef415ff01fd884c714a51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ba07be24ca6b3f976160c3351ecc064e56ec47be4c12cba0c693219130bfba2\",\"dweb:/ipfs/QmR3FykeTjeSedaU8cSvfRoJ7bMscoWvP5FWtu1sfzHXCo\"]},\"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol\":{\"keccak256\":\"0xe4687748e1b4c29a35ffbebd8b7fa7e79f6473448d6cf014bd61c93666594151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb4d882f8780e6f51caee73f6b2ba93cad088d53df5c02f511368942c605f79\",\"dweb:/ipfs/QmZqbEf94MFocmaMPN2sSyUbRTEmvqmRAKTdxxnFkE9u4L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol": {
				"IKIP13": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the KIP13 standard as defined in the KIP. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined to learn more about how these ids are created. Requirements: - implementation of this function call must use less than 30 000 gas\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol\":\"IKIP13\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol\":{\"keccak256\":\"0xb63277576f18a3a05c2ec7736bbb7b4a0bd0d12bbd823a4751144d60273a2c46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d5b38071876acadb51cd31254f6eefa30d9240c21b531bdb89648f7475231fd\",\"dweb:/ipfs/QmVvkB9Uwwdq2QJp1uU6eJrcetmaU9zdcNvdg2z9zRmy9e\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@klaytn/contracts/KIP/utils/introspection/KIP13.sol": {
				"KIP13": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IKIP13} interface. Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IKIP13-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IKIP13} interface. Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IKIP13-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":\"KIP13\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/KIP/interfaces/IKIP13.sol\":{\"keccak256\":\"0x538533dcc430536d456ae9e781680ca578ce70bab6b2db7cc18422d2babfd030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2138a452ed0d0e65ec203a3b4cc610c065b8072efdd3d7757914c0597f1a08fb\",\"dweb:/ipfs/QmR5TvG2H5SwbLmDMnbUHfDxxHW6upYLdCbsZtibHVEvEr\"]},\"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol\":{\"keccak256\":\"0xb63277576f18a3a05c2ec7736bbb7b4a0bd0d12bbd823a4751144d60273a2c46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d5b38071876acadb51cd31254f6eefa30d9240c21b531bdb89648f7475231fd\",\"dweb:/ipfs/QmVvkB9Uwwdq2QJp1uU6eJrcetmaU9zdcNvdg2z9zRmy9e\"]},\"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":{\"keccak256\":\"0x9efe61dd73941b281759ca65eaaa0338c9a4105ba8c5d5c5b4998438830c8ed9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://261ed10e8f4c3c6408f119e62b87acc63413ff3c848c4b415e2a596eda29aacf\",\"dweb:/ipfs/QmeaBqThx2gmgG4HrR6Uk6Xjcyx5kUs2SSRMK4nkUZRVX6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@klaytn/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@klaytn/contracts/utils/Address.sol\":194:8255  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@klaytn/contracts/utils/Address.sol\":194:8255  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220720f31867c4ca4d36ba4bd5cda555bdfe4587fc47b7e28c722e04815f1dacf5564736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220720f31867c4ca4d36ba4bd5cda555bdfe4587fc47b7e28c722e04815f1dacf5564736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xF31867C4CA4D36BA4BD5CDA555BDFE4587FC4 PUSH28 0x7E28C722E04815F1DACF5564736F6C63430008120033000000000000 ",
							"sourceMap": "194:8061:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220720f31867c4ca4d36ba4bd5cda555bdfe4587fc47b7e28c722e04815f1dacf5564736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0xF31867C4CA4D36BA4BD5CDA555BDFE4587FC4 PUSH28 0x7E28C722E04815F1DACF5564736F6C63430008120033000000000000 ",
							"sourceMap": "194:8061:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 194,
									"end": 8255,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220720f31867c4ca4d36ba4bd5cda555bdfe4587fc47b7e28c722e04815f1dacf5564736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 194,
											"end": 8255,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@klaytn/contracts/KIP/interfaces/IKIP13.sol",
								"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol",
								"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol",
								"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol",
								"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol",
								"@klaytn/contracts/KIP/utils/introspection/KIP13.sol",
								"@klaytn/contracts/utils/Address.sol",
								"@klaytn/contracts/utils/Context.sol",
								"contracts/KicketToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@klaytn/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@klaytn/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/KicketToken.sol": {
				"KicketToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransfer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IKIP7-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IKIP7-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IKIP7-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {KIP7} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IKIP7-balanceOf} and {IKIP7-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IKIP7-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IKIP7-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"safeTransfer(address,uint256)": {
								"details": "See {IKIP7-safeTransfer}. Emits a {Transfer} event Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`. - if `recipient` is a smart contract, it must implement {IKIP7Receiver}"
							},
							"safeTransfer(address,uint256,bytes)": {
								"details": "Same as {xref-KIP7-safeTransfer-address-uint256-}[`safeTransfer`], with an additional `_data` parameter which is forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients. Emits a {Transfer} event"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IKIP7-safeTransferFrom}. Emits a {Transfer} event Emits an {Approval} event indicating the updated allowance. This is not required by the KIP. See the note at the beginning of {KIP7}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`. - if `recipient` is a smart contract, it must implement {IKIP7Receiver}"
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Same as {xref-KIP7-safeTransferFrom-address-uint256-}[`safeTransferFrom`], with an additional `_data` parameter which is forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients. Emits a {Transfer} event Emits an {Approval} event indicating the updated allowance."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IKIP13-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IKIP7-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IKIP7-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IKIP7-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {KIP7}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/KicketToken.sol\":446:18149  contract KicketToken is Context, KIP13, IKIP7, IKIP7Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/KicketToken.sol\":1066:1179  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/KicketToken.sol\":1140:1145  name_ */\n  dup2\n    /* \"contracts/KicketToken.sol\":1132:1137  _name */\n  0x03\n    /* \"contracts/KicketToken.sol\":1132:1145  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"contracts/KicketToken.sol\":1165:1172  symbol_ */\n  dup1\n    /* \"contracts/KicketToken.sol\":1155:1162  _symbol */\n  0x04\n    /* \"contracts/KicketToken.sol\":1155:1172  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/KicketToken.sol\":1066:1179  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/KicketToken.sol\":446:18149  contract KicketToken is Context, KIP13, IKIP7, IKIP7Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/KicketToken.sol\":446:18149  contract KicketToken is Context, KIP13, IKIP7, IKIP7Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/KicketToken.sol\":446:18149  contract KicketToken is Context, KIP13, IKIP7, IKIP7Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x42842e0e\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xeb795549\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x42842e0e\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x423f6cef\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/KicketToken.sol\":1245:1531  function supportsInterface(bytes4 interfaceId) public view virtual override(KIP13) returns (bool) {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":1596:1694  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":3865:4062  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_5:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":2680:2786  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":4622:4908  function transferFrom(... */\n    tag_7:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":2530:2621  function decimals() public view virtual override returns (uint8) {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":5302:5536  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":6772:6951  function safeTransfer(address recipient, uint256 amount) public virtual override {... */\n    tag_10:\n      tag_54\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_55\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n    tag_54:\n      stop\n        /* \"contracts/KicketToken.sol\":8132:8414  function safeTransferFrom(... */\n    tag_11:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_58:\n      tag_59\n      jump\t// in\n    tag_57:\n      stop\n        /* \"contracts/KicketToken.sol\":2843:2968  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_12:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":1807:1909  function symbol() public view virtual override returns (string memory) {... */\n    tag_13:\n      tag_65\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":6022:6448  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":3163:3352  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_15:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":8757:9070  function safeTransferFrom(... */\n    tag_16:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/KicketToken.sol\":3409:3558  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_17:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/KicketToken.sol\":7212:7444  function safeTransfer(... */\n    tag_18:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contracts/KicketToken.sol\":1245:1531  function supportsInterface(bytes4 interfaceId) public view virtual override(KIP13) returns (bool) {... */\n    tag_25:\n        /* \"contracts/KicketToken.sol\":1337:1341  bool */\n      0x00\n        /* \"contracts/KicketToken.sol\":1387:1410  type(IKIP7).interfaceId */\n      0x6578737100000000000000000000000000000000000000000000000000000000\n        /* \"contracts/KicketToken.sol\":1372:1410  interfaceId == type(IKIP7).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/KicketToken.sol\":1372:1383  interfaceId */\n      dup3\n        /* \"contracts/KicketToken.sol\":1372:1410  interfaceId == type(IKIP7).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/KicketToken.sol\":1372:1472  interfaceId == type(IKIP7).interfaceId ||... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/KicketToken.sol\":1441:1472  type(IKIP7Metadata).interfaceId */\n      0xa219a02500000000000000000000000000000000000000000000000000000000\n        /* \"contracts/KicketToken.sol\":1426:1472  interfaceId == type(IKIP7Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/KicketToken.sol\":1426:1437  interfaceId */\n      dup3\n        /* \"contracts/KicketToken.sol\":1426:1472  interfaceId == type(IKIP7Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/KicketToken.sol\":1372:1472  interfaceId == type(IKIP7).interfaceId ||... */\n    tag_90:\n        /* \"contracts/KicketToken.sol\":1372:1524  interfaceId == type(IKIP7).interfaceId ||... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"contracts/KicketToken.sol\":1488:1524  KIP13.supportsInterface(interfaceId) */\n      tag_92\n        /* \"contracts/KicketToken.sol\":1512:1523  interfaceId */\n      dup3\n        /* \"contracts/KicketToken.sol\":1488:1511  KIP13.supportsInterface */\n      tag_93\n        /* \"contracts/KicketToken.sol\":1488:1524  KIP13.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/KicketToken.sol\":1372:1524  interfaceId == type(IKIP7).interfaceId ||... */\n    tag_91:\n        /* \"contracts/KicketToken.sol\":1353:1524  return... */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":1245:1531  function supportsInterface(bytes4 interfaceId) public view virtual override(KIP13) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":1596:1694  function name() public view virtual override returns (string memory) {... */\n    tag_29:\n        /* \"contracts/KicketToken.sol\":1650:1663  string memory */\n      0x60\n        /* \"contracts/KicketToken.sol\":1682:1687  _name */\n      0x03\n        /* \"contracts/KicketToken.sol\":1675:1687  return _name */\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_97\n      swap1\n      tag_96\n      jump\t// in\n    tag_97:\n      dup1\n      iszero\n      tag_98\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_99\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_98)\n    tag_99:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_100:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_100\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":1596:1694  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":3865:4062  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_35:\n        /* \"contracts/KicketToken.sol\":3948:3952  bool */\n      0x00\n        /* \"contracts/KicketToken.sol\":3964:3977  address owner */\n      dup1\n        /* \"contracts/KicketToken.sol\":3980:3992  _msgSender() */\n      tag_102\n        /* \"contracts/KicketToken.sol\":3980:3990  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":3980:3992  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"contracts/KicketToken.sol\":3964:3992  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":4002:4034  _approve(owner, spender, amount) */\n      tag_104\n        /* \"contracts/KicketToken.sol\":4011:4016  owner */\n      dup2\n        /* \"contracts/KicketToken.sol\":4018:4025  spender */\n      dup6\n        /* \"contracts/KicketToken.sol\":4027:4033  amount */\n      dup6\n        /* \"contracts/KicketToken.sol\":4002:4010  _approve */\n      tag_105\n        /* \"contracts/KicketToken.sol\":4002:4034  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/KicketToken.sol\":4051:4055  true */\n      0x01\n        /* \"contracts/KicketToken.sol\":4044:4055  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/KicketToken.sol\":3865:4062  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":2680:2786  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_38:\n        /* \"contracts/KicketToken.sol\":2741:2748  uint256 */\n      0x00\n        /* \"contracts/KicketToken.sol\":2767:2779  _totalSupply */\n      sload(0x02)\n        /* \"contracts/KicketToken.sol\":2760:2779  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":2680:2786  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":4622:4908  function transferFrom(... */\n    tag_44:\n        /* \"contracts/KicketToken.sol\":4749:4753  bool */\n      0x00\n        /* \"contracts/KicketToken.sol\":4765:4780  address spender */\n      dup1\n        /* \"contracts/KicketToken.sol\":4783:4795  _msgSender() */\n      tag_108\n        /* \"contracts/KicketToken.sol\":4783:4793  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":4783:4795  _msgSender() */\n      jump\t// in\n    tag_108:\n        /* \"contracts/KicketToken.sol\":4765:4795  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":4805:4843  _spendAllowance(from, spender, amount) */\n      tag_109\n        /* \"contracts/KicketToken.sol\":4821:4825  from */\n      dup6\n        /* \"contracts/KicketToken.sol\":4827:4834  spender */\n      dup3\n        /* \"contracts/KicketToken.sol\":4836:4842  amount */\n      dup6\n        /* \"contracts/KicketToken.sol\":4805:4820  _spendAllowance */\n      tag_110\n        /* \"contracts/KicketToken.sol\":4805:4843  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/KicketToken.sol\":4853:4880  _transfer(from, to, amount) */\n      tag_111\n        /* \"contracts/KicketToken.sol\":4863:4867  from */\n      dup6\n        /* \"contracts/KicketToken.sol\":4869:4871  to */\n      dup6\n        /* \"contracts/KicketToken.sol\":4873:4879  amount */\n      dup6\n        /* \"contracts/KicketToken.sol\":4853:4862  _transfer */\n      tag_112\n        /* \"contracts/KicketToken.sol\":4853:4880  _transfer(from, to, amount) */\n      jump\t// in\n    tag_111:\n        /* \"contracts/KicketToken.sol\":4897:4901  true */\n      0x01\n        /* \"contracts/KicketToken.sol\":4890:4901  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/KicketToken.sol\":4622:4908  function transferFrom(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":2530:2621  function decimals() public view virtual override returns (uint8) {... */\n    tag_47:\n        /* \"contracts/KicketToken.sol\":2588:2593  uint8 */\n      0x00\n        /* \"contracts/KicketToken.sol\":2612:2614  18 */\n      0x12\n        /* \"contracts/KicketToken.sol\":2605:2614  return 18 */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":2530:2621  function decimals() public view virtual override returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":5302:5536  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"contracts/KicketToken.sol\":5390:5394  bool */\n      0x00\n        /* \"contracts/KicketToken.sol\":5406:5419  address owner */\n      dup1\n        /* \"contracts/KicketToken.sol\":5422:5434  _msgSender() */\n      tag_115\n        /* \"contracts/KicketToken.sol\":5422:5432  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":5422:5434  _msgSender() */\n      jump\t// in\n    tag_115:\n        /* \"contracts/KicketToken.sol\":5406:5434  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":5444:5508  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_116\n        /* \"contracts/KicketToken.sol\":5453:5458  owner */\n      dup2\n        /* \"contracts/KicketToken.sol\":5460:5467  spender */\n      dup6\n        /* \"contracts/KicketToken.sol\":5497:5507  addedValue */\n      dup6\n        /* \"contracts/KicketToken.sol\":5469:5494  allowance(owner, spender) */\n      tag_117\n        /* \"contracts/KicketToken.sol\":5479:5484  owner */\n      dup6\n        /* \"contracts/KicketToken.sol\":5486:5493  spender */\n      dup10\n        /* \"contracts/KicketToken.sol\":5469:5478  allowance */\n      tag_83\n        /* \"contracts/KicketToken.sol\":5469:5494  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/KicketToken.sol\":5469:5507  allowance(owner, spender) + addedValue */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"contracts/KicketToken.sol\":5444:5452  _approve */\n      tag_105\n        /* \"contracts/KicketToken.sol\":5444:5508  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n    tag_116:\n        /* \"contracts/KicketToken.sol\":5525:5529  true */\n      0x01\n        /* \"contracts/KicketToken.sol\":5518:5529  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/KicketToken.sol\":5302:5536  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":6772:6951  function safeTransfer(address recipient, uint256 amount) public virtual override {... */\n    tag_56:\n        /* \"contracts/KicketToken.sol\":6863:6876  address owner */\n      0x00\n        /* \"contracts/KicketToken.sol\":6879:6891  _msgSender() */\n      tag_121\n        /* \"contracts/KicketToken.sol\":6879:6889  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":6879:6891  _msgSender() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/KicketToken.sol\":6863:6891  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":6901:6944  _safeTransfer(owner, recipient, amount, \"\") */\n      tag_122\n        /* \"contracts/KicketToken.sol\":6915:6920  owner */\n      dup2\n        /* \"contracts/KicketToken.sol\":6922:6931  recipient */\n      dup5\n        /* \"contracts/KicketToken.sol\":6933:6939  amount */\n      dup5\n        /* \"contracts/KicketToken.sol\":6901:6944  _safeTransfer(owner, recipient, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/KicketToken.sol\":6901:6914  _safeTransfer */\n      tag_123\n        /* \"contracts/KicketToken.sol\":6901:6944  _safeTransfer(owner, recipient, amount, \"\") */\n      jump\t// in\n    tag_122:\n        /* \"contracts/KicketToken.sol\":6853:6951  {... */\n      pop\n        /* \"contracts/KicketToken.sol\":6772:6951  function safeTransfer(address recipient, uint256 amount) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":8132:8414  function safeTransferFrom(... */\n    tag_59:\n        /* \"contracts/KicketToken.sol\":8273:8288  address spender */\n      0x00\n        /* \"contracts/KicketToken.sol\":8291:8303  _msgSender() */\n      tag_125\n        /* \"contracts/KicketToken.sol\":8291:8301  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":8291:8303  _msgSender() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/KicketToken.sol\":8273:8303  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":8313:8353  _spendAllowance(sender, spender, amount) */\n      tag_126\n        /* \"contracts/KicketToken.sol\":8329:8335  sender */\n      dup5\n        /* \"contracts/KicketToken.sol\":8337:8344  spender */\n      dup3\n        /* \"contracts/KicketToken.sol\":8346:8352  amount */\n      dup5\n        /* \"contracts/KicketToken.sol\":8313:8328  _spendAllowance */\n      tag_110\n        /* \"contracts/KicketToken.sol\":8313:8353  _spendAllowance(sender, spender, amount) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/KicketToken.sol\":8363:8407  _safeTransfer(sender, recipient, amount, \"\") */\n      tag_127\n        /* \"contracts/KicketToken.sol\":8377:8383  sender */\n      dup5\n        /* \"contracts/KicketToken.sol\":8385:8394  recipient */\n      dup5\n        /* \"contracts/KicketToken.sol\":8396:8402  amount */\n      dup5\n        /* \"contracts/KicketToken.sol\":8363:8407  _safeTransfer(sender, recipient, amount, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/KicketToken.sol\":8363:8376  _safeTransfer */\n      tag_123\n        /* \"contracts/KicketToken.sol\":8363:8407  _safeTransfer(sender, recipient, amount, \"\") */\n      jump\t// in\n    tag_127:\n        /* \"contracts/KicketToken.sol\":8263:8414  {... */\n      pop\n        /* \"contracts/KicketToken.sol\":8132:8414  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":2843:2968  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"contracts/KicketToken.sol\":2917:2924  uint256 */\n      0x00\n        /* \"contracts/KicketToken.sol\":2943:2952  _balances */\n      dup1\n        /* \"contracts/KicketToken.sol\":2943:2961  _balances[account] */\n      0x00\n        /* \"contracts/KicketToken.sol\":2953:2960  account */\n      dup4\n        /* \"contracts/KicketToken.sol\":2943:2961  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KicketToken.sol\":2936:2961  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":2843:2968  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":1807:1909  function symbol() public view virtual override returns (string memory) {... */\n    tag_66:\n        /* \"contracts/KicketToken.sol\":1863:1876  string memory */\n      0x60\n        /* \"contracts/KicketToken.sol\":1895:1902  _symbol */\n      0x04\n        /* \"contracts/KicketToken.sol\":1888:1902  return _symbol */\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_96\n      jump\t// in\n    tag_130:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_131\n      swap1\n      tag_96\n      jump\t// in\n    tag_131:\n      dup1\n      iszero\n      tag_132\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_133\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_132)\n    tag_133:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_134:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_134\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_132:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":1807:1909  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":6022:6448  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_70:\n        /* \"contracts/KicketToken.sol\":6115:6119  bool */\n      0x00\n        /* \"contracts/KicketToken.sol\":6131:6144  address owner */\n      dup1\n        /* \"contracts/KicketToken.sol\":6147:6159  _msgSender() */\n      tag_136\n        /* \"contracts/KicketToken.sol\":6147:6157  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":6147:6159  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \"contracts/KicketToken.sol\":6131:6159  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":6169:6193  uint256 currentAllowance */\n      0x00\n        /* \"contracts/KicketToken.sol\":6196:6221  allowance(owner, spender) */\n      tag_137\n        /* \"contracts/KicketToken.sol\":6206:6211  owner */\n      dup3\n        /* \"contracts/KicketToken.sol\":6213:6220  spender */\n      dup7\n        /* \"contracts/KicketToken.sol\":6196:6205  allowance */\n      tag_83\n        /* \"contracts/KicketToken.sol\":6196:6221  allowance(owner, spender) */\n      jump\t// in\n    tag_137:\n        /* \"contracts/KicketToken.sol\":6169:6221  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":6259:6274  subtractedValue */\n      dup4\n        /* \"contracts/KicketToken.sol\":6239:6255  currentAllowance */\n      dup2\n        /* \"contracts/KicketToken.sol\":6239:6274  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"contracts/KicketToken.sol\":6231:6315  require(currentAllowance >= subtractedValue, \"KIP7: decreased allowance below zero\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/KicketToken.sol\":6349:6409  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_141\n        /* \"contracts/KicketToken.sol\":6358:6363  owner */\n      dup3\n        /* \"contracts/KicketToken.sol\":6365:6372  spender */\n      dup7\n        /* \"contracts/KicketToken.sol\":6393:6408  subtractedValue */\n      dup7\n        /* \"contracts/KicketToken.sol\":6374:6390  currentAllowance */\n      dup5\n        /* \"contracts/KicketToken.sol\":6374:6408  currentAllowance - subtractedValue */\n      sub\n        /* \"contracts/KicketToken.sol\":6349:6357  _approve */\n      tag_105\n        /* \"contracts/KicketToken.sol\":6349:6409  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/KicketToken.sol\":6437:6441  true */\n      0x01\n        /* \"contracts/KicketToken.sol\":6430:6441  return true */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/KicketToken.sol\":6022:6448  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":3163:3352  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_74:\n        /* \"contracts/KicketToken.sol\":3242:3246  bool */\n      0x00\n        /* \"contracts/KicketToken.sol\":3258:3271  address owner */\n      dup1\n        /* \"contracts/KicketToken.sol\":3274:3286  _msgSender() */\n      tag_143\n        /* \"contracts/KicketToken.sol\":3274:3284  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":3274:3286  _msgSender() */\n      jump\t// in\n    tag_143:\n        /* \"contracts/KicketToken.sol\":3258:3286  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":3296:3324  _transfer(owner, to, amount) */\n      tag_144\n        /* \"contracts/KicketToken.sol\":3306:3311  owner */\n      dup2\n        /* \"contracts/KicketToken.sol\":3313:3315  to */\n      dup6\n        /* \"contracts/KicketToken.sol\":3317:3323  amount */\n      dup6\n        /* \"contracts/KicketToken.sol\":3296:3305  _transfer */\n      tag_112\n        /* \"contracts/KicketToken.sol\":3296:3324  _transfer(owner, to, amount) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/KicketToken.sol\":3341:3345  true */\n      0x01\n        /* \"contracts/KicketToken.sol\":3334:3345  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/KicketToken.sol\":3163:3352  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":8757:9070  function safeTransferFrom(... */\n    tag_79:\n        /* \"contracts/KicketToken.sol\":8926:8941  address spender */\n      0x00\n        /* \"contracts/KicketToken.sol\":8944:8956  _msgSender() */\n      tag_146\n        /* \"contracts/KicketToken.sol\":8944:8954  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":8944:8956  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"contracts/KicketToken.sol\":8926:8956  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":8966:9006  _spendAllowance(sender, spender, amount) */\n      tag_147\n        /* \"contracts/KicketToken.sol\":8982:8988  sender */\n      dup6\n        /* \"contracts/KicketToken.sol\":8990:8997  spender */\n      dup3\n        /* \"contracts/KicketToken.sol\":8999:9005  amount */\n      dup6\n        /* \"contracts/KicketToken.sol\":8966:8981  _spendAllowance */\n      tag_110\n        /* \"contracts/KicketToken.sol\":8966:9006  _spendAllowance(sender, spender, amount) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/KicketToken.sol\":9016:9063  _safeTransfer(sender, recipient, amount, _data) */\n      tag_148\n        /* \"contracts/KicketToken.sol\":9030:9036  sender */\n      dup6\n        /* \"contracts/KicketToken.sol\":9038:9047  recipient */\n      dup6\n        /* \"contracts/KicketToken.sol\":9049:9055  amount */\n      dup6\n        /* \"contracts/KicketToken.sol\":9057:9062  _data */\n      dup6\n        /* \"contracts/KicketToken.sol\":9016:9029  _safeTransfer */\n      tag_123\n        /* \"contracts/KicketToken.sol\":9016:9063  _safeTransfer(sender, recipient, amount, _data) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/KicketToken.sol\":8916:9070  {... */\n      pop\n        /* \"contracts/KicketToken.sol\":8757:9070  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":3409:3558  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_83:\n        /* \"contracts/KicketToken.sol\":3498:3505  uint256 */\n      0x00\n        /* \"contracts/KicketToken.sol\":3524:3535  _allowances */\n      0x01\n        /* \"contracts/KicketToken.sol\":3524:3542  _allowances[owner] */\n      0x00\n        /* \"contracts/KicketToken.sol\":3536:3541  owner */\n      dup5\n        /* \"contracts/KicketToken.sol\":3524:3542  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KicketToken.sol\":3524:3551  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/KicketToken.sol\":3543:3550  spender */\n      dup4\n        /* \"contracts/KicketToken.sol\":3524:3551  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KicketToken.sol\":3517:3551  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":3409:3558  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":7212:7444  function safeTransfer(... */\n    tag_88:\n        /* \"contracts/KicketToken.sol\":7353:7366  address owner */\n      0x00\n        /* \"contracts/KicketToken.sol\":7369:7381  _msgSender() */\n      tag_151\n        /* \"contracts/KicketToken.sol\":7369:7379  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":7369:7381  _msgSender() */\n      jump\t// in\n    tag_151:\n        /* \"contracts/KicketToken.sol\":7353:7381  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":7391:7437  _safeTransfer(owner, recipient, amount, _data) */\n      tag_152\n        /* \"contracts/KicketToken.sol\":7405:7410  owner */\n      dup2\n        /* \"contracts/KicketToken.sol\":7412:7421  recipient */\n      dup6\n        /* \"contracts/KicketToken.sol\":7423:7429  amount */\n      dup6\n        /* \"contracts/KicketToken.sol\":7431:7436  _data */\n      dup6\n        /* \"contracts/KicketToken.sol\":7391:7404  _safeTransfer */\n      tag_123\n        /* \"contracts/KicketToken.sol\":7391:7437  _safeTransfer(owner, recipient, amount, _data) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/KicketToken.sol\":7343:7444  {... */\n      pop\n        /* \"contracts/KicketToken.sol\":7212:7444  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":994:1148  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_93:\n        /* \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":1079:1083  bool */\n      0x00\n        /* \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":1117:1141  type(IKIP13).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":1102:1141  interfaceId == type(IKIP13).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":1102:1113  interfaceId */\n      dup3\n        /* \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":1102:1141  interfaceId == type(IKIP13).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":1095:1141  return interfaceId == type(IKIP13).interfaceId */\n      swap1\n      pop\n        /* \"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":994:1148  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@klaytn/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_103:\n        /* \"@klaytn/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@klaytn/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@klaytn/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@klaytn/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":15645:16013  function _approve(... */\n    tag_105:\n        /* \"contracts/KicketToken.sol\":15793:15794  0 */\n      0x00\n        /* \"contracts/KicketToken.sol\":15776:15795  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KicketToken.sol\":15776:15781  owner */\n      dup4\n        /* \"contracts/KicketToken.sol\":15776:15795  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/KicketToken.sol\":15768:15835  require(owner != address(0), \"KIP7: approve from the zero address\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_156:\n        /* \"contracts/KicketToken.sol\":15872:15873  0 */\n      0x00\n        /* \"contracts/KicketToken.sol\":15853:15874  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KicketToken.sol\":15853:15860  spender */\n      dup3\n        /* \"contracts/KicketToken.sol\":15853:15874  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/KicketToken.sol\":15845:15912  require(spender != address(0), \"KIP7: approve to the zero address\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap1\n      tag_161\n      jump\t// in\n    tag_160:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_159:\n        /* \"contracts/KicketToken.sol\":15953:15959  amount */\n      dup1\n        /* \"contracts/KicketToken.sol\":15923:15934  _allowances */\n      0x01\n        /* \"contracts/KicketToken.sol\":15923:15941  _allowances[owner] */\n      0x00\n        /* \"contracts/KicketToken.sol\":15935:15940  owner */\n      dup6\n        /* \"contracts/KicketToken.sol\":15923:15941  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KicketToken.sol\":15923:15950  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/KicketToken.sol\":15942:15949  spender */\n      dup5\n        /* \"contracts/KicketToken.sol\":15923:15950  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KicketToken.sol\":15923:15959  _allowances[owner][spender] = amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KicketToken.sol\":15990:15997  spender */\n      dup2\n        /* \"contracts/KicketToken.sol\":15974:16006  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KicketToken.sol\":15983:15988  owner */\n      dup4\n        /* \"contracts/KicketToken.sol\":15974:16006  Approval(owner, spender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/KicketToken.sol\":15999:16005  amount */\n      dup4\n        /* \"contracts/KicketToken.sol\":15974:16006  Approval(owner, spender, amount) */\n      mload(0x40)\n      tag_162\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/KicketToken.sol\":15645:16013  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":16294:16734  function _spendAllowance(... */\n    tag_110:\n        /* \"contracts/KicketToken.sol\":16424:16448  uint256 currentAllowance */\n      0x00\n        /* \"contracts/KicketToken.sol\":16451:16476  allowance(owner, spender) */\n      tag_164\n        /* \"contracts/KicketToken.sol\":16461:16466  owner */\n      dup5\n        /* \"contracts/KicketToken.sol\":16468:16475  spender */\n      dup5\n        /* \"contracts/KicketToken.sol\":16451:16460  allowance */\n      tag_83\n        /* \"contracts/KicketToken.sol\":16451:16476  allowance(owner, spender) */\n      jump\t// in\n    tag_164:\n        /* \"contracts/KicketToken.sol\":16424:16476  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":16510:16527  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/KicketToken.sol\":16490:16506  currentAllowance */\n      dup2\n        /* \"contracts/KicketToken.sol\":16490:16527  currentAllowance != type(uint256).max */\n      eq\n        /* \"contracts/KicketToken.sol\":16486:16728  if (currentAllowance != type(uint256).max) {... */\n      tag_165\n      jumpi\n        /* \"contracts/KicketToken.sol\":16571:16577  amount */\n      dup2\n        /* \"contracts/KicketToken.sol\":16551:16567  currentAllowance */\n      dup2\n        /* \"contracts/KicketToken.sol\":16551:16577  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"contracts/KicketToken.sol\":16543:16610  require(currentAllowance >= amount, \"KIP7: insufficient allowance\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_166:\n        /* \"contracts/KicketToken.sol\":16652:16703  _approve(owner, spender, currentAllowance - amount) */\n      tag_169\n        /* \"contracts/KicketToken.sol\":16661:16666  owner */\n      dup5\n        /* \"contracts/KicketToken.sol\":16668:16675  spender */\n      dup5\n        /* \"contracts/KicketToken.sol\":16696:16702  amount */\n      dup5\n        /* \"contracts/KicketToken.sol\":16677:16693  currentAllowance */\n      dup5\n        /* \"contracts/KicketToken.sol\":16677:16702  currentAllowance - amount */\n      sub\n        /* \"contracts/KicketToken.sol\":16652:16660  _approve */\n      tag_105\n        /* \"contracts/KicketToken.sol\":16652:16703  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/KicketToken.sol\":16486:16728  if (currentAllowance != type(uint256).max) {... */\n    tag_165:\n        /* \"contracts/KicketToken.sol\":16414:16734  {... */\n      pop\n        /* \"contracts/KicketToken.sol\":16294:16734  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":10617:11265  function _transfer(... */\n    tag_112:\n        /* \"contracts/KicketToken.sol\":10759:10760  0 */\n      0x00\n        /* \"contracts/KicketToken.sol\":10743:10761  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KicketToken.sol\":10743:10747  from */\n      dup4\n        /* \"contracts/KicketToken.sol\":10743:10761  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/KicketToken.sol\":10735:10802  require(from != address(0), \"KIP7: transfer from the zero address\") */\n      tag_171\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap1\n      tag_173\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_171:\n        /* \"contracts/KicketToken.sol\":10834:10835  0 */\n      0x00\n        /* \"contracts/KicketToken.sol\":10820:10836  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KicketToken.sol\":10820:10822  to */\n      dup3\n        /* \"contracts/KicketToken.sol\":10820:10836  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/KicketToken.sol\":10812:10875  require(to != address(0), \"KIP7: transfer to the zero address\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"contracts/KicketToken.sol\":10886:10924  _beforeTokenTransfer(from, to, amount) */\n      tag_177\n        /* \"contracts/KicketToken.sol\":10907:10911  from */\n      dup4\n        /* \"contracts/KicketToken.sol\":10913:10915  to */\n      dup4\n        /* \"contracts/KicketToken.sol\":10917:10923  amount */\n      dup4\n        /* \"contracts/KicketToken.sol\":10886:10906  _beforeTokenTransfer */\n      tag_178\n        /* \"contracts/KicketToken.sol\":10886:10924  _beforeTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/KicketToken.sol\":10935:10954  uint256 fromBalance */\n      0x00\n        /* \"contracts/KicketToken.sol\":10957:10966  _balances */\n      dup1\n        /* \"contracts/KicketToken.sol\":10957:10972  _balances[from] */\n      0x00\n        /* \"contracts/KicketToken.sol\":10967:10971  from */\n      dup6\n        /* \"contracts/KicketToken.sol\":10957:10972  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/KicketToken.sol\":10935:10972  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":11005:11011  amount */\n      dup2\n        /* \"contracts/KicketToken.sol\":10990:11001  fromBalance */\n      dup2\n        /* \"contracts/KicketToken.sol\":10990:11011  fromBalance >= amount */\n      lt\n      iszero\n        /* \"contracts/KicketToken.sol\":10982:11053  require(fromBalance >= amount, \"KIP7: transfer amount exceeds balance\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"contracts/KicketToken.sol\":11119:11125  amount */\n      dup2\n        /* \"contracts/KicketToken.sol\":11105:11116  fromBalance */\n      dup2\n        /* \"contracts/KicketToken.sol\":11105:11125  fromBalance - amount */\n      sub\n        /* \"contracts/KicketToken.sol\":11087:11096  _balances */\n      0x00\n        /* \"contracts/KicketToken.sol\":11087:11102  _balances[from] */\n      dup1\n        /* \"contracts/KicketToken.sol\":11097:11101  from */\n      dup7\n        /* \"contracts/KicketToken.sol\":11087:11102  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/KicketToken.sol\":11087:11125  _balances[from] = fromBalance - amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KicketToken.sol\":11162:11168  amount */\n      dup2\n        /* \"contracts/KicketToken.sol\":11145:11154  _balances */\n      0x00\n        /* \"contracts/KicketToken.sol\":11145:11158  _balances[to] */\n      dup1\n        /* \"contracts/KicketToken.sol\":11155:11157  to */\n      dup6\n        /* \"contracts/KicketToken.sol\":11145:11158  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/KicketToken.sol\":11145:11168  _balances[to] += amount */\n      dup3\n      dup3\n      sload\n      tag_182\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_182:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/KicketToken.sol\":11199:11201  to */\n      dup3\n        /* \"contracts/KicketToken.sol\":11184:11210  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/KicketToken.sol\":11193:11197  from */\n      dup5\n        /* \"contracts/KicketToken.sol\":11184:11210  Transfer(from, to, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/KicketToken.sol\":11203:11209  amount */\n      dup5\n        /* \"contracts/KicketToken.sol\":11184:11210  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_183\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/KicketToken.sol\":11221:11258  _afterTokenTransfer(from, to, amount) */\n      tag_184\n        /* \"contracts/KicketToken.sol\":11241:11245  from */\n      dup5\n        /* \"contracts/KicketToken.sol\":11247:11249  to */\n      dup5\n        /* \"contracts/KicketToken.sol\":11251:11257  amount */\n      dup5\n        /* \"contracts/KicketToken.sol\":11221:11240  _afterTokenTransfer */\n      tag_185\n        /* \"contracts/KicketToken.sol\":11221:11258  _afterTokenTransfer(from, to, amount) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/KicketToken.sol\":10725:11265  {... */\n      pop\n        /* \"contracts/KicketToken.sol\":10617:11265  function _transfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":9855:10154  function _safeTransfer(... */\n    tag_123:\n        /* \"contracts/KicketToken.sol\":10005:10032  _transfer(from, to, amount) */\n      tag_187\n        /* \"contracts/KicketToken.sol\":10015:10019  from */\n      dup5\n        /* \"contracts/KicketToken.sol\":10021:10023  to */\n      dup5\n        /* \"contracts/KicketToken.sol\":10025:10031  amount */\n      dup5\n        /* \"contracts/KicketToken.sol\":10005:10014  _transfer */\n      tag_112\n        /* \"contracts/KicketToken.sol\":10005:10032  _transfer(from, to, amount) */\n      jump\t// in\n    tag_187:\n        /* \"contracts/KicketToken.sol\":10050:10095  _checkOnKIP7Received(from, to, amount, _data) */\n      tag_188\n        /* \"contracts/KicketToken.sol\":10071:10075  from */\n      dup5\n        /* \"contracts/KicketToken.sol\":10077:10079  to */\n      dup5\n        /* \"contracts/KicketToken.sol\":10081:10087  amount */\n      dup5\n        /* \"contracts/KicketToken.sol\":10089:10094  _data */\n      dup5\n        /* \"contracts/KicketToken.sol\":10050:10070  _checkOnKIP7Received */\n      tag_189\n        /* \"contracts/KicketToken.sol\":10050:10095  _checkOnKIP7Received(from, to, amount, _data) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/KicketToken.sol\":10042:10147  require(_checkOnKIP7Received(from, to, amount, _data), \"KIP7: transfer to non IKIP7Receiver implementer\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"contracts/KicketToken.sol\":9855:10154  function _safeTransfer(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":17318:17439  function _beforeTokenTransfer(... */\n    tag_178:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":18027:18147  function _afterTokenTransfer(... */\n    tag_185:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/KicketToken.sol\":13566:14328  function _checkOnKIP7Received(... */\n    tag_189:\n        /* \"contracts/KicketToken.sol\":13713:13717  bool */\n      0x00\n        /* \"contracts/KicketToken.sol\":13733:13748  to.isContract() */\n      tag_196\n        /* \"contracts/KicketToken.sol\":13733:13735  to */\n      dup5\n        /* \"contracts/KicketToken.sol\":13733:13746  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_197\n        /* \"contracts/KicketToken.sol\":13733:13748  to.isContract() */\n      jump\t// in\n    tag_196:\n        /* \"contracts/KicketToken.sol\":13729:14322  if (to.isContract()) {... */\n      iszero\n      tag_198\n      jumpi\n        /* \"contracts/KicketToken.sol\":13782:13784  to */\n      dup4\n        /* \"contracts/KicketToken.sol\":13768:13800  IKIP7Receiver(to).onKIP7Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9d188c22\n        /* \"contracts/KicketToken.sol\":13801:13813  _msgSender() */\n      tag_199\n        /* \"contracts/KicketToken.sol\":13801:13811  _msgSender */\n      tag_103\n        /* \"contracts/KicketToken.sol\":13801:13813  _msgSender() */\n      jump\t// in\n    tag_199:\n        /* \"contracts/KicketToken.sol\":13815:13819  from */\n      dup8\n        /* \"contracts/KicketToken.sol\":13821:13827  amount */\n      dup7\n        /* \"contracts/KicketToken.sol\":13829:13834  _data */\n      dup7\n        /* \"contracts/KicketToken.sol\":13768:13835  IKIP7Receiver(to).onKIP7Received(_msgSender(), from, amount, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_202\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_203\n      swap2\n      swap1\n      tag_204\n      jump\t// in\n    tag_203:\n      0x01\n    tag_202:\n        /* \"contracts/KicketToken.sol\":13764:14270  try IKIP7Receiver(to).onKIP7Received(_msgSender(), from, amount, _data) returns (bytes4 retval) {... */\n      tag_205\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_210\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_209)\n    tag_210:\n      0x60\n      swap2\n      pop\n    tag_209:\n      pop\n        /* \"contracts/KicketToken.sol\":14015:14016  0 */\n      0x00\n        /* \"contracts/KicketToken.sol\":13998:14004  reason */\n      dup2\n        /* \"contracts/KicketToken.sol\":13998:14011  reason.length */\n      mload\n        /* \"contracts/KicketToken.sol\":13998:14016  reason.length == 0 */\n      sub\n        /* \"contracts/KicketToken.sol\":13994:14256  if (reason.length == 0) {... */\n      tag_211\n      jumpi\n        /* \"contracts/KicketToken.sol\":14040:14096  revert(\"KIP7: transfer to non KIP7Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/KicketToken.sol\":13994:14256  if (reason.length == 0) {... */\n    tag_211:\n        /* \"contracts/KicketToken.sol\":14208:14214  reason */\n      dup1\n        /* \"contracts/KicketToken.sol\":14202:14215  mload(reason) */\n      mload\n        /* \"contracts/KicketToken.sol\":14193:14199  reason */\n      dup2\n        /* \"contracts/KicketToken.sol\":14189:14191  32 */\n      0x20\n        /* \"contracts/KicketToken.sol\":14185:14200  add(32, reason) */\n      add\n        /* \"contracts/KicketToken.sol\":14178:14216  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"contracts/KicketToken.sol\":13764:14270  try IKIP7Receiver(to).onKIP7Received(_msgSender(), from, amount, _data) returns (bytes4 retval) {... */\n    tag_205:\n        /* \"contracts/KicketToken.sol\":13895:13932  IKIP7Receiver.onKIP7Received.selector */\n      shl(0xe0, 0x9d188c22)\n        /* \"contracts/KicketToken.sol\":13885:13932  retval == IKIP7Receiver.onKIP7Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/KicketToken.sol\":13885:13891  retval */\n      dup2\n        /* \"contracts/KicketToken.sol\":13885:13932  retval == IKIP7Receiver.onKIP7Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/KicketToken.sol\":13878:13932  return retval == IKIP7Receiver.onKIP7Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_195)\n        /* \"contracts/KicketToken.sol\":13729:14322  if (to.isContract()) {... */\n    tag_198:\n        /* \"contracts/KicketToken.sol\":14307:14311  true */\n      0x01\n        /* \"contracts/KicketToken.sol\":14300:14311  return true */\n      swap1\n      pop\n        /* \"contracts/KicketToken.sol\":13566:14328  function _checkOnKIP7Received(... */\n    tag_195:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@klaytn/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_197:\n        /* \"@klaytn/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@klaytn/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@klaytn/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@klaytn/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@klaytn/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@klaytn/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@klaytn/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_218:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_219:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_220:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_221:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_222:\n        /* \"#utility.yul\":561:584   */\n      tag_281\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_221\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_282:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_223:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_284\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_222\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_24:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_286\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_287\n      tag_219\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":833:952   */\n    tag_286:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_288\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_223\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_224:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_225:\n        /* \"#utility.yul\":1268:1289   */\n      tag_291\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_224\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_27:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_293\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_225\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_226:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_227:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_228:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_297:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_297)\n    tag_299:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_229:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_230:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_302\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_226\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":2329:2400   */\n      tag_303\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_227\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_304\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_228\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":2499:2528   */\n      tag_305\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_229\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_31:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_307\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_230\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2986   */\n    tag_231:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2937:2979   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2930:2935   */\n      dup3\n        /* \"#utility.yul\":2926:2980   */\n      and\n        /* \"#utility.yul\":2915:2980   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2986   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2992:3088   */\n    tag_232:\n        /* \"#utility.yul\":3029:3036   */\n      0x00\n        /* \"#utility.yul\":3058:3082   */\n      tag_310\n        /* \"#utility.yul\":3076:3081   */\n      dup3\n        /* \"#utility.yul\":3058:3082   */\n      tag_231\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":3047:3082   */\n      swap1\n      pop\n        /* \"#utility.yul\":2992:3088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3094:3216   */\n    tag_233:\n        /* \"#utility.yul\":3167:3191   */\n      tag_312\n        /* \"#utility.yul\":3185:3190   */\n      dup2\n        /* \"#utility.yul\":3167:3191   */\n      tag_232\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":3160:3165   */\n      dup2\n        /* \"#utility.yul\":3157:3192   */\n      eq\n        /* \"#utility.yul\":3147:3210   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3206:3207   */\n      0x00\n        /* \"#utility.yul\":3203:3204   */\n      dup1\n        /* \"#utility.yul\":3196:3208   */\n      revert\n        /* \"#utility.yul\":3147:3210   */\n    tag_313:\n        /* \"#utility.yul\":3094:3216   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3222:3361   */\n    tag_234:\n        /* \"#utility.yul\":3268:3273   */\n      0x00\n        /* \"#utility.yul\":3306:3312   */\n      dup2\n        /* \"#utility.yul\":3293:3313   */\n      calldataload\n        /* \"#utility.yul\":3284:3313   */\n      swap1\n      pop\n        /* \"#utility.yul\":3322:3355   */\n      tag_315\n        /* \"#utility.yul\":3349:3354   */\n      dup2\n        /* \"#utility.yul\":3322:3355   */\n      tag_233\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":3222:3361   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3367:3444   */\n    tag_235:\n        /* \"#utility.yul\":3404:3411   */\n      0x00\n        /* \"#utility.yul\":3433:3438   */\n      dup2\n        /* \"#utility.yul\":3422:3438   */\n      swap1\n      pop\n        /* \"#utility.yul\":3367:3444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3450:3572   */\n    tag_236:\n        /* \"#utility.yul\":3523:3547   */\n      tag_318\n        /* \"#utility.yul\":3541:3546   */\n      dup2\n        /* \"#utility.yul\":3523:3547   */\n      tag_235\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":3516:3521   */\n      dup2\n        /* \"#utility.yul\":3513:3548   */\n      eq\n        /* \"#utility.yul\":3503:3566   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":3562:3563   */\n      0x00\n        /* \"#utility.yul\":3559:3560   */\n      dup1\n        /* \"#utility.yul\":3552:3564   */\n      revert\n        /* \"#utility.yul\":3503:3566   */\n    tag_319:\n        /* \"#utility.yul\":3450:3572   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3578:3717   */\n    tag_237:\n        /* \"#utility.yul\":3624:3629   */\n      0x00\n        /* \"#utility.yul\":3662:3668   */\n      dup2\n        /* \"#utility.yul\":3649:3669   */\n      calldataload\n        /* \"#utility.yul\":3640:3669   */\n      swap1\n      pop\n        /* \"#utility.yul\":3678:3711   */\n      tag_321\n        /* \"#utility.yul\":3705:3710   */\n      dup2\n        /* \"#utility.yul\":3678:3711   */\n      tag_236\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":3578:3717   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3723:4197   */\n    tag_34:\n        /* \"#utility.yul\":3791:3797   */\n      0x00\n        /* \"#utility.yul\":3799:3805   */\n      dup1\n        /* \"#utility.yul\":3848:3850   */\n      0x40\n        /* \"#utility.yul\":3836:3845   */\n      dup4\n        /* \"#utility.yul\":3827:3834   */\n      dup6\n        /* \"#utility.yul\":3823:3846   */\n      sub\n        /* \"#utility.yul\":3819:3851   */\n      slt\n        /* \"#utility.yul\":3816:3935   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":3854:3933   */\n      tag_324\n      tag_219\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":3816:3935   */\n    tag_323:\n        /* \"#utility.yul\":3974:3975   */\n      0x00\n        /* \"#utility.yul\":3999:4052   */\n      tag_325\n        /* \"#utility.yul\":4044:4051   */\n      dup6\n        /* \"#utility.yul\":4035:4041   */\n      dup3\n        /* \"#utility.yul\":4024:4033   */\n      dup7\n        /* \"#utility.yul\":4020:4042   */\n      add\n        /* \"#utility.yul\":3999:4052   */\n      tag_234\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":3989:4052   */\n      swap3\n      pop\n        /* \"#utility.yul\":3945:4062   */\n      pop\n        /* \"#utility.yul\":4101:4103   */\n      0x20\n        /* \"#utility.yul\":4127:4180   */\n      tag_326\n        /* \"#utility.yul\":4172:4179   */\n      dup6\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4152:4161   */\n      dup7\n        /* \"#utility.yul\":4148:4170   */\n      add\n        /* \"#utility.yul\":4127:4180   */\n      tag_237\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4117:4180   */\n      swap2\n      pop\n        /* \"#utility.yul\":4072:4190   */\n      pop\n        /* \"#utility.yul\":3723:4197   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4203:4321   */\n    tag_238:\n        /* \"#utility.yul\":4290:4314   */\n      tag_328\n        /* \"#utility.yul\":4308:4313   */\n      dup2\n        /* \"#utility.yul\":4290:4314   */\n      tag_235\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":4285:4288   */\n      dup3\n        /* \"#utility.yul\":4278:4315   */\n      mstore\n        /* \"#utility.yul\":4203:4321   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4327:4549   */\n    tag_40:\n        /* \"#utility.yul\":4420:4424   */\n      0x00\n        /* \"#utility.yul\":4458:4460   */\n      0x20\n        /* \"#utility.yul\":4447:4456   */\n      dup3\n        /* \"#utility.yul\":4443:4461   */\n      add\n        /* \"#utility.yul\":4435:4461   */\n      swap1\n      pop\n        /* \"#utility.yul\":4471:4542   */\n      tag_330\n        /* \"#utility.yul\":4539:4540   */\n      0x00\n        /* \"#utility.yul\":4528:4537   */\n      dup4\n        /* \"#utility.yul\":4524:4541   */\n      add\n        /* \"#utility.yul\":4515:4521   */\n      dup5\n        /* \"#utility.yul\":4471:4542   */\n      tag_238\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":4327:4549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4555:5174   */\n    tag_43:\n        /* \"#utility.yul\":4632:4638   */\n      0x00\n        /* \"#utility.yul\":4640:4646   */\n      dup1\n        /* \"#utility.yul\":4648:4654   */\n      0x00\n        /* \"#utility.yul\":4697:4699   */\n      0x60\n        /* \"#utility.yul\":4685:4694   */\n      dup5\n        /* \"#utility.yul\":4676:4683   */\n      dup7\n        /* \"#utility.yul\":4672:4695   */\n      sub\n        /* \"#utility.yul\":4668:4700   */\n      slt\n        /* \"#utility.yul\":4665:4784   */\n      iszero\n      tag_332\n      jumpi\n        /* \"#utility.yul\":4703:4782   */\n      tag_333\n      tag_219\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":4665:4784   */\n    tag_332:\n        /* \"#utility.yul\":4823:4824   */\n      0x00\n        /* \"#utility.yul\":4848:4901   */\n      tag_334\n        /* \"#utility.yul\":4893:4900   */\n      dup7\n        /* \"#utility.yul\":4884:4890   */\n      dup3\n        /* \"#utility.yul\":4873:4882   */\n      dup8\n        /* \"#utility.yul\":4869:4891   */\n      add\n        /* \"#utility.yul\":4848:4901   */\n      tag_234\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":4838:4901   */\n      swap4\n      pop\n        /* \"#utility.yul\":4794:4911   */\n      pop\n        /* \"#utility.yul\":4950:4952   */\n      0x20\n        /* \"#utility.yul\":4976:5029   */\n      tag_335\n        /* \"#utility.yul\":5021:5028   */\n      dup7\n        /* \"#utility.yul\":5012:5018   */\n      dup3\n        /* \"#utility.yul\":5001:5010   */\n      dup8\n        /* \"#utility.yul\":4997:5019   */\n      add\n        /* \"#utility.yul\":4976:5029   */\n      tag_234\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4966:5029   */\n      swap3\n      pop\n        /* \"#utility.yul\":4921:5039   */\n      pop\n        /* \"#utility.yul\":5078:5080   */\n      0x40\n        /* \"#utility.yul\":5104:5157   */\n      tag_336\n        /* \"#utility.yul\":5149:5156   */\n      dup7\n        /* \"#utility.yul\":5140:5146   */\n      dup3\n        /* \"#utility.yul\":5129:5138   */\n      dup8\n        /* \"#utility.yul\":5125:5147   */\n      add\n        /* \"#utility.yul\":5104:5157   */\n      tag_237\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5094:5157   */\n      swap2\n      pop\n        /* \"#utility.yul\":5049:5167   */\n      pop\n        /* \"#utility.yul\":4555:5174   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5180:5266   */\n    tag_239:\n        /* \"#utility.yul\":5215:5222   */\n      0x00\n        /* \"#utility.yul\":5255:5259   */\n      0xff\n        /* \"#utility.yul\":5248:5253   */\n      dup3\n        /* \"#utility.yul\":5244:5260   */\n      and\n        /* \"#utility.yul\":5233:5260   */\n      swap1\n      pop\n        /* \"#utility.yul\":5180:5266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5272:5384   */\n    tag_240:\n        /* \"#utility.yul\":5355:5377   */\n      tag_339\n        /* \"#utility.yul\":5371:5376   */\n      dup2\n        /* \"#utility.yul\":5355:5377   */\n      tag_239\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":5350:5353   */\n      dup3\n        /* \"#utility.yul\":5343:5378   */\n      mstore\n        /* \"#utility.yul\":5272:5384   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5390:5604   */\n    tag_49:\n        /* \"#utility.yul\":5479:5483   */\n      0x00\n        /* \"#utility.yul\":5517:5519   */\n      0x20\n        /* \"#utility.yul\":5506:5515   */\n      dup3\n        /* \"#utility.yul\":5502:5520   */\n      add\n        /* \"#utility.yul\":5494:5520   */\n      swap1\n      pop\n        /* \"#utility.yul\":5530:5597   */\n      tag_341\n        /* \"#utility.yul\":5594:5595   */\n      0x00\n        /* \"#utility.yul\":5583:5592   */\n      dup4\n        /* \"#utility.yul\":5579:5596   */\n      add\n        /* \"#utility.yul\":5570:5576   */\n      dup5\n        /* \"#utility.yul\":5530:5597   */\n      tag_240\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":5390:5604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5610:5939   */\n    tag_62:\n        /* \"#utility.yul\":5669:5675   */\n      0x00\n        /* \"#utility.yul\":5718:5720   */\n      0x20\n        /* \"#utility.yul\":5706:5715   */\n      dup3\n        /* \"#utility.yul\":5697:5704   */\n      dup5\n        /* \"#utility.yul\":5693:5716   */\n      sub\n        /* \"#utility.yul\":5689:5721   */\n      slt\n        /* \"#utility.yul\":5686:5805   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":5724:5803   */\n      tag_344\n      tag_219\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":5686:5805   */\n    tag_343:\n        /* \"#utility.yul\":5844:5845   */\n      0x00\n        /* \"#utility.yul\":5869:5922   */\n      tag_345\n        /* \"#utility.yul\":5914:5921   */\n      dup5\n        /* \"#utility.yul\":5905:5911   */\n      dup3\n        /* \"#utility.yul\":5894:5903   */\n      dup6\n        /* \"#utility.yul\":5890:5912   */\n      add\n        /* \"#utility.yul\":5869:5922   */\n      tag_234\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":5859:5922   */\n      swap2\n      pop\n        /* \"#utility.yul\":5815:5932   */\n      pop\n        /* \"#utility.yul\":5610:5939   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5945:6062   */\n    tag_241:\n        /* \"#utility.yul\":6054:6055   */\n      0x00\n        /* \"#utility.yul\":6051:6052   */\n      dup1\n        /* \"#utility.yul\":6044:6056   */\n      revert\n        /* \"#utility.yul\":6068:6185   */\n    tag_242:\n        /* \"#utility.yul\":6177:6178   */\n      0x00\n        /* \"#utility.yul\":6174:6175   */\n      dup1\n        /* \"#utility.yul\":6167:6179   */\n      revert\n        /* \"#utility.yul\":6191:6371   */\n    tag_243:\n        /* \"#utility.yul\":6239:6316   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6236:6237   */\n      0x00\n        /* \"#utility.yul\":6229:6317   */\n      mstore\n        /* \"#utility.yul\":6336:6340   */\n      0x41\n        /* \"#utility.yul\":6333:6334   */\n      0x04\n        /* \"#utility.yul\":6326:6341   */\n      mstore\n        /* \"#utility.yul\":6360:6364   */\n      0x24\n        /* \"#utility.yul\":6357:6358   */\n      0x00\n        /* \"#utility.yul\":6350:6365   */\n      revert\n        /* \"#utility.yul\":6377:6658   */\n    tag_244:\n        /* \"#utility.yul\":6460:6487   */\n      tag_350\n        /* \"#utility.yul\":6482:6486   */\n      dup3\n        /* \"#utility.yul\":6460:6487   */\n      tag_229\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":6452:6458   */\n      dup2\n        /* \"#utility.yul\":6448:6488   */\n      add\n        /* \"#utility.yul\":6590:6596   */\n      dup2\n        /* \"#utility.yul\":6578:6588   */\n      dup2\n        /* \"#utility.yul\":6575:6597   */\n      lt\n        /* \"#utility.yul\":6554:6572   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6542:6552   */\n      dup3\n        /* \"#utility.yul\":6539:6573   */\n      gt\n        /* \"#utility.yul\":6536:6598   */\n      or\n        /* \"#utility.yul\":6533:6621   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":6601:6619   */\n      tag_352\n      tag_243\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":6533:6621   */\n    tag_351:\n        /* \"#utility.yul\":6641:6651   */\n      dup1\n        /* \"#utility.yul\":6637:6639   */\n      0x40\n        /* \"#utility.yul\":6630:6652   */\n      mstore\n        /* \"#utility.yul\":6420:6658   */\n      pop\n        /* \"#utility.yul\":6377:6658   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6664:6793   */\n    tag_245:\n        /* \"#utility.yul\":6698:6704   */\n      0x00\n        /* \"#utility.yul\":6725:6745   */\n      tag_354\n      tag_218\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":6715:6745   */\n      swap1\n      pop\n        /* \"#utility.yul\":6754:6787   */\n      tag_355\n        /* \"#utility.yul\":6782:6786   */\n      dup3\n        /* \"#utility.yul\":6774:6780   */\n      dup3\n        /* \"#utility.yul\":6754:6787   */\n      tag_244\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":6664:6793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6799:7106   */\n    tag_246:\n        /* \"#utility.yul\":6860:6864   */\n      0x00\n        /* \"#utility.yul\":6950:6968   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6942:6948   */\n      dup3\n        /* \"#utility.yul\":6939:6969   */\n      gt\n        /* \"#utility.yul\":6936:6992   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":6972:6990   */\n      tag_358\n      tag_243\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":6936:6992   */\n    tag_357:\n        /* \"#utility.yul\":7010:7039   */\n      tag_359\n        /* \"#utility.yul\":7032:7038   */\n      dup3\n        /* \"#utility.yul\":7010:7039   */\n      tag_229\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":7002:7039   */\n      swap1\n      pop\n        /* \"#utility.yul\":7094:7098   */\n      0x20\n        /* \"#utility.yul\":7088:7092   */\n      dup2\n        /* \"#utility.yul\":7084:7099   */\n      add\n        /* \"#utility.yul\":7076:7099   */\n      swap1\n      pop\n        /* \"#utility.yul\":6799:7106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7112:7258   */\n    tag_247:\n        /* \"#utility.yul\":7209:7215   */\n      dup3\n        /* \"#utility.yul\":7204:7207   */\n      dup2\n        /* \"#utility.yul\":7199:7202   */\n      dup4\n        /* \"#utility.yul\":7186:7216   */\n      calldatacopy\n        /* \"#utility.yul\":7250:7251   */\n      0x00\n        /* \"#utility.yul\":7241:7247   */\n      dup4\n        /* \"#utility.yul\":7236:7239   */\n      dup4\n        /* \"#utility.yul\":7232:7248   */\n      add\n        /* \"#utility.yul\":7225:7252   */\n      mstore\n        /* \"#utility.yul\":7112:7258   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7264:7687   */\n    tag_248:\n        /* \"#utility.yul\":7341:7346   */\n      0x00\n        /* \"#utility.yul\":7366:7431   */\n      tag_362\n        /* \"#utility.yul\":7382:7430   */\n      tag_363\n        /* \"#utility.yul\":7423:7429   */\n      dup5\n        /* \"#utility.yul\":7382:7430   */\n      tag_246\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":7366:7431   */\n      tag_245\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":7357:7431   */\n      swap1\n      pop\n        /* \"#utility.yul\":7454:7460   */\n      dup3\n        /* \"#utility.yul\":7447:7452   */\n      dup2\n        /* \"#utility.yul\":7440:7461   */\n      mstore\n        /* \"#utility.yul\":7492:7496   */\n      0x20\n        /* \"#utility.yul\":7485:7490   */\n      dup2\n        /* \"#utility.yul\":7481:7497   */\n      add\n        /* \"#utility.yul\":7530:7533   */\n      dup5\n        /* \"#utility.yul\":7521:7527   */\n      dup5\n        /* \"#utility.yul\":7516:7519   */\n      dup5\n        /* \"#utility.yul\":7512:7528   */\n      add\n        /* \"#utility.yul\":7509:7534   */\n      gt\n        /* \"#utility.yul\":7506:7618   */\n      iszero\n      tag_364\n      jumpi\n        /* \"#utility.yul\":7537:7616   */\n      tag_365\n      tag_242\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":7506:7618   */\n    tag_364:\n        /* \"#utility.yul\":7627:7681   */\n      tag_366\n        /* \"#utility.yul\":7674:7680   */\n      dup5\n        /* \"#utility.yul\":7669:7672   */\n      dup3\n        /* \"#utility.yul\":7664:7667   */\n      dup6\n        /* \"#utility.yul\":7627:7681   */\n      tag_247\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":7347:7687   */\n      pop\n        /* \"#utility.yul\":7264:7687   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7706:8044   */\n    tag_249:\n        /* \"#utility.yul\":7761:7766   */\n      0x00\n        /* \"#utility.yul\":7810:7813   */\n      dup3\n        /* \"#utility.yul\":7803:7807   */\n      0x1f\n        /* \"#utility.yul\":7795:7801   */\n      dup4\n        /* \"#utility.yul\":7791:7808   */\n      add\n        /* \"#utility.yul\":7787:7814   */\n      slt\n        /* \"#utility.yul\":7777:7899   */\n      tag_368\n      jumpi\n        /* \"#utility.yul\":7818:7897   */\n      tag_369\n      tag_241\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7777:7899   */\n    tag_368:\n        /* \"#utility.yul\":7935:7941   */\n      dup2\n        /* \"#utility.yul\":7922:7942   */\n      calldataload\n        /* \"#utility.yul\":7960:8038   */\n      tag_370\n        /* \"#utility.yul\":8034:8037   */\n      dup5\n        /* \"#utility.yul\":8026:8032   */\n      dup3\n        /* \"#utility.yul\":8019:8023   */\n      0x20\n        /* \"#utility.yul\":8011:8017   */\n      dup7\n        /* \"#utility.yul\":8007:8024   */\n      add\n        /* \"#utility.yul\":7960:8038   */\n      tag_248\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":7951:8038   */\n      swap2\n      pop\n        /* \"#utility.yul\":7767:8044   */\n      pop\n        /* \"#utility.yul\":7706:8044   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8050:8993   */\n    tag_78:\n        /* \"#utility.yul\":8145:8151   */\n      0x00\n        /* \"#utility.yul\":8153:8159   */\n      dup1\n        /* \"#utility.yul\":8161:8167   */\n      0x00\n        /* \"#utility.yul\":8169:8175   */\n      dup1\n        /* \"#utility.yul\":8218:8221   */\n      0x80\n        /* \"#utility.yul\":8206:8215   */\n      dup6\n        /* \"#utility.yul\":8197:8204   */\n      dup8\n        /* \"#utility.yul\":8193:8216   */\n      sub\n        /* \"#utility.yul\":8189:8222   */\n      slt\n        /* \"#utility.yul\":8186:8306   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":8225:8304   */\n      tag_373\n      tag_219\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":8186:8306   */\n    tag_372:\n        /* \"#utility.yul\":8345:8346   */\n      0x00\n        /* \"#utility.yul\":8370:8423   */\n      tag_374\n        /* \"#utility.yul\":8415:8422   */\n      dup8\n        /* \"#utility.yul\":8406:8412   */\n      dup3\n        /* \"#utility.yul\":8395:8404   */\n      dup9\n        /* \"#utility.yul\":8391:8413   */\n      add\n        /* \"#utility.yul\":8370:8423   */\n      tag_234\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":8360:8423   */\n      swap5\n      pop\n        /* \"#utility.yul\":8316:8433   */\n      pop\n        /* \"#utility.yul\":8472:8474   */\n      0x20\n        /* \"#utility.yul\":8498:8551   */\n      tag_375\n        /* \"#utility.yul\":8543:8550   */\n      dup8\n        /* \"#utility.yul\":8534:8540   */\n      dup3\n        /* \"#utility.yul\":8523:8532   */\n      dup9\n        /* \"#utility.yul\":8519:8541   */\n      add\n        /* \"#utility.yul\":8498:8551   */\n      tag_234\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":8488:8551   */\n      swap4\n      pop\n        /* \"#utility.yul\":8443:8561   */\n      pop\n        /* \"#utility.yul\":8600:8602   */\n      0x40\n        /* \"#utility.yul\":8626:8679   */\n      tag_376\n        /* \"#utility.yul\":8671:8678   */\n      dup8\n        /* \"#utility.yul\":8662:8668   */\n      dup3\n        /* \"#utility.yul\":8651:8660   */\n      dup9\n        /* \"#utility.yul\":8647:8669   */\n      add\n        /* \"#utility.yul\":8626:8679   */\n      tag_237\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8616:8679   */\n      swap3\n      pop\n        /* \"#utility.yul\":8571:8689   */\n      pop\n        /* \"#utility.yul\":8756:8758   */\n      0x60\n        /* \"#utility.yul\":8745:8754   */\n      dup6\n        /* \"#utility.yul\":8741:8759   */\n      add\n        /* \"#utility.yul\":8728:8760   */\n      calldataload\n        /* \"#utility.yul\":8787:8805   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8779:8785   */\n      dup2\n        /* \"#utility.yul\":8776:8806   */\n      gt\n        /* \"#utility.yul\":8773:8890   */\n      iszero\n      tag_377\n      jumpi\n        /* \"#utility.yul\":8809:8888   */\n      tag_378\n      tag_220\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":8773:8890   */\n    tag_377:\n        /* \"#utility.yul\":8914:8976   */\n      tag_379\n        /* \"#utility.yul\":8968:8975   */\n      dup8\n        /* \"#utility.yul\":8959:8965   */\n      dup3\n        /* \"#utility.yul\":8948:8957   */\n      dup9\n        /* \"#utility.yul\":8944:8966   */\n      add\n        /* \"#utility.yul\":8914:8976   */\n      tag_249\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":8904:8976   */\n      swap2\n      pop\n        /* \"#utility.yul\":8699:8986   */\n      pop\n        /* \"#utility.yul\":8050:8993   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8999:9473   */\n    tag_82:\n        /* \"#utility.yul\":9067:9073   */\n      0x00\n        /* \"#utility.yul\":9075:9081   */\n      dup1\n        /* \"#utility.yul\":9124:9126   */\n      0x40\n        /* \"#utility.yul\":9112:9121   */\n      dup4\n        /* \"#utility.yul\":9103:9110   */\n      dup6\n        /* \"#utility.yul\":9099:9122   */\n      sub\n        /* \"#utility.yul\":9095:9127   */\n      slt\n        /* \"#utility.yul\":9092:9211   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":9130:9209   */\n      tag_382\n      tag_219\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":9092:9211   */\n    tag_381:\n        /* \"#utility.yul\":9250:9251   */\n      0x00\n        /* \"#utility.yul\":9275:9328   */\n      tag_383\n        /* \"#utility.yul\":9320:9327   */\n      dup6\n        /* \"#utility.yul\":9311:9317   */\n      dup3\n        /* \"#utility.yul\":9300:9309   */\n      dup7\n        /* \"#utility.yul\":9296:9318   */\n      add\n        /* \"#utility.yul\":9275:9328   */\n      tag_234\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":9265:9328   */\n      swap3\n      pop\n        /* \"#utility.yul\":9221:9338   */\n      pop\n        /* \"#utility.yul\":9377:9379   */\n      0x20\n        /* \"#utility.yul\":9403:9456   */\n      tag_384\n        /* \"#utility.yul\":9448:9455   */\n      dup6\n        /* \"#utility.yul\":9439:9445   */\n      dup3\n        /* \"#utility.yul\":9428:9437   */\n      dup7\n        /* \"#utility.yul\":9424:9446   */\n      add\n        /* \"#utility.yul\":9403:9456   */\n      tag_234\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":9393:9456   */\n      swap2\n      pop\n        /* \"#utility.yul\":9348:9466   */\n      pop\n        /* \"#utility.yul\":8999:9473   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9479:10276   */\n    tag_87:\n        /* \"#utility.yul\":9565:9571   */\n      0x00\n        /* \"#utility.yul\":9573:9579   */\n      dup1\n        /* \"#utility.yul\":9581:9587   */\n      0x00\n        /* \"#utility.yul\":9630:9632   */\n      0x60\n        /* \"#utility.yul\":9618:9627   */\n      dup5\n        /* \"#utility.yul\":9609:9616   */\n      dup7\n        /* \"#utility.yul\":9605:9628   */\n      sub\n        /* \"#utility.yul\":9601:9633   */\n      slt\n        /* \"#utility.yul\":9598:9717   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":9636:9715   */\n      tag_387\n      tag_219\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":9598:9717   */\n    tag_386:\n        /* \"#utility.yul\":9756:9757   */\n      0x00\n        /* \"#utility.yul\":9781:9834   */\n      tag_388\n        /* \"#utility.yul\":9826:9833   */\n      dup7\n        /* \"#utility.yul\":9817:9823   */\n      dup3\n        /* \"#utility.yul\":9806:9815   */\n      dup8\n        /* \"#utility.yul\":9802:9824   */\n      add\n        /* \"#utility.yul\":9781:9834   */\n      tag_234\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":9771:9834   */\n      swap4\n      pop\n        /* \"#utility.yul\":9727:9844   */\n      pop\n        /* \"#utility.yul\":9883:9885   */\n      0x20\n        /* \"#utility.yul\":9909:9962   */\n      tag_389\n        /* \"#utility.yul\":9954:9961   */\n      dup7\n        /* \"#utility.yul\":9945:9951   */\n      dup3\n        /* \"#utility.yul\":9934:9943   */\n      dup8\n        /* \"#utility.yul\":9930:9952   */\n      add\n        /* \"#utility.yul\":9909:9962   */\n      tag_237\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":9899:9962   */\n      swap3\n      pop\n        /* \"#utility.yul\":9854:9972   */\n      pop\n        /* \"#utility.yul\":10039:10041   */\n      0x40\n        /* \"#utility.yul\":10028:10037   */\n      dup5\n        /* \"#utility.yul\":10024:10042   */\n      add\n        /* \"#utility.yul\":10011:10043   */\n      calldataload\n        /* \"#utility.yul\":10070:10088   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10062:10068   */\n      dup2\n        /* \"#utility.yul\":10059:10089   */\n      gt\n        /* \"#utility.yul\":10056:10173   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":10092:10171   */\n      tag_391\n      tag_220\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":10056:10173   */\n    tag_390:\n        /* \"#utility.yul\":10197:10259   */\n      tag_392\n        /* \"#utility.yul\":10251:10258   */\n      dup7\n        /* \"#utility.yul\":10242:10248   */\n      dup3\n        /* \"#utility.yul\":10231:10240   */\n      dup8\n        /* \"#utility.yul\":10227:10249   */\n      add\n        /* \"#utility.yul\":10197:10259   */\n      tag_249\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":10187:10259   */\n      swap2\n      pop\n        /* \"#utility.yul\":9982:10269   */\n      pop\n        /* \"#utility.yul\":9479:10276   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":10282:10462   */\n    tag_250:\n        /* \"#utility.yul\":10330:10407   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10327:10328   */\n      0x00\n        /* \"#utility.yul\":10320:10408   */\n      mstore\n        /* \"#utility.yul\":10427:10431   */\n      0x22\n        /* \"#utility.yul\":10424:10425   */\n      0x04\n        /* \"#utility.yul\":10417:10432   */\n      mstore\n        /* \"#utility.yul\":10451:10455   */\n      0x24\n        /* \"#utility.yul\":10448:10449   */\n      0x00\n        /* \"#utility.yul\":10441:10456   */\n      revert\n        /* \"#utility.yul\":10468:10788   */\n    tag_96:\n        /* \"#utility.yul\":10512:10518   */\n      0x00\n        /* \"#utility.yul\":10549:10550   */\n      0x02\n        /* \"#utility.yul\":10543:10547   */\n      dup3\n        /* \"#utility.yul\":10539:10551   */\n      div\n        /* \"#utility.yul\":10529:10551   */\n      swap1\n      pop\n        /* \"#utility.yul\":10596:10597   */\n      0x01\n        /* \"#utility.yul\":10590:10594   */\n      dup3\n        /* \"#utility.yul\":10586:10598   */\n      and\n        /* \"#utility.yul\":10617:10635   */\n      dup1\n        /* \"#utility.yul\":10607:10688   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":10673:10677   */\n      0x7f\n        /* \"#utility.yul\":10665:10671   */\n      dup3\n        /* \"#utility.yul\":10661:10678   */\n      and\n        /* \"#utility.yul\":10651:10678   */\n      swap2\n      pop\n        /* \"#utility.yul\":10607:10688   */\n    tag_395:\n        /* \"#utility.yul\":10735:10737   */\n      0x20\n        /* \"#utility.yul\":10727:10733   */\n      dup3\n        /* \"#utility.yul\":10724:10738   */\n      lt\n        /* \"#utility.yul\":10704:10722   */\n      dup2\n        /* \"#utility.yul\":10701:10739   */\n      sub\n        /* \"#utility.yul\":10698:10782   */\n      tag_396\n      jumpi\n        /* \"#utility.yul\":10754:10772   */\n      tag_397\n      tag_250\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":10698:10782   */\n    tag_396:\n        /* \"#utility.yul\":10519:10788   */\n      pop\n        /* \"#utility.yul\":10468:10788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10794:10974   */\n    tag_251:\n        /* \"#utility.yul\":10842:10919   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10839:10840   */\n      0x00\n        /* \"#utility.yul\":10832:10920   */\n      mstore\n        /* \"#utility.yul\":10939:10943   */\n      0x11\n        /* \"#utility.yul\":10936:10937   */\n      0x04\n        /* \"#utility.yul\":10929:10944   */\n      mstore\n        /* \"#utility.yul\":10963:10967   */\n      0x24\n        /* \"#utility.yul\":10960:10961   */\n      0x00\n        /* \"#utility.yul\":10953:10968   */\n      revert\n        /* \"#utility.yul\":10980:11171   */\n    tag_119:\n        /* \"#utility.yul\":11020:11023   */\n      0x00\n        /* \"#utility.yul\":11039:11059   */\n      tag_400\n        /* \"#utility.yul\":11057:11058   */\n      dup3\n        /* \"#utility.yul\":11039:11059   */\n      tag_235\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":11034:11059   */\n      swap2\n      pop\n        /* \"#utility.yul\":11073:11093   */\n      tag_401\n        /* \"#utility.yul\":11091:11092   */\n      dup4\n        /* \"#utility.yul\":11073:11093   */\n      tag_235\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":11068:11093   */\n      swap3\n      pop\n        /* \"#utility.yul\":11116:11117   */\n      dup3\n        /* \"#utility.yul\":11113:11114   */\n      dup3\n        /* \"#utility.yul\":11109:11118   */\n      add\n        /* \"#utility.yul\":11102:11118   */\n      swap1\n      pop\n        /* \"#utility.yul\":11137:11140   */\n      dup1\n        /* \"#utility.yul\":11134:11135   */\n      dup3\n        /* \"#utility.yul\":11131:11141   */\n      gt\n        /* \"#utility.yul\":11128:11164   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":11144:11162   */\n      tag_403\n      tag_251\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":11128:11164   */\n    tag_402:\n        /* \"#utility.yul\":10980:11171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11177:11400   */\n    tag_252:\n        /* \"#utility.yul\":11317:11351   */\n      0x4b4950373a2064656372656173656420616c6c6f77616e63652062656c6f7720\n        /* \"#utility.yul\":11313:11314   */\n      0x00\n        /* \"#utility.yul\":11305:11311   */\n      dup3\n        /* \"#utility.yul\":11301:11315   */\n      add\n        /* \"#utility.yul\":11294:11352   */\n      mstore\n        /* \"#utility.yul\":11386:11392   */\n      0x7a65726f00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11381:11383   */\n      0x20\n        /* \"#utility.yul\":11373:11379   */\n      dup3\n        /* \"#utility.yul\":11369:11384   */\n      add\n        /* \"#utility.yul\":11362:11393   */\n      mstore\n        /* \"#utility.yul\":11177:11400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11406:11772   */\n    tag_253:\n        /* \"#utility.yul\":11548:11551   */\n      0x00\n        /* \"#utility.yul\":11569:11636   */\n      tag_406\n        /* \"#utility.yul\":11633:11635   */\n      0x24\n        /* \"#utility.yul\":11628:11631   */\n      dup4\n        /* \"#utility.yul\":11569:11636   */\n      tag_227\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":11562:11636   */\n      swap2\n      pop\n        /* \"#utility.yul\":11645:11738   */\n      tag_407\n        /* \"#utility.yul\":11734:11737   */\n      dup3\n        /* \"#utility.yul\":11645:11738   */\n      tag_252\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":11763:11765   */\n      0x40\n        /* \"#utility.yul\":11758:11761   */\n      dup3\n        /* \"#utility.yul\":11754:11766   */\n      add\n        /* \"#utility.yul\":11747:11766   */\n      swap1\n      pop\n        /* \"#utility.yul\":11406:11772   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11778:12197   */\n    tag_140:\n        /* \"#utility.yul\":11944:11948   */\n      0x00\n        /* \"#utility.yul\":11982:11984   */\n      0x20\n        /* \"#utility.yul\":11971:11980   */\n      dup3\n        /* \"#utility.yul\":11967:11985   */\n      add\n        /* \"#utility.yul\":11959:11985   */\n      swap1\n      pop\n        /* \"#utility.yul\":12031:12040   */\n      dup2\n        /* \"#utility.yul\":12025:12029   */\n      dup2\n        /* \"#utility.yul\":12021:12041   */\n      sub\n        /* \"#utility.yul\":12017:12018   */\n      0x00\n        /* \"#utility.yul\":12006:12015   */\n      dup4\n        /* \"#utility.yul\":12002:12019   */\n      add\n        /* \"#utility.yul\":11995:12042   */\n      mstore\n        /* \"#utility.yul\":12059:12190   */\n      tag_409\n        /* \"#utility.yul\":12185:12189   */\n      dup2\n        /* \"#utility.yul\":12059:12190   */\n      tag_253\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":12051:12190   */\n      swap1\n      pop\n        /* \"#utility.yul\":11778:12197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12203:12425   */\n    tag_254:\n        /* \"#utility.yul\":12343:12377   */\n      0x4b4950373a20617070726f76652066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":12339:12340   */\n      0x00\n        /* \"#utility.yul\":12331:12337   */\n      dup3\n        /* \"#utility.yul\":12327:12341   */\n      add\n        /* \"#utility.yul\":12320:12378   */\n      mstore\n        /* \"#utility.yul\":12412:12417   */\n      0x6573730000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12407:12409   */\n      0x20\n        /* \"#utility.yul\":12399:12405   */\n      dup3\n        /* \"#utility.yul\":12395:12410   */\n      add\n        /* \"#utility.yul\":12388:12418   */\n      mstore\n        /* \"#utility.yul\":12203:12425   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12431:12797   */\n    tag_255:\n        /* \"#utility.yul\":12573:12576   */\n      0x00\n        /* \"#utility.yul\":12594:12661   */\n      tag_412\n        /* \"#utility.yul\":12658:12660   */\n      0x23\n        /* \"#utility.yul\":12653:12656   */\n      dup4\n        /* \"#utility.yul\":12594:12661   */\n      tag_227\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":12587:12661   */\n      swap2\n      pop\n        /* \"#utility.yul\":12670:12763   */\n      tag_413\n        /* \"#utility.yul\":12759:12762   */\n      dup3\n        /* \"#utility.yul\":12670:12763   */\n      tag_254\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":12788:12790   */\n      0x40\n        /* \"#utility.yul\":12783:12786   */\n      dup3\n        /* \"#utility.yul\":12779:12791   */\n      add\n        /* \"#utility.yul\":12772:12791   */\n      swap1\n      pop\n        /* \"#utility.yul\":12431:12797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12803:13222   */\n    tag_158:\n        /* \"#utility.yul\":12969:12973   */\n      0x00\n        /* \"#utility.yul\":13007:13009   */\n      0x20\n        /* \"#utility.yul\":12996:13005   */\n      dup3\n        /* \"#utility.yul\":12992:13010   */\n      add\n        /* \"#utility.yul\":12984:13010   */\n      swap1\n      pop\n        /* \"#utility.yul\":13056:13065   */\n      dup2\n        /* \"#utility.yul\":13050:13054   */\n      dup2\n        /* \"#utility.yul\":13046:13066   */\n      sub\n        /* \"#utility.yul\":13042:13043   */\n      0x00\n        /* \"#utility.yul\":13031:13040   */\n      dup4\n        /* \"#utility.yul\":13027:13044   */\n      add\n        /* \"#utility.yul\":13020:13067   */\n      mstore\n        /* \"#utility.yul\":13084:13215   */\n      tag_415\n        /* \"#utility.yul\":13210:13214   */\n      dup2\n        /* \"#utility.yul\":13084:13215   */\n      tag_255\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":13076:13215   */\n      swap1\n      pop\n        /* \"#utility.yul\":12803:13222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13228:13448   */\n    tag_256:\n        /* \"#utility.yul\":13368:13402   */\n      0x4b4950373a20617070726f766520746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":13364:13365   */\n      0x00\n        /* \"#utility.yul\":13356:13362   */\n      dup3\n        /* \"#utility.yul\":13352:13366   */\n      add\n        /* \"#utility.yul\":13345:13403   */\n      mstore\n        /* \"#utility.yul\":13437:13440   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13432:13434   */\n      0x20\n        /* \"#utility.yul\":13424:13430   */\n      dup3\n        /* \"#utility.yul\":13420:13435   */\n      add\n        /* \"#utility.yul\":13413:13441   */\n      mstore\n        /* \"#utility.yul\":13228:13448   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13454:13820   */\n    tag_257:\n        /* \"#utility.yul\":13596:13599   */\n      0x00\n        /* \"#utility.yul\":13617:13684   */\n      tag_418\n        /* \"#utility.yul\":13681:13683   */\n      0x21\n        /* \"#utility.yul\":13676:13679   */\n      dup4\n        /* \"#utility.yul\":13617:13684   */\n      tag_227\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":13610:13684   */\n      swap2\n      pop\n        /* \"#utility.yul\":13693:13786   */\n      tag_419\n        /* \"#utility.yul\":13782:13785   */\n      dup3\n        /* \"#utility.yul\":13693:13786   */\n      tag_256\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":13811:13813   */\n      0x40\n        /* \"#utility.yul\":13806:13809   */\n      dup3\n        /* \"#utility.yul\":13802:13814   */\n      add\n        /* \"#utility.yul\":13795:13814   */\n      swap1\n      pop\n        /* \"#utility.yul\":13454:13820   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13826:14245   */\n    tag_161:\n        /* \"#utility.yul\":13992:13996   */\n      0x00\n        /* \"#utility.yul\":14030:14032   */\n      0x20\n        /* \"#utility.yul\":14019:14028   */\n      dup3\n        /* \"#utility.yul\":14015:14033   */\n      add\n        /* \"#utility.yul\":14007:14033   */\n      swap1\n      pop\n        /* \"#utility.yul\":14079:14088   */\n      dup2\n        /* \"#utility.yul\":14073:14077   */\n      dup2\n        /* \"#utility.yul\":14069:14089   */\n      sub\n        /* \"#utility.yul\":14065:14066   */\n      0x00\n        /* \"#utility.yul\":14054:14063   */\n      dup4\n        /* \"#utility.yul\":14050:14067   */\n      add\n        /* \"#utility.yul\":14043:14090   */\n      mstore\n        /* \"#utility.yul\":14107:14238   */\n      tag_421\n        /* \"#utility.yul\":14233:14237   */\n      dup2\n        /* \"#utility.yul\":14107:14238   */\n      tag_257\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":14099:14238   */\n      swap1\n      pop\n        /* \"#utility.yul\":13826:14245   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14251:14429   */\n    tag_258:\n        /* \"#utility.yul\":14391:14421   */\n      0x4b4950373a20696e73756666696369656e7420616c6c6f77616e636500000000\n        /* \"#utility.yul\":14387:14388   */\n      0x00\n        /* \"#utility.yul\":14379:14385   */\n      dup3\n        /* \"#utility.yul\":14375:14389   */\n      add\n        /* \"#utility.yul\":14368:14422   */\n      mstore\n        /* \"#utility.yul\":14251:14429   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14435:14801   */\n    tag_259:\n        /* \"#utility.yul\":14577:14580   */\n      0x00\n        /* \"#utility.yul\":14598:14665   */\n      tag_424\n        /* \"#utility.yul\":14662:14664   */\n      0x1c\n        /* \"#utility.yul\":14657:14660   */\n      dup4\n        /* \"#utility.yul\":14598:14665   */\n      tag_227\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":14591:14665   */\n      swap2\n      pop\n        /* \"#utility.yul\":14674:14767   */\n      tag_425\n        /* \"#utility.yul\":14763:14766   */\n      dup3\n        /* \"#utility.yul\":14674:14767   */\n      tag_258\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":14792:14794   */\n      0x20\n        /* \"#utility.yul\":14787:14790   */\n      dup3\n        /* \"#utility.yul\":14783:14795   */\n      add\n        /* \"#utility.yul\":14776:14795   */\n      swap1\n      pop\n        /* \"#utility.yul\":14435:14801   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14807:15226   */\n    tag_168:\n        /* \"#utility.yul\":14973:14977   */\n      0x00\n        /* \"#utility.yul\":15011:15013   */\n      0x20\n        /* \"#utility.yul\":15000:15009   */\n      dup3\n        /* \"#utility.yul\":14996:15014   */\n      add\n        /* \"#utility.yul\":14988:15014   */\n      swap1\n      pop\n        /* \"#utility.yul\":15060:15069   */\n      dup2\n        /* \"#utility.yul\":15054:15058   */\n      dup2\n        /* \"#utility.yul\":15050:15070   */\n      sub\n        /* \"#utility.yul\":15046:15047   */\n      0x00\n        /* \"#utility.yul\":15035:15044   */\n      dup4\n        /* \"#utility.yul\":15031:15048   */\n      add\n        /* \"#utility.yul\":15024:15071   */\n      mstore\n        /* \"#utility.yul\":15088:15219   */\n      tag_427\n        /* \"#utility.yul\":15214:15218   */\n      dup2\n        /* \"#utility.yul\":15088:15219   */\n      tag_259\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":15080:15219   */\n      swap1\n      pop\n        /* \"#utility.yul\":14807:15226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15232:15455   */\n    tag_260:\n        /* \"#utility.yul\":15372:15406   */\n      0x4b4950373a207472616e736665722066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":15368:15369   */\n      0x00\n        /* \"#utility.yul\":15360:15366   */\n      dup3\n        /* \"#utility.yul\":15356:15370   */\n      add\n        /* \"#utility.yul\":15349:15407   */\n      mstore\n        /* \"#utility.yul\":15441:15447   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15436:15438   */\n      0x20\n        /* \"#utility.yul\":15428:15434   */\n      dup3\n        /* \"#utility.yul\":15424:15439   */\n      add\n        /* \"#utility.yul\":15417:15448   */\n      mstore\n        /* \"#utility.yul\":15232:15455   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15461:15827   */\n    tag_261:\n        /* \"#utility.yul\":15603:15606   */\n      0x00\n        /* \"#utility.yul\":15624:15691   */\n      tag_430\n        /* \"#utility.yul\":15688:15690   */\n      0x24\n        /* \"#utility.yul\":15683:15686   */\n      dup4\n        /* \"#utility.yul\":15624:15691   */\n      tag_227\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":15617:15691   */\n      swap2\n      pop\n        /* \"#utility.yul\":15700:15793   */\n      tag_431\n        /* \"#utility.yul\":15789:15792   */\n      dup3\n        /* \"#utility.yul\":15700:15793   */\n      tag_260\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":15818:15820   */\n      0x40\n        /* \"#utility.yul\":15813:15816   */\n      dup3\n        /* \"#utility.yul\":15809:15821   */\n      add\n        /* \"#utility.yul\":15802:15821   */\n      swap1\n      pop\n        /* \"#utility.yul\":15461:15827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15833:16252   */\n    tag_173:\n        /* \"#utility.yul\":15999:16003   */\n      0x00\n        /* \"#utility.yul\":16037:16039   */\n      0x20\n        /* \"#utility.yul\":16026:16035   */\n      dup3\n        /* \"#utility.yul\":16022:16040   */\n      add\n        /* \"#utility.yul\":16014:16040   */\n      swap1\n      pop\n        /* \"#utility.yul\":16086:16095   */\n      dup2\n        /* \"#utility.yul\":16080:16084   */\n      dup2\n        /* \"#utility.yul\":16076:16096   */\n      sub\n        /* \"#utility.yul\":16072:16073   */\n      0x00\n        /* \"#utility.yul\":16061:16070   */\n      dup4\n        /* \"#utility.yul\":16057:16074   */\n      add\n        /* \"#utility.yul\":16050:16097   */\n      mstore\n        /* \"#utility.yul\":16114:16245   */\n      tag_433\n        /* \"#utility.yul\":16240:16244   */\n      dup2\n        /* \"#utility.yul\":16114:16245   */\n      tag_261\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":16106:16245   */\n      swap1\n      pop\n        /* \"#utility.yul\":15833:16252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16258:16479   */\n    tag_262:\n        /* \"#utility.yul\":16398:16432   */\n      0x4b4950373a207472616e7366657220746f20746865207a65726f206164647265\n        /* \"#utility.yul\":16394:16395   */\n      0x00\n        /* \"#utility.yul\":16386:16392   */\n      dup3\n        /* \"#utility.yul\":16382:16396   */\n      add\n        /* \"#utility.yul\":16375:16433   */\n      mstore\n        /* \"#utility.yul\":16467:16471   */\n      0x7373000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16462:16464   */\n      0x20\n        /* \"#utility.yul\":16454:16460   */\n      dup3\n        /* \"#utility.yul\":16450:16465   */\n      add\n        /* \"#utility.yul\":16443:16472   */\n      mstore\n        /* \"#utility.yul\":16258:16479   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16485:16851   */\n    tag_263:\n        /* \"#utility.yul\":16627:16630   */\n      0x00\n        /* \"#utility.yul\":16648:16715   */\n      tag_436\n        /* \"#utility.yul\":16712:16714   */\n      0x22\n        /* \"#utility.yul\":16707:16710   */\n      dup4\n        /* \"#utility.yul\":16648:16715   */\n      tag_227\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":16641:16715   */\n      swap2\n      pop\n        /* \"#utility.yul\":16724:16817   */\n      tag_437\n        /* \"#utility.yul\":16813:16816   */\n      dup3\n        /* \"#utility.yul\":16724:16817   */\n      tag_262\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":16842:16844   */\n      0x40\n        /* \"#utility.yul\":16837:16840   */\n      dup3\n        /* \"#utility.yul\":16833:16845   */\n      add\n        /* \"#utility.yul\":16826:16845   */\n      swap1\n      pop\n        /* \"#utility.yul\":16485:16851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16857:17276   */\n    tag_176:\n        /* \"#utility.yul\":17023:17027   */\n      0x00\n        /* \"#utility.yul\":17061:17063   */\n      0x20\n        /* \"#utility.yul\":17050:17059   */\n      dup3\n        /* \"#utility.yul\":17046:17064   */\n      add\n        /* \"#utility.yul\":17038:17064   */\n      swap1\n      pop\n        /* \"#utility.yul\":17110:17119   */\n      dup2\n        /* \"#utility.yul\":17104:17108   */\n      dup2\n        /* \"#utility.yul\":17100:17120   */\n      sub\n        /* \"#utility.yul\":17096:17097   */\n      0x00\n        /* \"#utility.yul\":17085:17094   */\n      dup4\n        /* \"#utility.yul\":17081:17098   */\n      add\n        /* \"#utility.yul\":17074:17121   */\n      mstore\n        /* \"#utility.yul\":17138:17269   */\n      tag_439\n        /* \"#utility.yul\":17264:17268   */\n      dup2\n        /* \"#utility.yul\":17138:17269   */\n      tag_263\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":17130:17269   */\n      swap1\n      pop\n        /* \"#utility.yul\":16857:17276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17282:17506   */\n    tag_264:\n        /* \"#utility.yul\":17422:17456   */\n      0x4b4950373a207472616e7366657220616d6f756e742065786365656473206261\n        /* \"#utility.yul\":17418:17419   */\n      0x00\n        /* \"#utility.yul\":17410:17416   */\n      dup3\n        /* \"#utility.yul\":17406:17420   */\n      add\n        /* \"#utility.yul\":17399:17457   */\n      mstore\n        /* \"#utility.yul\":17491:17498   */\n      0x6c616e6365000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17486:17488   */\n      0x20\n        /* \"#utility.yul\":17478:17484   */\n      dup3\n        /* \"#utility.yul\":17474:17489   */\n      add\n        /* \"#utility.yul\":17467:17499   */\n      mstore\n        /* \"#utility.yul\":17282:17506   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17512:17878   */\n    tag_265:\n        /* \"#utility.yul\":17654:17657   */\n      0x00\n        /* \"#utility.yul\":17675:17742   */\n      tag_442\n        /* \"#utility.yul\":17739:17741   */\n      0x25\n        /* \"#utility.yul\":17734:17737   */\n      dup4\n        /* \"#utility.yul\":17675:17742   */\n      tag_227\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":17668:17742   */\n      swap2\n      pop\n        /* \"#utility.yul\":17751:17844   */\n      tag_443\n        /* \"#utility.yul\":17840:17843   */\n      dup3\n        /* \"#utility.yul\":17751:17844   */\n      tag_264\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":17869:17871   */\n      0x40\n        /* \"#utility.yul\":17864:17867   */\n      dup3\n        /* \"#utility.yul\":17860:17872   */\n      add\n        /* \"#utility.yul\":17853:17872   */\n      swap1\n      pop\n        /* \"#utility.yul\":17512:17878   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17884:18303   */\n    tag_181:\n        /* \"#utility.yul\":18050:18054   */\n      0x00\n        /* \"#utility.yul\":18088:18090   */\n      0x20\n        /* \"#utility.yul\":18077:18086   */\n      dup3\n        /* \"#utility.yul\":18073:18091   */\n      add\n        /* \"#utility.yul\":18065:18091   */\n      swap1\n      pop\n        /* \"#utility.yul\":18137:18146   */\n      dup2\n        /* \"#utility.yul\":18131:18135   */\n      dup2\n        /* \"#utility.yul\":18127:18147   */\n      sub\n        /* \"#utility.yul\":18123:18124   */\n      0x00\n        /* \"#utility.yul\":18112:18121   */\n      dup4\n        /* \"#utility.yul\":18108:18125   */\n      add\n        /* \"#utility.yul\":18101:18148   */\n      mstore\n        /* \"#utility.yul\":18165:18296   */\n      tag_445\n        /* \"#utility.yul\":18291:18295   */\n      dup2\n        /* \"#utility.yul\":18165:18296   */\n      tag_265\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":18157:18296   */\n      swap1\n      pop\n        /* \"#utility.yul\":17884:18303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18309:18543   */\n    tag_266:\n        /* \"#utility.yul\":18449:18483   */\n      0x4b4950373a207472616e7366657220746f206e6f6e20494b4950375265636569\n        /* \"#utility.yul\":18445:18446   */\n      0x00\n        /* \"#utility.yul\":18437:18443   */\n      dup3\n        /* \"#utility.yul\":18433:18447   */\n      add\n        /* \"#utility.yul\":18426:18484   */\n      mstore\n        /* \"#utility.yul\":18518:18535   */\n      0x76657220696d706c656d656e7465720000000000000000000000000000000000\n        /* \"#utility.yul\":18513:18515   */\n      0x20\n        /* \"#utility.yul\":18505:18511   */\n      dup3\n        /* \"#utility.yul\":18501:18516   */\n      add\n        /* \"#utility.yul\":18494:18536   */\n      mstore\n        /* \"#utility.yul\":18309:18543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18549:18915   */\n    tag_267:\n        /* \"#utility.yul\":18691:18694   */\n      0x00\n        /* \"#utility.yul\":18712:18779   */\n      tag_448\n        /* \"#utility.yul\":18776:18778   */\n      0x2f\n        /* \"#utility.yul\":18771:18774   */\n      dup4\n        /* \"#utility.yul\":18712:18779   */\n      tag_227\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":18705:18779   */\n      swap2\n      pop\n        /* \"#utility.yul\":18788:18881   */\n      tag_449\n        /* \"#utility.yul\":18877:18880   */\n      dup3\n        /* \"#utility.yul\":18788:18881   */\n      tag_266\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":18906:18908   */\n      0x40\n        /* \"#utility.yul\":18901:18904   */\n      dup3\n        /* \"#utility.yul\":18897:18909   */\n      add\n        /* \"#utility.yul\":18890:18909   */\n      swap1\n      pop\n        /* \"#utility.yul\":18549:18915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18921:19340   */\n    tag_192:\n        /* \"#utility.yul\":19087:19091   */\n      0x00\n        /* \"#utility.yul\":19125:19127   */\n      0x20\n        /* \"#utility.yul\":19114:19123   */\n      dup3\n        /* \"#utility.yul\":19110:19128   */\n      add\n        /* \"#utility.yul\":19102:19128   */\n      swap1\n      pop\n        /* \"#utility.yul\":19174:19183   */\n      dup2\n        /* \"#utility.yul\":19168:19172   */\n      dup2\n        /* \"#utility.yul\":19164:19184   */\n      sub\n        /* \"#utility.yul\":19160:19161   */\n      0x00\n        /* \"#utility.yul\":19149:19158   */\n      dup4\n        /* \"#utility.yul\":19145:19162   */\n      add\n        /* \"#utility.yul\":19138:19185   */\n      mstore\n        /* \"#utility.yul\":19202:19333   */\n      tag_451\n        /* \"#utility.yul\":19328:19332   */\n      dup2\n        /* \"#utility.yul\":19202:19333   */\n      tag_267\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":19194:19333   */\n      swap1\n      pop\n        /* \"#utility.yul\":18921:19340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19346:19464   */\n    tag_268:\n        /* \"#utility.yul\":19433:19457   */\n      tag_453\n        /* \"#utility.yul\":19451:19456   */\n      dup2\n        /* \"#utility.yul\":19433:19457   */\n      tag_232\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":19428:19431   */\n      dup3\n        /* \"#utility.yul\":19421:19458   */\n      mstore\n        /* \"#utility.yul\":19346:19464   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19470:19568   */\n    tag_269:\n        /* \"#utility.yul\":19521:19527   */\n      0x00\n        /* \"#utility.yul\":19555:19560   */\n      dup2\n        /* \"#utility.yul\":19549:19561   */\n      mload\n        /* \"#utility.yul\":19539:19561   */\n      swap1\n      pop\n        /* \"#utility.yul\":19470:19568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19574:19742   */\n    tag_270:\n        /* \"#utility.yul\":19657:19668   */\n      0x00\n        /* \"#utility.yul\":19691:19697   */\n      dup3\n        /* \"#utility.yul\":19686:19689   */\n      dup3\n        /* \"#utility.yul\":19679:19698   */\n      mstore\n        /* \"#utility.yul\":19731:19735   */\n      0x20\n        /* \"#utility.yul\":19726:19729   */\n      dup3\n        /* \"#utility.yul\":19722:19736   */\n      add\n        /* \"#utility.yul\":19707:19736   */\n      swap1\n      pop\n        /* \"#utility.yul\":19574:19742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19748:20121   */\n    tag_271:\n        /* \"#utility.yul\":19834:19837   */\n      0x00\n        /* \"#utility.yul\":19862:19900   */\n      tag_457\n        /* \"#utility.yul\":19894:19899   */\n      dup3\n        /* \"#utility.yul\":19862:19900   */\n      tag_269\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":19916:19986   */\n      tag_458\n        /* \"#utility.yul\":19979:19985   */\n      dup2\n        /* \"#utility.yul\":19974:19977   */\n      dup6\n        /* \"#utility.yul\":19916:19986   */\n      tag_270\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":19909:19986   */\n      swap4\n      pop\n        /* \"#utility.yul\":19995:20060   */\n      tag_459\n        /* \"#utility.yul\":20053:20059   */\n      dup2\n        /* \"#utility.yul\":20048:20051   */\n      dup6\n        /* \"#utility.yul\":20041:20045   */\n      0x20\n        /* \"#utility.yul\":20034:20039   */\n      dup7\n        /* \"#utility.yul\":20030:20046   */\n      add\n        /* \"#utility.yul\":19995:20060   */\n      tag_228\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":20085:20114   */\n      tag_460\n        /* \"#utility.yul\":20107:20113   */\n      dup2\n        /* \"#utility.yul\":20085:20114   */\n      tag_229\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":20080:20083   */\n      dup5\n        /* \"#utility.yul\":20076:20115   */\n      add\n        /* \"#utility.yul\":20069:20115   */\n      swap2\n      pop\n        /* \"#utility.yul\":19838:20121   */\n      pop\n        /* \"#utility.yul\":19748:20121   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20127:20767   */\n    tag_201:\n        /* \"#utility.yul\":20322:20326   */\n      0x00\n        /* \"#utility.yul\":20360:20363   */\n      0x80\n        /* \"#utility.yul\":20349:20358   */\n      dup3\n        /* \"#utility.yul\":20345:20364   */\n      add\n        /* \"#utility.yul\":20337:20364   */\n      swap1\n      pop\n        /* \"#utility.yul\":20374:20445   */\n      tag_462\n        /* \"#utility.yul\":20442:20443   */\n      0x00\n        /* \"#utility.yul\":20431:20440   */\n      dup4\n        /* \"#utility.yul\":20427:20444   */\n      add\n        /* \"#utility.yul\":20418:20424   */\n      dup8\n        /* \"#utility.yul\":20374:20445   */\n      tag_268\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":20455:20527   */\n      tag_463\n        /* \"#utility.yul\":20523:20525   */\n      0x20\n        /* \"#utility.yul\":20512:20521   */\n      dup4\n        /* \"#utility.yul\":20508:20526   */\n      add\n        /* \"#utility.yul\":20499:20505   */\n      dup7\n        /* \"#utility.yul\":20455:20527   */\n      tag_268\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":20537:20609   */\n      tag_464\n        /* \"#utility.yul\":20605:20607   */\n      0x40\n        /* \"#utility.yul\":20594:20603   */\n      dup4\n        /* \"#utility.yul\":20590:20608   */\n      add\n        /* \"#utility.yul\":20581:20587   */\n      dup6\n        /* \"#utility.yul\":20537:20609   */\n      tag_238\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":20656:20665   */\n      dup2\n        /* \"#utility.yul\":20650:20654   */\n      dup2\n        /* \"#utility.yul\":20646:20666   */\n      sub\n        /* \"#utility.yul\":20641:20643   */\n      0x60\n        /* \"#utility.yul\":20630:20639   */\n      dup4\n        /* \"#utility.yul\":20626:20644   */\n      add\n        /* \"#utility.yul\":20619:20667   */\n      mstore\n        /* \"#utility.yul\":20684:20760   */\n      tag_465\n        /* \"#utility.yul\":20755:20759   */\n      dup2\n        /* \"#utility.yul\":20746:20752   */\n      dup5\n        /* \"#utility.yul\":20684:20760   */\n      tag_271\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":20676:20760   */\n      swap1\n      pop\n        /* \"#utility.yul\":20127:20767   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20773:20914   */\n    tag_272:\n        /* \"#utility.yul\":20829:20834   */\n      0x00\n        /* \"#utility.yul\":20860:20866   */\n      dup2\n        /* \"#utility.yul\":20854:20867   */\n      mload\n        /* \"#utility.yul\":20845:20867   */\n      swap1\n      pop\n        /* \"#utility.yul\":20876:20908   */\n      tag_467\n        /* \"#utility.yul\":20902:20907   */\n      dup2\n        /* \"#utility.yul\":20876:20908   */\n      tag_222\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":20773:20914   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20920:21269   */\n    tag_204:\n        /* \"#utility.yul\":20989:20995   */\n      0x00\n        /* \"#utility.yul\":21038:21040   */\n      0x20\n        /* \"#utility.yul\":21026:21035   */\n      dup3\n        /* \"#utility.yul\":21017:21024   */\n      dup5\n        /* \"#utility.yul\":21013:21036   */\n      sub\n        /* \"#utility.yul\":21009:21041   */\n      slt\n        /* \"#utility.yul\":21006:21125   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":21044:21123   */\n      tag_470\n      tag_219\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":21006:21125   */\n    tag_469:\n        /* \"#utility.yul\":21164:21165   */\n      0x00\n        /* \"#utility.yul\":21189:21252   */\n      tag_471\n        /* \"#utility.yul\":21244:21251   */\n      dup5\n        /* \"#utility.yul\":21235:21241   */\n      dup3\n        /* \"#utility.yul\":21224:21233   */\n      dup6\n        /* \"#utility.yul\":21220:21242   */\n      add\n        /* \"#utility.yul\":21189:21252   */\n      tag_272\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":21179:21252   */\n      swap2\n      pop\n        /* \"#utility.yul\":21135:21262   */\n      pop\n        /* \"#utility.yul\":20920:21269   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21275:21508   */\n    tag_273:\n        /* \"#utility.yul\":21415:21449   */\n      0x4b4950373a207472616e7366657220746f206e6f6e204b495037526563656976\n        /* \"#utility.yul\":21411:21412   */\n      0x00\n        /* \"#utility.yul\":21403:21409   */\n      dup3\n        /* \"#utility.yul\":21399:21413   */\n      add\n        /* \"#utility.yul\":21392:21450   */\n      mstore\n        /* \"#utility.yul\":21484:21500   */\n      0x657220696d706c656d656e746572000000000000000000000000000000000000\n        /* \"#utility.yul\":21479:21481   */\n      0x20\n        /* \"#utility.yul\":21471:21477   */\n      dup3\n        /* \"#utility.yul\":21467:21482   */\n      add\n        /* \"#utility.yul\":21460:21501   */\n      mstore\n        /* \"#utility.yul\":21275:21508   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21514:21880   */\n    tag_274:\n        /* \"#utility.yul\":21656:21659   */\n      0x00\n        /* \"#utility.yul\":21677:21744   */\n      tag_474\n        /* \"#utility.yul\":21741:21743   */\n      0x2e\n        /* \"#utility.yul\":21736:21739   */\n      dup4\n        /* \"#utility.yul\":21677:21744   */\n      tag_227\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":21670:21744   */\n      swap2\n      pop\n        /* \"#utility.yul\":21753:21846   */\n      tag_475\n        /* \"#utility.yul\":21842:21845   */\n      dup3\n        /* \"#utility.yul\":21753:21846   */\n      tag_273\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":21871:21873   */\n      0x40\n        /* \"#utility.yul\":21866:21869   */\n      dup3\n        /* \"#utility.yul\":21862:21874   */\n      add\n        /* \"#utility.yul\":21855:21874   */\n      swap1\n      pop\n        /* \"#utility.yul\":21514:21880   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21886:22305   */\n    tag_213:\n        /* \"#utility.yul\":22052:22056   */\n      0x00\n        /* \"#utility.yul\":22090:22092   */\n      0x20\n        /* \"#utility.yul\":22079:22088   */\n      dup3\n        /* \"#utility.yul\":22075:22093   */\n      add\n        /* \"#utility.yul\":22067:22093   */\n      swap1\n      pop\n        /* \"#utility.yul\":22139:22148   */\n      dup2\n        /* \"#utility.yul\":22133:22137   */\n      dup2\n        /* \"#utility.yul\":22129:22149   */\n      sub\n        /* \"#utility.yul\":22125:22126   */\n      0x00\n        /* \"#utility.yul\":22114:22123   */\n      dup4\n        /* \"#utility.yul\":22110:22127   */\n      add\n        /* \"#utility.yul\":22103:22150   */\n      mstore\n        /* \"#utility.yul\":22167:22298   */\n      tag_477\n        /* \"#utility.yul\":22293:22297   */\n      dup2\n        /* \"#utility.yul\":22167:22298   */\n      tag_274\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":22159:22298   */\n      swap1\n      pop\n        /* \"#utility.yul\":21886:22305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b939a51e6152cc55493dad7cafd2127846d766274e3f83ac131023dff292d24764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:9",
														"type": ""
													}
												],
												"src": "580:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:9"
															},
															"nodeType": "YulIf",
															"src": "1030:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:9",
														"type": ""
													}
												],
												"src": "874:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:9",
														"type": ""
													}
												],
												"src": "1161:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:9"
															},
															"nodeType": "YulIf",
															"src": "1434:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:9",
														"type": ""
													}
												],
												"src": "1296:308:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:9",
																"statements": []
															},
															"src": "1701:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:9",
														"type": ""
													}
												],
												"src": "1610:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:9"
															},
															"nodeType": "YulIf",
															"src": "2117:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:9",
														"type": ""
													}
												],
												"src": "1862:434:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:9"
															},
															"nodeType": "YulIf",
															"src": "2399:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:9",
														"type": ""
													}
												],
												"src": "2316:355:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:9"
															},
															"nodeType": "YulIf",
															"src": "2801:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:9",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:9"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:9",
														"type": ""
													}
												],
												"src": "2677:853:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:9",
														"type": ""
													}
												],
												"src": "3536:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:9"
															},
															"nodeType": "YulIf",
															"src": "3966:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:9"
															},
															"nodeType": "YulIf",
															"src": "4057:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:9",
														"type": ""
													}
												],
												"src": "3827:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:9",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:9",
														"type": ""
													}
												],
												"src": "4153:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:9",
														"type": ""
													}
												],
												"src": "4300:93:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:9"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:9",
														"type": ""
													}
												],
												"src": "4399:107:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:9"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:9",
														"type": ""
													}
												],
												"src": "4512:393:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:9",
														"type": ""
													}
												],
												"src": "4911:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:9",
														"type": ""
													}
												],
												"src": "4994:60:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:9",
														"type": ""
													}
												],
												"src": "5060:142:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:9",
														"type": ""
													}
												],
												"src": "5208:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:9"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:9",
														"type": ""
													}
												],
												"src": "5289:269:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:9",
														"type": ""
													}
												],
												"src": "5564:73:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:9"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:9",
														"type": ""
													}
												],
												"src": "5643:189:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:9",
																"statements": []
															},
															"src": "5898:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:9",
														"type": ""
													}
												],
												"src": "5838:186:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:9",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:9",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:9",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:9"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:9"
															},
															"nodeType": "YulIf",
															"src": "6120:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:9",
														"type": ""
													}
												],
												"src": "6030:543:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:9"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:9",
														"type": ""
													}
												],
												"src": "6579:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:9"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:9",
														"type": ""
													}
												],
												"src": "6702:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:9"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:9",
														"type": ""
													}
												],
												"src": "6876:295:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:9"
															},
															"nodeType": "YulIf",
															"src": "7381:56:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:9"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:9"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:9"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:9"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:9"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:9",
																					"statements": []
																				},
																				"src": "7867:208:9"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:9",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:9"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:9"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:9"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:9"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:9"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:9"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:9"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:9"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:9",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:9",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:9",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:9"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:9"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:9"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:9"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:9"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:9"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:9",
														"type": ""
													}
												],
												"src": "7176:1395:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620021bb380380620021bb8339818101604052810190620000379190620001f6565b8160039081620000489190620004c6565b5080600490816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b611bfe80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806342842e0e11610097578063a9059cbb11610066578063a9059cbb146102d5578063b88d4fde14610305578063dd62ed3e14610321578063eb7955491461035157610100565b806342842e0e1461023b57806370a082311461025757806395d89b4114610287578063a457c2d7146102a557610100565b806323b872dd116100d357806323b872dd146101a1578063313ce567146101d157806339509351146101ef578063423f6cef1461021f57610100565b806301ffc9a71461010557806306fdde0314610135578063095ea7b31461015357806318160ddd14610183575b600080fd5b61011f600480360381019061011a9190610fe6565b61036d565b60405161012c919061102e565b60405180910390f35b61013d61044f565b60405161014a91906110d9565b60405180910390f35b61016d6004803603810190610168919061118f565b6104e1565b60405161017a919061102e565b60405180910390f35b61018b610504565b60405161019891906111de565b60405180910390f35b6101bb60048036038101906101b691906111f9565b61050e565b6040516101c8919061102e565b60405180910390f35b6101d961053d565b6040516101e69190611268565b60405180910390f35b6102096004803603810190610204919061118f565b610546565b604051610216919061102e565b60405180910390f35b6102396004803603810190610234919061118f565b61057d565b005b610255600480360381019061025091906111f9565b6105a9565b005b610271600480360381019061026c9190611283565b6105e1565b60405161027e91906111de565b60405180910390f35b61028f610629565b60405161029c91906110d9565b60405180910390f35b6102bf60048036038101906102ba919061118f565b6106bb565b6040516102cc919061102e565b60405180910390f35b6102ef60048036038101906102ea919061118f565b610732565b6040516102fc919061102e565b60405180910390f35b61031f600480360381019061031a91906113e5565b610755565b005b61033b60048036038101906103369190611468565b61077f565b60405161034891906111de565b60405180910390f35b61036b600480360381019061036691906114a8565b610806565b005b60007f65787371000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043857507fa219a025000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610448575061044782610824565b5b9050919050565b60606003805461045e90611546565b80601f016020809104026020016040519081016040528092919081815260200182805461048a90611546565b80156104d75780601f106104ac576101008083540402835291602001916104d7565b820191906000526020600020905b8154815290600101906020018083116104ba57829003601f168201915b5050505050905090565b6000806104ec61088e565b90506104f9818585610896565b600191505092915050565b6000600254905090565b60008061051961088e565b9050610526858285610a5f565b610531858585610aeb565b60019150509392505050565b60006012905090565b60008061055161088e565b9050610572818585610563858961077f565b61056d91906115a6565b610896565b600191505092915050565b600061058761088e565b90506105a481848460405180602001604052806000815250610d6a565b505050565b60006105b361088e565b90506105c0848284610a5f565b6105db84848460405180602001604052806000815250610d6a565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461063890611546565b80601f016020809104026020016040519081016040528092919081815260200182805461066490611546565b80156106b15780601f10610686576101008083540402835291602001916106b1565b820191906000526020600020905b81548152906001019060200180831161069457829003601f168201915b5050505050905090565b6000806106c661088e565b905060006106d4828661077f565b905083811015610719576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107109061164c565b60405180910390fd5b6107268286868403610896565b60019250505092915050565b60008061073d61088e565b905061074a818585610aeb565b600191505092915050565b600061075f61088e565b905061076c858285610a5f565b61077885858585610d6a565b5050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061081061088e565b905061081e81858585610d6a565b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc906116de565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b90611770565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a5291906111de565b60405180910390a3505050565b6000610a6b848461077f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ae55781811015610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace906117dc565b60405180910390fd5b610ae48484848403610896565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b519061186e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc090611900565b60405180910390fd5b610bd4838383610dc6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5190611992565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ced91906115a6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d5191906111de565b60405180910390a3610d64848484610dcb565b50505050565b610d75848484610aeb565b610d8184848484610dd0565b610dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db790611a24565b60405180910390fd5b50505050565b505050565b505050565b6000610df18473ffffffffffffffffffffffffffffffffffffffff16610f57565b15610f4a578373ffffffffffffffffffffffffffffffffffffffff16639d188c22610e1a61088e565b8786866040518563ffffffff1660e01b8152600401610e3c9493929190611aa8565b6020604051808303816000875af1925050508015610e7857506040513d601f19601f82011682018060405250810190610e759190611b09565b60015b610efa573d8060008114610ea8576040519150601f19603f3d011682016040523d82523d6000602084013e610ead565b606091505b506000815103610ef2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee990611ba8565b60405180910390fd5b805181602001fd5b639d188c2260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050610f4f565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610fc381610f8e565b8114610fce57600080fd5b50565b600081359050610fe081610fba565b92915050565b600060208284031215610ffc57610ffb610f84565b5b600061100a84828501610fd1565b91505092915050565b60008115159050919050565b61102881611013565b82525050565b6000602082019050611043600083018461101f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611083578082015181840152602081019050611068565b60008484015250505050565b6000601f19601f8301169050919050565b60006110ab82611049565b6110b58185611054565b93506110c5818560208601611065565b6110ce8161108f565b840191505092915050565b600060208201905081810360008301526110f381846110a0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611126826110fb565b9050919050565b6111368161111b565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b6000819050919050565b61116c81611159565b811461117757600080fd5b50565b60008135905061118981611163565b92915050565b600080604083850312156111a6576111a5610f84565b5b60006111b485828601611144565b92505060206111c58582860161117a565b9150509250929050565b6111d881611159565b82525050565b60006020820190506111f360008301846111cf565b92915050565b60008060006060848603121561121257611211610f84565b5b600061122086828701611144565b935050602061123186828701611144565b92505060406112428682870161117a565b9150509250925092565b600060ff82169050919050565b6112628161124c565b82525050565b600060208201905061127d6000830184611259565b92915050565b60006020828403121561129957611298610f84565b5b60006112a784828501611144565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112f28261108f565b810181811067ffffffffffffffff82111715611311576113106112ba565b5b80604052505050565b6000611324610f7a565b905061133082826112e9565b919050565b600067ffffffffffffffff8211156113505761134f6112ba565b5b6113598261108f565b9050602081019050919050565b82818337600083830152505050565b600061138861138384611335565b61131a565b9050828152602081018484840111156113a4576113a36112b5565b5b6113af848285611366565b509392505050565b600082601f8301126113cc576113cb6112b0565b5b81356113dc848260208601611375565b91505092915050565b600080600080608085870312156113ff576113fe610f84565b5b600061140d87828801611144565b945050602061141e87828801611144565b935050604061142f8782880161117a565b925050606085013567ffffffffffffffff8111156114505761144f610f89565b5b61145c878288016113b7565b91505092959194509250565b6000806040838503121561147f5761147e610f84565b5b600061148d85828601611144565b925050602061149e85828601611144565b9150509250929050565b6000806000606084860312156114c1576114c0610f84565b5b60006114cf86828701611144565b93505060206114e08682870161117a565b925050604084013567ffffffffffffffff81111561150157611500610f89565b5b61150d868287016113b7565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061155e57607f821691505b60208210810361157157611570611517565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b182611159565b91506115bc83611159565b92508282019050808211156115d4576115d3611577565b5b92915050565b7f4b4950373a2064656372656173656420616c6c6f77616e63652062656c6f772060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b6000611636602483611054565b9150611641826115da565b604082019050919050565b6000602082019050818103600083015261166581611629565b9050919050565b7f4b4950373a20617070726f76652066726f6d20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006116c8602383611054565b91506116d38261166c565b604082019050919050565b600060208201905081810360008301526116f7816116bb565b9050919050565b7f4b4950373a20617070726f766520746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061175a602183611054565b9150611765826116fe565b604082019050919050565b600060208201905081810360008301526117898161174d565b9050919050565b7f4b4950373a20696e73756666696369656e7420616c6c6f77616e636500000000600082015250565b60006117c6601c83611054565b91506117d182611790565b602082019050919050565b600060208201905081810360008301526117f5816117b9565b9050919050565b7f4b4950373a207472616e736665722066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611858602483611054565b9150611863826117fc565b604082019050919050565b600060208201905081810360008301526118878161184b565b9050919050565b7f4b4950373a207472616e7366657220746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006118ea602283611054565b91506118f58261188e565b604082019050919050565b60006020820190508181036000830152611919816118dd565b9050919050565b7f4b4950373a207472616e7366657220616d6f756e74206578636565647320626160008201527f6c616e6365000000000000000000000000000000000000000000000000000000602082015250565b600061197c602583611054565b915061198782611920565b604082019050919050565b600060208201905081810360008301526119ab8161196f565b9050919050565b7f4b4950373a207472616e7366657220746f206e6f6e20494b495037526563656960008201527f76657220696d706c656d656e7465720000000000000000000000000000000000602082015250565b6000611a0e602f83611054565b9150611a19826119b2565b604082019050919050565b60006020820190508181036000830152611a3d81611a01565b9050919050565b611a4d8161111b565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611a7a82611a53565b611a848185611a5e565b9350611a94818560208601611065565b611a9d8161108f565b840191505092915050565b6000608082019050611abd6000830187611a44565b611aca6020830186611a44565b611ad760408301856111cf565b8181036060830152611ae98184611a6f565b905095945050505050565b600081519050611b0381610fba565b92915050565b600060208284031215611b1f57611b1e610f84565b5b6000611b2d84828501611af4565b91505092915050565b7f4b4950373a207472616e7366657220746f206e6f6e204b49503752656365697660008201527f657220696d706c656d656e746572000000000000000000000000000000000000602082015250565b6000611b92602e83611054565b9150611b9d82611b36565b604082019050919050565b60006020820190508181036000830152611bc181611b85565b905091905056fea2646970667358221220b939a51e6152cc55493dad7cafd2127846d766274e3f83ac131023dff292d24764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x21BB CODESIZE SUB DUP1 PUSH3 0x21BB DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1BFE DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42842E0E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xEB795549 EQ PUSH2 0x351 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x423F6CEF EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x6578737100000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x438 JUMPI POP PUSH32 0xA219A02500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x448 JUMPI POP PUSH2 0x447 DUP3 PUSH2 0x824 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x45E SWAP1 PUSH2 0x1546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48A SWAP1 PUSH2 0x1546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4EC PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x4F9 DUP2 DUP6 DUP6 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x519 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x526 DUP6 DUP3 DUP6 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x531 DUP6 DUP6 DUP6 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x551 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x572 DUP2 DUP6 DUP6 PUSH2 0x563 DUP6 DUP10 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x587 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x5A4 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x5C0 DUP5 DUP3 DUP5 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD6A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x638 SWAP1 PUSH2 0x1546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x664 SWAP1 PUSH2 0x1546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x686 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x694 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C6 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6D4 DUP3 DUP7 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x726 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x73D PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x74A DUP2 DUP6 DUP6 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75F PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x76C DUP6 DUP3 DUP6 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x778 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD6A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x810 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x81E DUP2 DUP6 DUP6 DUP6 PUSH2 0xD6A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96B SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6B DUP5 DUP5 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xAE5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACE SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE4 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x896 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB51 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD4 DUP4 DUP4 DUP4 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC51 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD64 DUP5 DUP5 DUP5 PUSH2 0xDCB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD75 DUP5 DUP5 DUP5 PUSH2 0xAEB JUMP JUMPDEST PUSH2 0xD81 DUP5 DUP5 DUP5 DUP5 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0xDC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB7 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF57 JUMP JUMPDEST ISZERO PUSH2 0xF4A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9D188C22 PUSH2 0xE1A PUSH2 0x88E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE78 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xEFA JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE9 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x9D188C22 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC3 DUP2 PUSH2 0xF8E JUMP JUMPDEST DUP2 EQ PUSH2 0xFCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE0 DUP2 PUSH2 0xFBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100A DUP5 DUP3 DUP6 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1028 DUP2 PUSH2 0x1013 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1043 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x101F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1083 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AB DUP3 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x10B5 DUP2 DUP6 PUSH2 0x1054 JUMP JUMPDEST SWAP4 POP PUSH2 0x10C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x10CE DUP2 PUSH2 0x108F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F3 DUP2 DUP5 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1126 DUP3 PUSH2 0x10FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1136 DUP2 PUSH2 0x111B JUMP JUMPDEST DUP2 EQ PUSH2 0x1141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1153 DUP2 PUSH2 0x112D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x1159 JUMP JUMPDEST DUP2 EQ PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1189 DUP2 PUSH2 0x1163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A6 JUMPI PUSH2 0x11A5 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11C5 DUP6 DUP3 DUP7 ADD PUSH2 0x117A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D8 DUP2 PUSH2 0x1159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH2 0x1211 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1220 DUP7 DUP3 DUP8 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1231 DUP7 DUP3 DUP8 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1242 DUP7 DUP3 DUP8 ADD PUSH2 0x117A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0x124C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1298 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A7 DUP5 DUP3 DUP6 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12F2 DUP3 PUSH2 0x108F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0x12BA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1324 PUSH2 0xF7A JUMP JUMPDEST SWAP1 POP PUSH2 0x1330 DUP3 DUP3 PUSH2 0x12E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x134F PUSH2 0x12BA JUMP JUMPDEST JUMPDEST PUSH2 0x1359 DUP3 PUSH2 0x108F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1388 PUSH2 0x1383 DUP5 PUSH2 0x1335 JUMP JUMPDEST PUSH2 0x131A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13A4 JUMPI PUSH2 0x13A3 PUSH2 0x12B5 JUMP JUMPDEST JUMPDEST PUSH2 0x13AF DUP5 DUP3 DUP6 PUSH2 0x1366 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13CC JUMPI PUSH2 0x13CB PUSH2 0x12B0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1375 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13FF JUMPI PUSH2 0x13FE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140D DUP8 DUP3 DUP9 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x141E DUP8 DUP3 DUP9 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x142F DUP8 DUP3 DUP9 ADD PUSH2 0x117A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1450 JUMPI PUSH2 0x144F PUSH2 0xF89 JUMP JUMPDEST JUMPDEST PUSH2 0x145C DUP8 DUP3 DUP9 ADD PUSH2 0x13B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148D DUP6 DUP3 DUP7 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x149E DUP6 DUP3 DUP7 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C1 JUMPI PUSH2 0x14C0 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP7 DUP3 DUP8 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E0 DUP7 DUP3 DUP8 ADD PUSH2 0x117A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1501 JUMPI PUSH2 0x1500 PUSH2 0xF89 JUMP JUMPDEST JUMPDEST PUSH2 0x150D DUP7 DUP3 DUP8 ADD PUSH2 0x13B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x155E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1571 JUMPI PUSH2 0x1570 PUSH2 0x1517 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B1 DUP3 PUSH2 0x1159 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BC DUP4 PUSH2 0x1159 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15D4 JUMPI PUSH2 0x15D3 PUSH2 0x1577 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4B4950373A2064656372656173656420616C6C6F77616E63652062656C6F7720 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1636 PUSH1 0x24 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1641 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1665 DUP2 PUSH2 0x1629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A20617070726F76652066726F6D20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C8 PUSH1 0x23 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D3 DUP3 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F7 DUP2 PUSH2 0x16BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A20617070726F766520746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175A PUSH1 0x21 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1765 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1789 DUP2 PUSH2 0x174D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A20696E73756666696369656E7420616C6C6F77616E636500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C6 PUSH1 0x1C DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D1 DUP3 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17F5 DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E736665722066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1858 PUSH1 0x24 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1863 DUP3 PUSH2 0x17FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1887 DUP2 PUSH2 0x184B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E7366657220746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EA PUSH1 0x22 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F5 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1919 DUP2 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E7366657220616D6F756E742065786365656473206261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C616E6365000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197C PUSH1 0x25 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AB DUP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E7366657220746F206E6F6E20494B4950375265636569 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x76657220696D706C656D656E7465720000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0E PUSH1 0x2F DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A19 DUP3 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A3D DUP2 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4D DUP2 PUSH2 0x111B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7A DUP3 PUSH2 0x1A53 JUMP JUMPDEST PUSH2 0x1A84 DUP2 DUP6 PUSH2 0x1A5E JUMP JUMPDEST SWAP4 POP PUSH2 0x1A94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x1A9D DUP2 PUSH2 0x108F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A44 JUMP JUMPDEST PUSH2 0x1ACA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A44 JUMP JUMPDEST PUSH2 0x1AD7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11CF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1AE9 DUP2 DUP5 PUSH2 0x1A6F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B03 DUP2 PUSH2 0xFBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1F JUMPI PUSH2 0x1B1E PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2D DUP5 DUP3 DUP6 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E7366657220746F206E6F6E204B495037526563656976 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657220696D706C656D656E746572000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B92 PUSH1 0x2E DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9D DUP3 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC1 DUP2 PUSH2 0x1B85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 CODECOPY 0xA5 0x1E PUSH2 0x52CC SSTORE 0x49 RETURNDATASIZE 0xAD PUSH29 0xAFD2127846D766274E3F83AC131023DFF292D24764736F6C6343000812 STOP CALLER ",
							"sourceMap": "446:17703:8:-:0;;;1066:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1140:5;1132;:13;;;;;;:::i;:::-;;1165:7;1155;:17;;;;;;:::i;:::-;;1066:113;;446:17703;;7:75:9;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;446:17703:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1380": {
									"entryPoint": 3531,
									"id": 1380,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1315": {
									"entryPoint": 2198,
									"id": 1315,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_1369": {
									"entryPoint": 3526,
									"id": 1369,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnKIP7Received_1198": {
									"entryPoint": 3536,
									"id": 1198,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_msgSender_505": {
									"entryPoint": 2190,
									"id": 505,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeTransfer_959": {
									"entryPoint": 3434,
									"id": 959,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_spendAllowance_1358": {
									"entryPoint": 2655,
									"id": 1358,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_1036": {
									"entryPoint": 2795,
									"id": 1036,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_694": {
									"entryPoint": 1919,
									"id": 694,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_719": {
									"entryPoint": 1249,
									"id": 719,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_651": {
									"entryPoint": 1505,
									"id": 651,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_627": {
									"entryPoint": 1341,
									"id": 627,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_822": {
									"entryPoint": 1723,
									"id": 822,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_781": {
									"entryPoint": 1350,
									"id": 781,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_216": {
									"entryPoint": 3927,
									"id": 216,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_607": {
									"entryPoint": 1103,
									"id": 607,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransferFrom_898": {
									"entryPoint": 1449,
									"id": 898,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_930": {
									"entryPoint": 1877,
									"id": 930,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_844": {
									"entryPoint": 1405,
									"id": 844,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransfer_868": {
									"entryPoint": 2054,
									"id": 868,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_197": {
									"entryPoint": 2084,
									"id": 197,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_597": {
									"entryPoint": 877,
									"id": 597,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_617": {
									"entryPoint": 1577,
									"id": 617,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_637": {
									"entryPoint": 1284,
									"id": 637,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_752": {
									"entryPoint": 1294,
									"id": 752,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_676": {
									"entryPoint": 1842,
									"id": 676,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 4981,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 6900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5224,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4601,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 6921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6767,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4256,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6219,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6511,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5819,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 6824,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7080,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 4890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 4917,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 6739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 6750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4180,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4441,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 4966,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4197,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 4841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5495,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5399,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 4784,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 3977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3972,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7": {
									"entryPoint": 6032,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3": {
									"entryPoint": 5886,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a": {
									"entryPoint": 6966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956": {
									"entryPoint": 6286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de": {
									"entryPoint": 5594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d": {
									"entryPoint": 6140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3": {
									"entryPoint": 6578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e": {
									"entryPoint": 6432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99": {
									"entryPoint": 5740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:22308:9",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:9",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:9",
														"type": ""
													}
												],
												"src": "334:149:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:9"
															},
															"nodeType": "YulIf",
															"src": "541:62:9"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:9",
														"type": ""
													}
												],
												"src": "489:120:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:9",
														"type": ""
													}
												],
												"src": "615:137:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:9"
															},
															"nodeType": "YulIf",
															"src": "833:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:9",
														"type": ""
													}
												],
												"src": "758:327:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:9",
														"type": ""
													}
												],
												"src": "1091:90:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:9",
														"type": ""
													}
												],
												"src": "1187:109:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:9",
														"type": ""
													}
												],
												"src": "1302:210:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:9",
														"type": ""
													}
												],
												"src": "1518:99:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:9",
														"type": ""
													}
												],
												"src": "1623:169:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:9",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:9"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:9"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:9"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:9"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:9",
																"statements": []
															},
															"src": "1889:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:9",
														"type": ""
													}
												],
												"src": "1798:246:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:9",
														"type": ""
													}
												],
												"src": "2050:102:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:9",
														"type": ""
													}
												],
												"src": "2158:377:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:9",
														"type": ""
													}
												],
												"src": "2541:313:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:81:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2930:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2926:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2926:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:9",
														"type": ""
													}
												],
												"src": "2860:126:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3037:51:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3047:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3076:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3058:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3058:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3047:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3019:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3029:7:9",
														"type": ""
													}
												],
												"src": "2992:96:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3137:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3194:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3203:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3206:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3196:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3196:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3196:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3160:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3185:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3167:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3167:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3157:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3157:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3150:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3150:43:9"
															},
															"nodeType": "YulIf",
															"src": "3147:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3130:5:9",
														"type": ""
													}
												],
												"src": "3094:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3274:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3284:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3306:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3293:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3284:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3349:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3322:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3322:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3322:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3252:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3260:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3268:5:9",
														"type": ""
													}
												],
												"src": "3222:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3412:32:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3422:16:9",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3433:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3422:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3394:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3404:7:9",
														"type": ""
													}
												],
												"src": "3367:77:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3493:79:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3550:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3559:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3562:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3552:6:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3552:12:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3552:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3516:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3541:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3523:17:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3523:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3513:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3513:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3506:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3506:43:9"
															},
															"nodeType": "YulIf",
															"src": "3503:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3486:5:9",
														"type": ""
													}
												],
												"src": "3450:122:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3630:87:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3640:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3662:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3649:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3640:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3705:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3678:26:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3678:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3678:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3608:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3616:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3624:5:9",
														"type": ""
													}
												],
												"src": "3578:139:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3806:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3852:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3854:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3854:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3854:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3827:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3836:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3819:32:9"
															},
															"nodeType": "YulIf",
															"src": "3816:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "3945:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3960:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3974:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3964:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3989:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4024:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4035:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4020:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4020:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4044:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3999:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3999:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3989:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4072:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4087:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4101:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4091:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4117:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4152:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4163:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4148:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4148:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4172:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4127:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4127:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4117:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3768:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3779:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3791:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3799:6:9",
														"type": ""
													}
												],
												"src": "3723:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4268:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4285:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4308:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4290:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4290:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4278:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4278:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4278:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4256:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4263:3:9",
														"type": ""
													}
												],
												"src": "4203:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4425:124:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4435:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4447:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4458:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4443:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4435:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4515:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4528:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4539:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4524:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4524:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4471:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4471:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4471:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4397:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4409:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4420:4:9",
														"type": ""
													}
												],
												"src": "4327:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4655:519:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4701:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4703:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4703:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4703:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4676:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4685:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4672:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4672:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4697:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4668:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "4668:32:9"
															},
															"nodeType": "YulIf",
															"src": "4665:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "4794:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4809:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4823:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4813:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4838:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4873:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4884:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4869:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4869:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4893:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4848:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4848:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4838:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4921:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4936:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4950:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4940:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4966:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5001:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5012:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4997:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4997:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5021:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4976:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4976:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4966:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5049:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5064:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5078:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5068:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5094:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5129:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5140:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5125:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5125:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5149:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5104:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5104:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5094:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4609:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4620:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4632:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4640:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4648:6:9",
														"type": ""
													}
												],
												"src": "4555:619:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5223:43:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5233:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5248:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5255:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5244:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5244:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5233:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5205:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5215:7:9",
														"type": ""
													}
												],
												"src": "5180:86:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5333:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5350:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5371:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "5355:15:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5355:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5343:35:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5343:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5321:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5328:3:9",
														"type": ""
													}
												],
												"src": "5272:112:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5484:120:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5494:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5506:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5517:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5502:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5494:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5570:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5583:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5594:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5579:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5579:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5530:39:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5530:67:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5530:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5456:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5468:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5479:4:9",
														"type": ""
													}
												],
												"src": "5390:214:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5676:263:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5722:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5724:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5724:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5724:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5697:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5706:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5693:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5693:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5718:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "5689:32:9"
															},
															"nodeType": "YulIf",
															"src": "5686:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "5815:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5830:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5844:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5834:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5859:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5894:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5905:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5890:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5890:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5914:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5869:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5869:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5859:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5646:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5657:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5669:6:9",
														"type": ""
													}
												],
												"src": "5610:329:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6034:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6051:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6054:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6044:12:9"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "5945:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6157:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6174:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6177:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6167:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6167:12:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6167:12:9"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "6068:117:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6219:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6236:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6239:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6229:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6229:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6229:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6333:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6336:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6326:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6326:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6326:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6357:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6360:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6350:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "6191:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6420:238:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6430:58:9",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6452:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6482:4:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6460:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6460:27:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6448:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6448:40:9"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6434:10:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6599:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6601:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6601:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6601:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6542:10:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6554:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6539:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6539:34:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6578:10:9"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6590:6:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6575:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6575:22:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6536:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6536:62:9"
															},
															"nodeType": "YulIf",
															"src": "6533:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6637:2:9",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6641:10:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6630:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6630:22:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6630:22:9"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6406:6:9",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6414:4:9",
														"type": ""
													}
												],
												"src": "6377:281:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6705:88:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6715:30:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6725:18:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6725:20:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6774:6:9"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6782:4:9"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6754:19:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6754:33:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6754:33:9"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6689:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6698:6:9",
														"type": ""
													}
												],
												"src": "6664:129:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6865:241:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6970:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6972:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6972:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6972:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6942:6:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6950:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6939:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "6939:30:9"
															},
															"nodeType": "YulIf",
															"src": "6936:56:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7002:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7032:6:9"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7010:21:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7010:29:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7002:4:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7076:23:9",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7088:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7094:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7084:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7084:15:9"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7076:4:9"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6849:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6860:4:9",
														"type": ""
													}
												],
												"src": "6799:307:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7176:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7199:3:9"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7204:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7209:6:9"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7186:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7186:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7186:30:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "7236:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7241:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7232:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7232:16:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7250:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7225:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7225:27:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7225:27:9"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7158:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "7163:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7168:6:9",
														"type": ""
													}
												],
												"src": "7112:146:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7347:340:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7357:74:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7423:6:9"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7382:40:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7382:48:9"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7366:15:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7366:65:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7357:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7447:5:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7454:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7440:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:21:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7440:21:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7470:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "7485:5:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7481:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7481:16:9"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "7474:3:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7535:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "7537:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7537:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7537:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "7516:3:9"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "7521:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7512:16:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7530:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7509:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7509:25:9"
															},
															"nodeType": "YulIf",
															"src": "7506:112:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7664:3:9"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "7669:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7674:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "7627:36:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7627:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7627:54:9"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7320:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7325:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7333:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7341:5:9",
														"type": ""
													}
												],
												"src": "7264:423:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7767:277:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7816:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "7818:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7818:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7818:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7795:6:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7803:4:9",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7791:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7791:17:9"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7810:3:9"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7787:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7787:27:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7780:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7780:35:9"
															},
															"nodeType": "YulIf",
															"src": "7777:122:9"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7908:34:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7935:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7922:12:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7922:20:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7912:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7951:87:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8011:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8019:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8007:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8007:17:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8026:6:9"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8034:3:9"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7960:46:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "7960:78:9"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "7951:5:9"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7745:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7753:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "7761:5:9",
														"type": ""
													}
												],
												"src": "7706:338:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8176:817:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8223:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8225:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8225:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8225:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8197:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8206:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8193:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8193:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8218:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8189:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "8189:33:9"
															},
															"nodeType": "YulIf",
															"src": "8186:120:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "8316:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8331:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8345:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8335:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8360:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8395:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8406:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8391:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8391:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8415:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8370:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8370:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8360:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8443:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8458:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8472:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8462:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8488:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8523:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8534:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8519:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8519:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8543:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "8498:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8498:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8488:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8571:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8586:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8600:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8590:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8616:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8651:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8662:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8647:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8647:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8671:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "8626:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8626:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "8616:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8699:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8714:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8745:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8756:2:9",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8741:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8741:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "8728:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8728:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8718:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8807:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "8809:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8809:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8809:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8779:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8787:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8776:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8776:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "8773:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8904:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8948:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8959:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8944:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8944:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8968:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8914:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8914:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "8904:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8122:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8133:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8145:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8153:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8161:6:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8169:6:9",
														"type": ""
													}
												],
												"src": "8050:943:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9082:391:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9128:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9130:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9130:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9130:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9103:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9112:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9099:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9099:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9124:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9095:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9095:32:9"
															},
															"nodeType": "YulIf",
															"src": "9092:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9221:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9236:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9250:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9240:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9265:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9300:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9311:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9296:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9296:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9320:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9275:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9275:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9265:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9348:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9363:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9377:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9367:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9393:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9428:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9439:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9424:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9424:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9448:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9403:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9403:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9393:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9044:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9055:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9067:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9075:6:9",
														"type": ""
													}
												],
												"src": "8999:474:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9588:688:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9634:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9636:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9636:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9636:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9609:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9618:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9605:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9605:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9630:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9601:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "9601:32:9"
															},
															"nodeType": "YulIf",
															"src": "9598:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "9727:117:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9742:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9756:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9746:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9771:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9806:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9817:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9802:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9802:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9826:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9781:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9781:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9771:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9854:118:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9869:16:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9883:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9873:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9899:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9934:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9945:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9930:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9930:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9954:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9909:20:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9909:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9899:6:9"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9982:287:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9997:46:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10028:9:9"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10039:2:9",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10024:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10024:18:9"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "10011:12:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10011:32:9"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10001:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10090:83:9",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10092:77:9"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10092:79:9"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10092:79:9"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10062:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10070:18:9",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10059:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10059:30:9"
																	},
																	"nodeType": "YulIf",
																	"src": "10056:117:9"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10187:72:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10231:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10242:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10227:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10227:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10251:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "10197:29:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10197:62:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "10187:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9542:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9553:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9565:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9573:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9581:6:9",
														"type": ""
													}
												],
												"src": "9479:797:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10310:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10327:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10330:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10320:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10320:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10320:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10424:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10427:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10417:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10417:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10417:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10448:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10451:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10441:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10441:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10441:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10282:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10519:269:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10529:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10543:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10549:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10539:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10539:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10529:6:9"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10560:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10590:4:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10596:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10586:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10586:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10564:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10637:51:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10651:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10665:6:9"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10673:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10661:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10661:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10651:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10617:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10610:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10610:26:9"
															},
															"nodeType": "YulIf",
															"src": "10607:81:9"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10740:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10754:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10754:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10754:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10704:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10727:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10735:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10724:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10724:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10701:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10701:38:9"
															},
															"nodeType": "YulIf",
															"src": "10698:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10503:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10512:6:9",
														"type": ""
													}
												],
												"src": "10468:320:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10822:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10839:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10842:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10832:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10832:88:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10832:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10936:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10939:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10929:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10929:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10929:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10960:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10963:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10953:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "10953:15:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10953:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10794:180:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11024:147:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11034:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11057:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11039:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11039:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11034:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11068:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11091:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11073:17:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11073:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11068:1:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11102:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11113:1:9"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11116:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11109:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11109:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11102:3:9"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11142:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11144:16:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11144:18:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11144:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11134:1:9"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11137:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11131:2:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11131:10:9"
															},
															"nodeType": "YulIf",
															"src": "11128:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11011:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11014:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11020:3:9",
														"type": ""
													}
												],
												"src": "10980:191:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11283:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11305:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11313:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11301:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11301:14:9"
																	},
																	{
																		"hexValue": "4b4950373a2064656372656173656420616c6c6f77616e63652062656c6f7720",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11317:34:9",
																		"type": "",
																		"value": "KIP7: decreased allowance below "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11294:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11294:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11294:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11373:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11381:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11369:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11369:15:9"
																	},
																	{
																		"hexValue": "7a65726f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11386:6:9",
																		"type": "",
																		"value": "zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11362:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11362:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11362:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11275:6:9",
														"type": ""
													}
												],
												"src": "11177:223:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11552:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11562:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11628:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11633:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11569:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11569:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11562:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11734:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de",
																	"nodeType": "YulIdentifier",
																	"src": "11645:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11645:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11645:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11747:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11758:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11763:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11754:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11754:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11747:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11540:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11548:3:9",
														"type": ""
													}
												],
												"src": "11406:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11949:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11959:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11971:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11982:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11967:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11967:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11959:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12006:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12017:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12002:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12002:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12025:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12031:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12021:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12021:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11995:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "11995:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11995:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12051:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12185:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12059:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12059:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12051:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11929:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11944:4:9",
														"type": ""
													}
												],
												"src": "11778:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12309:116:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12331:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12339:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12327:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12327:14:9"
																	},
																	{
																		"hexValue": "4b4950373a20617070726f76652066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12343:34:9",
																		"type": "",
																		"value": "KIP7: approve from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12320:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12320:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12320:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12399:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12407:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12395:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12395:15:9"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12412:5:9",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12388:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12388:30:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12388:30:9"
														}
													]
												},
												"name": "store_literal_in_memory_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12301:6:9",
														"type": ""
													}
												],
												"src": "12203:222:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12577:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12587:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12653:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12658:2:9",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12594:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12594:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12587:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12759:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99",
																	"nodeType": "YulIdentifier",
																	"src": "12670:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12670:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12670:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12772:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12783:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12788:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12779:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12779:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12772:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12565:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12573:3:9",
														"type": ""
													}
												],
												"src": "12431:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12974:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12984:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12996:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13007:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12992:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "12992:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12984:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13031:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13042:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13027:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13027:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13050:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13056:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13046:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13046:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13020:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13020:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13020:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13076:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13210:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13084:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13084:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13076:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12954:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12969:4:9",
														"type": ""
													}
												],
												"src": "12803:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13334:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13356:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13364:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13352:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13352:14:9"
																	},
																	{
																		"hexValue": "4b4950373a20617070726f766520746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13368:34:9",
																		"type": "",
																		"value": "KIP7: approve to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13345:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13345:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13345:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13424:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13432:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13420:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13420:15:9"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13437:3:9",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13413:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13413:28:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13413:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13326:6:9",
														"type": ""
													}
												],
												"src": "13228:220:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13600:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13610:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13676:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13681:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13617:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13617:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13610:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13782:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3",
																	"nodeType": "YulIdentifier",
																	"src": "13693:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13693:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13693:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13795:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13806:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13811:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13802:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "13802:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13795:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13588:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13596:3:9",
														"type": ""
													}
												],
												"src": "13454:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13997:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14007:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14019:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14030:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14015:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14015:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14007:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14054:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14065:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14050:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14050:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14073:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14079:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14069:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14069:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14043:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14043:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14043:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14099:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14233:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14107:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14099:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13977:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13992:4:9",
														"type": ""
													}
												],
												"src": "13826:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14357:72:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14379:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14387:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14375:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14375:14:9"
																	},
																	{
																		"hexValue": "4b4950373a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14391:30:9",
																		"type": "",
																		"value": "KIP7: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14368:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14368:54:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14368:54:9"
														}
													]
												},
												"name": "store_literal_in_memory_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14349:6:9",
														"type": ""
													}
												],
												"src": "14251:178:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14581:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14591:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14657:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14662:2:9",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14598:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14598:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14591:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14763:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7",
																	"nodeType": "YulIdentifier",
																	"src": "14674:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14674:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14674:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14776:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14787:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14792:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14783:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14783:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14776:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14569:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14577:3:9",
														"type": ""
													}
												],
												"src": "14435:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14978:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14988:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15000:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15011:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14996:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "14996:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14988:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15035:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15046:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15031:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15031:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15054:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15060:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15050:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15050:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15024:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15024:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15024:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15080:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15214:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15088:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15088:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15080:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14958:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14973:4:9",
														"type": ""
													}
												],
												"src": "14807:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15338:117:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15360:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15368:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15356:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15356:14:9"
																	},
																	{
																		"hexValue": "4b4950373a207472616e736665722066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15372:34:9",
																		"type": "",
																		"value": "KIP7: transfer from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15349:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15349:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15349:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15428:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15436:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15424:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15424:15:9"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15441:6:9",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15417:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15417:31:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15417:31:9"
														}
													]
												},
												"name": "store_literal_in_memory_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15330:6:9",
														"type": ""
													}
												],
												"src": "15232:223:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15607:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15617:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15683:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15688:2:9",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15624:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15624:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15617:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15789:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d",
																	"nodeType": "YulIdentifier",
																	"src": "15700:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15700:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15700:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15802:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15813:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15818:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15809:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "15809:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15802:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15595:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15603:3:9",
														"type": ""
													}
												],
												"src": "15461:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16004:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16014:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16026:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16037:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16022:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16022:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16014:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16061:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16072:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16057:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16057:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "16080:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16086:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16076:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16076:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16050:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16050:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16050:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16106:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16240:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16114:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16114:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16106:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15984:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15999:4:9",
														"type": ""
													}
												],
												"src": "15833:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16364:115:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16386:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16394:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16382:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16382:14:9"
																	},
																	{
																		"hexValue": "4b4950373a207472616e7366657220746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16398:34:9",
																		"type": "",
																		"value": "KIP7: transfer to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16375:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16375:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16375:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16454:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16462:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16450:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16450:15:9"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16467:4:9",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16443:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16443:29:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16443:29:9"
														}
													]
												},
												"name": "store_literal_in_memory_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16356:6:9",
														"type": ""
													}
												],
												"src": "16258:221:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16631:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16641:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16707:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16712:2:9",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16648:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16648:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16641:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16813:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956",
																	"nodeType": "YulIdentifier",
																	"src": "16724:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16724:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16724:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16826:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16837:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16842:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16833:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "16833:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16826:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16619:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16627:3:9",
														"type": ""
													}
												],
												"src": "16485:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17028:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17038:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17050:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17061:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17046:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17046:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17038:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17085:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17096:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17081:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17081:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "17104:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17110:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "17100:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17100:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17074:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17074:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17074:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17130:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "17264:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17138:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17138:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17130:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17008:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17023:4:9",
														"type": ""
													}
												],
												"src": "16857:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17388:118:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17410:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17418:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17406:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17406:14:9"
																	},
																	{
																		"hexValue": "4b4950373a207472616e7366657220616d6f756e742065786365656473206261",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17422:34:9",
																		"type": "",
																		"value": "KIP7: transfer amount exceeds ba"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17399:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17399:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17399:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17478:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17486:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17474:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17474:15:9"
																	},
																	{
																		"hexValue": "6c616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17491:7:9",
																		"type": "",
																		"value": "lance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17467:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17467:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17467:32:9"
														}
													]
												},
												"name": "store_literal_in_memory_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17380:6:9",
														"type": ""
													}
												],
												"src": "17282:224:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17658:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17668:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17734:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17739:2:9",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17675:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17675:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17668:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17840:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e",
																	"nodeType": "YulIdentifier",
																	"src": "17751:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17751:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17751:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17853:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17864:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17869:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17860:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "17860:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17853:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17646:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17654:3:9",
														"type": ""
													}
												],
												"src": "17512:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18055:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18065:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18077:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18088:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18073:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18073:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18065:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18112:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18123:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18108:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18108:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18131:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18137:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18127:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18127:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18101:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18101:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18101:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18157:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18291:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18165:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18165:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18157:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18035:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18050:4:9",
														"type": ""
													}
												],
												"src": "17884:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18415:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18437:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18445:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18433:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18433:14:9"
																	},
																	{
																		"hexValue": "4b4950373a207472616e7366657220746f206e6f6e20494b4950375265636569",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18449:34:9",
																		"type": "",
																		"value": "KIP7: transfer to non IKIP7Recei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18426:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18426:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18426:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18505:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18513:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18501:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18501:15:9"
																	},
																	{
																		"hexValue": "76657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18518:17:9",
																		"type": "",
																		"value": "ver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18494:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18494:42:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18494:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18407:6:9",
														"type": ""
													}
												],
												"src": "18309:234:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18695:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18705:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18771:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18776:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18712:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18712:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18705:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18877:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3",
																	"nodeType": "YulIdentifier",
																	"src": "18788:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18788:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18788:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18890:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18901:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18906:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18897:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "18897:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18890:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18683:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18691:3:9",
														"type": ""
													}
												],
												"src": "18549:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19092:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19102:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19114:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19125:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19110:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19110:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19102:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19149:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19160:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19145:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19145:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19168:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19174:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19164:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19164:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19138:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19138:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19138:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19194:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19328:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19202:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19202:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19194:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19072:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19087:4:9",
														"type": ""
													}
												],
												"src": "18921:419:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19411:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19428:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19451:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19433:17:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19433:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19421:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19421:37:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19421:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19399:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19406:3:9",
														"type": ""
													}
												],
												"src": "19346:118:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19528:40:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19539:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19555:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19549:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19549:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "19539:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19511:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19521:6:9",
														"type": ""
													}
												],
												"src": "19470:98:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19669:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19686:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19691:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19679:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19679:19:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19679:19:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19707:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19726:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19731:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19722:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19722:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "19707:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19641:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "19646:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "19657:11:9",
														"type": ""
													}
												],
												"src": "19574:168:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19838:283:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19848:52:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19894:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "19862:31:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19862:38:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19852:6:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19909:77:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19974:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19979:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19916:57:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19916:70:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "19909:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "20034:5:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20041:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20030:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20030:16:9"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20048:3:9"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "20053:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "19995:34:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "19995:65:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19995:65:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20069:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20080:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "20107:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "20085:21:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20085:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20076:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20076:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20069:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19819:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "19826:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "19834:3:9",
														"type": ""
													}
												],
												"src": "19748:373:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20327:440:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20337:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20349:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20360:3:9",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20345:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20345:19:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20337:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "20418:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20431:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20442:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20427:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20427:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20374:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20374:71:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20374:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "20499:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20512:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20523:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20508:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20508:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20455:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20455:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20455:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "20581:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20594:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20605:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20590:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20590:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20537:43:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20537:72:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20537:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20630:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20641:2:9",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20626:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20626:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20650:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20656:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20646:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20646:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20619:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20619:48:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20619:48:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20676:84:9",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "20746:6:9"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20755:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20684:61:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20684:76:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20676:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20275:9:9",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "20287:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "20295:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "20303:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20311:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20322:4:9",
														"type": ""
													}
												],
												"src": "20127:640:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20835:79:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20845:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "20860:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "20854:5:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20854:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "20845:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "20902:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "20876:25:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "20876:32:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20876:32:9"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "20813:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20821:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "20829:5:9",
														"type": ""
													}
												],
												"src": "20773:141:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20996:273:9",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21042:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "21044:77:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21044:79:9"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21044:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21017:7:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21026:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21013:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21013:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21038:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "21009:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21009:32:9"
															},
															"nodeType": "YulIf",
															"src": "21006:119:9"
														},
														{
															"nodeType": "YulBlock",
															"src": "21135:127:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "21150:15:9",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21164:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "21154:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "21179:73:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "21224:9:9"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "21235:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "21220:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21220:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "21244:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "21189:30:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21189:63:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "21179:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20966:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "20977:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "20989:6:9",
														"type": ""
													}
												],
												"src": "20920:349:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21381:127:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21403:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21411:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21399:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21399:14:9"
																	},
																	{
																		"hexValue": "4b4950373a207472616e7366657220746f206e6f6e204b495037526563656976",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21415:34:9",
																		"type": "",
																		"value": "KIP7: transfer to non KIP7Receiv"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21392:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21392:58:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21392:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "21471:6:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21479:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21467:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21467:15:9"
																	},
																	{
																		"hexValue": "657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21484:16:9",
																		"type": "",
																		"value": "er implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21460:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21460:41:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21460:41:9"
														}
													]
												},
												"name": "store_literal_in_memory_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "21373:6:9",
														"type": ""
													}
												],
												"src": "21275:233:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21660:220:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21670:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21736:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21741:2:9",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21677:58:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21677:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21670:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21842:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a",
																	"nodeType": "YulIdentifier",
																	"src": "21753:88:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21753:93:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21753:93:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21855:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21866:3:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21871:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21862:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "21862:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21855:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21648:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21656:3:9",
														"type": ""
													}
												],
												"src": "21514:366:9"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22057:248:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22067:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22079:9:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22090:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22075:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22075:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22067:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22114:9:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22125:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22110:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22110:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "22133:4:9"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22139:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "22129:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22129:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22103:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22103:47:9"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22103:47:9"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22159:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "22293:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22167:124:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "22167:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22159:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22037:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22052:4:9",
														"type": ""
													}
												],
												"src": "21886:419:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: decreased allowance below \")\n\n        mstore(add(memPtr, 32), \"zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: approve from the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: approve to the zero addres\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: transfer from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: transfer to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: transfer amount exceeds ba\")\n\n        mstore(add(memPtr, 32), \"lance\")\n\n    }\n\n    function abi_encode_t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: transfer to non IKIP7Recei\")\n\n        mstore(add(memPtr, 32), \"ver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a(memPtr) {\n\n        mstore(add(memPtr, 0), \"KIP7: transfer to non KIP7Receiv\")\n\n        mstore(add(memPtr, 32), \"er implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806342842e0e11610097578063a9059cbb11610066578063a9059cbb146102d5578063b88d4fde14610305578063dd62ed3e14610321578063eb7955491461035157610100565b806342842e0e1461023b57806370a082311461025757806395d89b4114610287578063a457c2d7146102a557610100565b806323b872dd116100d357806323b872dd146101a1578063313ce567146101d157806339509351146101ef578063423f6cef1461021f57610100565b806301ffc9a71461010557806306fdde0314610135578063095ea7b31461015357806318160ddd14610183575b600080fd5b61011f600480360381019061011a9190610fe6565b61036d565b60405161012c919061102e565b60405180910390f35b61013d61044f565b60405161014a91906110d9565b60405180910390f35b61016d6004803603810190610168919061118f565b6104e1565b60405161017a919061102e565b60405180910390f35b61018b610504565b60405161019891906111de565b60405180910390f35b6101bb60048036038101906101b691906111f9565b61050e565b6040516101c8919061102e565b60405180910390f35b6101d961053d565b6040516101e69190611268565b60405180910390f35b6102096004803603810190610204919061118f565b610546565b604051610216919061102e565b60405180910390f35b6102396004803603810190610234919061118f565b61057d565b005b610255600480360381019061025091906111f9565b6105a9565b005b610271600480360381019061026c9190611283565b6105e1565b60405161027e91906111de565b60405180910390f35b61028f610629565b60405161029c91906110d9565b60405180910390f35b6102bf60048036038101906102ba919061118f565b6106bb565b6040516102cc919061102e565b60405180910390f35b6102ef60048036038101906102ea919061118f565b610732565b6040516102fc919061102e565b60405180910390f35b61031f600480360381019061031a91906113e5565b610755565b005b61033b60048036038101906103369190611468565b61077f565b60405161034891906111de565b60405180910390f35b61036b600480360381019061036691906114a8565b610806565b005b60007f65787371000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061043857507fa219a025000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610448575061044782610824565b5b9050919050565b60606003805461045e90611546565b80601f016020809104026020016040519081016040528092919081815260200182805461048a90611546565b80156104d75780601f106104ac576101008083540402835291602001916104d7565b820191906000526020600020905b8154815290600101906020018083116104ba57829003601f168201915b5050505050905090565b6000806104ec61088e565b90506104f9818585610896565b600191505092915050565b6000600254905090565b60008061051961088e565b9050610526858285610a5f565b610531858585610aeb565b60019150509392505050565b60006012905090565b60008061055161088e565b9050610572818585610563858961077f565b61056d91906115a6565b610896565b600191505092915050565b600061058761088e565b90506105a481848460405180602001604052806000815250610d6a565b505050565b60006105b361088e565b90506105c0848284610a5f565b6105db84848460405180602001604052806000815250610d6a565b50505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606004805461063890611546565b80601f016020809104026020016040519081016040528092919081815260200182805461066490611546565b80156106b15780601f10610686576101008083540402835291602001916106b1565b820191906000526020600020905b81548152906001019060200180831161069457829003601f168201915b5050505050905090565b6000806106c661088e565b905060006106d4828661077f565b905083811015610719576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107109061164c565b60405180910390fd5b6107268286868403610896565b60019250505092915050565b60008061073d61088e565b905061074a818585610aeb565b600191505092915050565b600061075f61088e565b905061076c858285610a5f565b61077885858585610d6a565b5050505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600061081061088e565b905061081e81858585610d6a565b50505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610905576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108fc906116de565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610974576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096b90611770565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610a5291906111de565b60405180910390a3505050565b6000610a6b848461077f565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610ae55781811015610ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ace906117dc565b60405180910390fd5b610ae48484848403610896565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b519061186e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bc9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc090611900565b60405180910390fd5b610bd4838383610dc6565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5190611992565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ced91906115a6565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d5191906111de565b60405180910390a3610d64848484610dcb565b50505050565b610d75848484610aeb565b610d8184848484610dd0565b610dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db790611a24565b60405180910390fd5b50505050565b505050565b505050565b6000610df18473ffffffffffffffffffffffffffffffffffffffff16610f57565b15610f4a578373ffffffffffffffffffffffffffffffffffffffff16639d188c22610e1a61088e565b8786866040518563ffffffff1660e01b8152600401610e3c9493929190611aa8565b6020604051808303816000875af1925050508015610e7857506040513d601f19601f82011682018060405250810190610e759190611b09565b60015b610efa573d8060008114610ea8576040519150601f19603f3d011682016040523d82523d6000602084013e610ead565b606091505b506000815103610ef2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee990611ba8565b60405180910390fd5b805181602001fd5b639d188c2260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050610f4f565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610fc381610f8e565b8114610fce57600080fd5b50565b600081359050610fe081610fba565b92915050565b600060208284031215610ffc57610ffb610f84565b5b600061100a84828501610fd1565b91505092915050565b60008115159050919050565b61102881611013565b82525050565b6000602082019050611043600083018461101f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611083578082015181840152602081019050611068565b60008484015250505050565b6000601f19601f8301169050919050565b60006110ab82611049565b6110b58185611054565b93506110c5818560208601611065565b6110ce8161108f565b840191505092915050565b600060208201905081810360008301526110f381846110a0565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611126826110fb565b9050919050565b6111368161111b565b811461114157600080fd5b50565b6000813590506111538161112d565b92915050565b6000819050919050565b61116c81611159565b811461117757600080fd5b50565b60008135905061118981611163565b92915050565b600080604083850312156111a6576111a5610f84565b5b60006111b485828601611144565b92505060206111c58582860161117a565b9150509250929050565b6111d881611159565b82525050565b60006020820190506111f360008301846111cf565b92915050565b60008060006060848603121561121257611211610f84565b5b600061122086828701611144565b935050602061123186828701611144565b92505060406112428682870161117a565b9150509250925092565b600060ff82169050919050565b6112628161124c565b82525050565b600060208201905061127d6000830184611259565b92915050565b60006020828403121561129957611298610f84565b5b60006112a784828501611144565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6112f28261108f565b810181811067ffffffffffffffff82111715611311576113106112ba565b5b80604052505050565b6000611324610f7a565b905061133082826112e9565b919050565b600067ffffffffffffffff8211156113505761134f6112ba565b5b6113598261108f565b9050602081019050919050565b82818337600083830152505050565b600061138861138384611335565b61131a565b9050828152602081018484840111156113a4576113a36112b5565b5b6113af848285611366565b509392505050565b600082601f8301126113cc576113cb6112b0565b5b81356113dc848260208601611375565b91505092915050565b600080600080608085870312156113ff576113fe610f84565b5b600061140d87828801611144565b945050602061141e87828801611144565b935050604061142f8782880161117a565b925050606085013567ffffffffffffffff8111156114505761144f610f89565b5b61145c878288016113b7565b91505092959194509250565b6000806040838503121561147f5761147e610f84565b5b600061148d85828601611144565b925050602061149e85828601611144565b9150509250929050565b6000806000606084860312156114c1576114c0610f84565b5b60006114cf86828701611144565b93505060206114e08682870161117a565b925050604084013567ffffffffffffffff81111561150157611500610f89565b5b61150d868287016113b7565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061155e57607f821691505b60208210810361157157611570611517565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b182611159565b91506115bc83611159565b92508282019050808211156115d4576115d3611577565b5b92915050565b7f4b4950373a2064656372656173656420616c6c6f77616e63652062656c6f772060008201527f7a65726f00000000000000000000000000000000000000000000000000000000602082015250565b6000611636602483611054565b9150611641826115da565b604082019050919050565b6000602082019050818103600083015261166581611629565b9050919050565b7f4b4950373a20617070726f76652066726f6d20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006116c8602383611054565b91506116d38261166c565b604082019050919050565b600060208201905081810360008301526116f7816116bb565b9050919050565b7f4b4950373a20617070726f766520746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061175a602183611054565b9150611765826116fe565b604082019050919050565b600060208201905081810360008301526117898161174d565b9050919050565b7f4b4950373a20696e73756666696369656e7420616c6c6f77616e636500000000600082015250565b60006117c6601c83611054565b91506117d182611790565b602082019050919050565b600060208201905081810360008301526117f5816117b9565b9050919050565b7f4b4950373a207472616e736665722066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611858602483611054565b9150611863826117fc565b604082019050919050565b600060208201905081810360008301526118878161184b565b9050919050565b7f4b4950373a207472616e7366657220746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006118ea602283611054565b91506118f58261188e565b604082019050919050565b60006020820190508181036000830152611919816118dd565b9050919050565b7f4b4950373a207472616e7366657220616d6f756e74206578636565647320626160008201527f6c616e6365000000000000000000000000000000000000000000000000000000602082015250565b600061197c602583611054565b915061198782611920565b604082019050919050565b600060208201905081810360008301526119ab8161196f565b9050919050565b7f4b4950373a207472616e7366657220746f206e6f6e20494b495037526563656960008201527f76657220696d706c656d656e7465720000000000000000000000000000000000602082015250565b6000611a0e602f83611054565b9150611a19826119b2565b604082019050919050565b60006020820190508181036000830152611a3d81611a01565b9050919050565b611a4d8161111b565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611a7a82611a53565b611a848185611a5e565b9350611a94818560208601611065565b611a9d8161108f565b840191505092915050565b6000608082019050611abd6000830187611a44565b611aca6020830186611a44565b611ad760408301856111cf565b8181036060830152611ae98184611a6f565b905095945050505050565b600081519050611b0381610fba565b92915050565b600060208284031215611b1f57611b1e610f84565b5b6000611b2d84828501611af4565b91505092915050565b7f4b4950373a207472616e7366657220746f206e6f6e204b49503752656365697660008201527f657220696d706c656d656e746572000000000000000000000000000000000000602082015250565b6000611b92602e83611054565b9150611b9d82611b36565b604082019050919050565b60006020820190508181036000830152611bc181611b85565b905091905056fea2646970667358221220b939a51e6152cc55493dad7cafd2127846d766274e3f83ac131023dff292d24764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42842E0E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x305 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x321 JUMPI DUP1 PUSH4 0xEB795549 EQ PUSH2 0x351 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x42842E0E EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x2A5 JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1A1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0x423F6CEF EQ PUSH2 0x21F JUMPI PUSH2 0x100 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x135 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x183 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x11F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xFE6 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13D PUSH2 0x44F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18B PUSH2 0x504 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B6 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x50E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D9 PUSH2 0x53D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x57D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0x11F9 JUMP JUMPDEST PUSH2 0x5A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1283 JUMP JUMPDEST PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27E SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28F PUSH2 0x629 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29C SWAP2 SWAP1 PUSH2 0x10D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x118F JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FC SWAP2 SWAP1 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x13E5 JUMP JUMPDEST PUSH2 0x755 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x336 SWAP2 SWAP1 PUSH2 0x1468 JUMP JUMPDEST PUSH2 0x77F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x348 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x14A8 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x6578737100000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x438 JUMPI POP PUSH32 0xA219A02500000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x448 JUMPI POP PUSH2 0x447 DUP3 PUSH2 0x824 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x45E SWAP1 PUSH2 0x1546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x48A SWAP1 PUSH2 0x1546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4D7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4AC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4D7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4BA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4EC PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x4F9 DUP2 DUP6 DUP6 PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x519 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x526 DUP6 DUP3 DUP6 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x531 DUP6 DUP6 DUP6 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x551 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x572 DUP2 DUP6 DUP6 PUSH2 0x563 DUP6 DUP10 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x587 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x5A4 DUP2 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD6A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5B3 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x5C0 DUP5 DUP3 DUP5 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x5DB DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xD6A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x638 SWAP1 PUSH2 0x1546 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x664 SWAP1 PUSH2 0x1546 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x686 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x694 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6C6 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x6D4 DUP3 DUP7 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x719 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x710 SWAP1 PUSH2 0x164C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x726 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x896 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x73D PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x74A DUP2 DUP6 DUP6 PUSH2 0xAEB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75F PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x76C DUP6 DUP3 DUP6 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x778 DUP6 DUP6 DUP6 DUP6 PUSH2 0xD6A JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x810 PUSH2 0x88E JUMP JUMPDEST SWAP1 POP PUSH2 0x81E DUP2 DUP6 DUP6 DUP6 PUSH2 0xD6A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x905 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FC SWAP1 PUSH2 0x16DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96B SWAP1 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0xA52 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6B DUP5 DUP5 PUSH2 0x77F JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0xAE5 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xAD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xACE SWAP1 PUSH2 0x17DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAE4 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x896 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB51 SWAP1 PUSH2 0x186E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC0 SWAP1 PUSH2 0x1900 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBD4 DUP4 DUP4 DUP4 PUSH2 0xDC6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC51 SWAP1 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xCED SWAP2 SWAP1 PUSH2 0x15A6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x11DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD64 DUP5 DUP5 DUP5 PUSH2 0xDCB JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xD75 DUP5 DUP5 DUP5 PUSH2 0xAEB JUMP JUMPDEST PUSH2 0xD81 DUP5 DUP5 DUP5 DUP5 PUSH2 0xDD0 JUMP JUMPDEST PUSH2 0xDC0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB7 SWAP1 PUSH2 0x1A24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF57 JUMP JUMPDEST ISZERO PUSH2 0xF4A JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x9D188C22 PUSH2 0xE1A PUSH2 0x88E JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE3C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AA8 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xE78 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x1B09 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xEFA JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xEAD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0xEF2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE9 SWAP1 PUSH2 0x1BA8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x9D188C22 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0xF4F JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC3 DUP2 PUSH2 0xF8E JUMP JUMPDEST DUP2 EQ PUSH2 0xFCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE0 DUP2 PUSH2 0xFBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFFC JUMPI PUSH2 0xFFB PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x100A DUP5 DUP3 DUP6 ADD PUSH2 0xFD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1028 DUP2 PUSH2 0x1013 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1043 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x101F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1083 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1068 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10AB DUP3 PUSH2 0x1049 JUMP JUMPDEST PUSH2 0x10B5 DUP2 DUP6 PUSH2 0x1054 JUMP JUMPDEST SWAP4 POP PUSH2 0x10C5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x10CE DUP2 PUSH2 0x108F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10F3 DUP2 DUP5 PUSH2 0x10A0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1126 DUP3 PUSH2 0x10FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1136 DUP2 PUSH2 0x111B JUMP JUMPDEST DUP2 EQ PUSH2 0x1141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1153 DUP2 PUSH2 0x112D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116C DUP2 PUSH2 0x1159 JUMP JUMPDEST DUP2 EQ PUSH2 0x1177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1189 DUP2 PUSH2 0x1163 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x11A6 JUMPI PUSH2 0x11A5 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11B4 DUP6 DUP3 DUP7 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11C5 DUP6 DUP3 DUP7 ADD PUSH2 0x117A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x11D8 DUP2 PUSH2 0x1159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x11CF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1212 JUMPI PUSH2 0x1211 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1220 DUP7 DUP3 DUP8 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1231 DUP7 DUP3 DUP8 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1242 DUP7 DUP3 DUP8 ADD PUSH2 0x117A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1262 DUP2 PUSH2 0x124C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x127D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1259 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1299 JUMPI PUSH2 0x1298 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x12A7 DUP5 DUP3 DUP6 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12F2 DUP3 PUSH2 0x108F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0x12BA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1324 PUSH2 0xF7A JUMP JUMPDEST SWAP1 POP PUSH2 0x1330 DUP3 DUP3 PUSH2 0x12E9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1350 JUMPI PUSH2 0x134F PUSH2 0x12BA JUMP JUMPDEST JUMPDEST PUSH2 0x1359 DUP3 PUSH2 0x108F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1388 PUSH2 0x1383 DUP5 PUSH2 0x1335 JUMP JUMPDEST PUSH2 0x131A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x13A4 JUMPI PUSH2 0x13A3 PUSH2 0x12B5 JUMP JUMPDEST JUMPDEST PUSH2 0x13AF DUP5 DUP3 DUP6 PUSH2 0x1366 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x13CC JUMPI PUSH2 0x13CB PUSH2 0x12B0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x13DC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1375 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x13FF JUMPI PUSH2 0x13FE PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x140D DUP8 DUP3 DUP9 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x141E DUP8 DUP3 DUP9 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x142F DUP8 DUP3 DUP9 ADD PUSH2 0x117A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1450 JUMPI PUSH2 0x144F PUSH2 0xF89 JUMP JUMPDEST JUMPDEST PUSH2 0x145C DUP8 DUP3 DUP9 ADD PUSH2 0x13B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x147F JUMPI PUSH2 0x147E PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x148D DUP6 DUP3 DUP7 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x149E DUP6 DUP3 DUP7 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C1 JUMPI PUSH2 0x14C0 PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14CF DUP7 DUP3 DUP8 ADD PUSH2 0x1144 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E0 DUP7 DUP3 DUP8 ADD PUSH2 0x117A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1501 JUMPI PUSH2 0x1500 PUSH2 0xF89 JUMP JUMPDEST JUMPDEST PUSH2 0x150D DUP7 DUP3 DUP8 ADD PUSH2 0x13B7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x155E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1571 JUMPI PUSH2 0x1570 PUSH2 0x1517 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x15B1 DUP3 PUSH2 0x1159 JUMP JUMPDEST SWAP2 POP PUSH2 0x15BC DUP4 PUSH2 0x1159 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x15D4 JUMPI PUSH2 0x15D3 PUSH2 0x1577 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4B4950373A2064656372656173656420616C6C6F77616E63652062656C6F7720 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7A65726F00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1636 PUSH1 0x24 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1641 DUP3 PUSH2 0x15DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1665 DUP2 PUSH2 0x1629 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A20617070726F76652066726F6D20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C8 PUSH1 0x23 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D3 DUP3 PUSH2 0x166C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F7 DUP2 PUSH2 0x16BB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A20617070726F766520746F20746865207A65726F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x175A PUSH1 0x21 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1765 DUP3 PUSH2 0x16FE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1789 DUP2 PUSH2 0x174D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A20696E73756666696369656E7420616C6C6F77616E636500000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17C6 PUSH1 0x1C DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D1 DUP3 PUSH2 0x1790 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17F5 DUP2 PUSH2 0x17B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E736665722066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1858 PUSH1 0x24 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1863 DUP3 PUSH2 0x17FC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1887 DUP2 PUSH2 0x184B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E7366657220746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18EA PUSH1 0x22 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x18F5 DUP3 PUSH2 0x188E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1919 DUP2 PUSH2 0x18DD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E7366657220616D6F756E742065786365656473206261 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C616E6365000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x197C PUSH1 0x25 DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1987 DUP3 PUSH2 0x1920 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19AB DUP2 PUSH2 0x196F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E7366657220746F206E6F6E20494B4950375265636569 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x76657220696D706C656D656E7465720000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0E PUSH1 0x2F DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A19 DUP3 PUSH2 0x19B2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A3D DUP2 PUSH2 0x1A01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4D DUP2 PUSH2 0x111B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A7A DUP3 PUSH2 0x1A53 JUMP JUMPDEST PUSH2 0x1A84 DUP2 DUP6 PUSH2 0x1A5E JUMP JUMPDEST SWAP4 POP PUSH2 0x1A94 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1065 JUMP JUMPDEST PUSH2 0x1A9D DUP2 PUSH2 0x108F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1ABD PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1A44 JUMP JUMPDEST PUSH2 0x1ACA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1A44 JUMP JUMPDEST PUSH2 0x1AD7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x11CF JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1AE9 DUP2 DUP5 PUSH2 0x1A6F JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1B03 DUP2 PUSH2 0xFBA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B1F JUMPI PUSH2 0x1B1E PUSH2 0xF84 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B2D DUP5 DUP3 DUP6 ADD PUSH2 0x1AF4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4B4950373A207472616E7366657220746F206E6F6E204B495037526563656976 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x657220696D706C656D656E746572000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B92 PUSH1 0x2E DUP4 PUSH2 0x1054 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9D DUP3 PUSH2 0x1B36 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC1 DUP2 PUSH2 0x1B85 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 CODECOPY 0xA5 0x1E PUSH2 0x52CC SSTORE 0x49 RETURNDATASIZE 0xAD PUSH29 0xAFD2127846D766274E3F83AC131023DFF292D24764736F6C6343000812 STOP CALLER ",
							"sourceMap": "446:17703:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1245:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1596:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3865:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2680:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4622:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2530:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5302:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6772:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8132:282;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2843:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1807:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6022:426;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3163:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8757:313;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3409:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7212:232;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1245:286;1337:4;1387:23;1372:38;;;:11;:38;;;;:100;;;;1441:31;1426:46;;;:11;:46;;;;1372:100;:152;;;;1488:36;1512:11;1488:23;:36::i;:::-;1372:152;1353:171;;1245:286;;;:::o;1596:98::-;1650:13;1682:5;1675:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1596:98;:::o;3865:197::-;3948:4;3964:13;3980:12;:10;:12::i;:::-;3964:28;;4002:32;4011:5;4018:7;4027:6;4002:8;:32::i;:::-;4051:4;4044:11;;;3865:197;;;;:::o;2680:106::-;2741:7;2767:12;;2760:19;;2680:106;:::o;4622:286::-;4749:4;4765:15;4783:12;:10;:12::i;:::-;4765:30;;4805:38;4821:4;4827:7;4836:6;4805:15;:38::i;:::-;4853:27;4863:4;4869:2;4873:6;4853:9;:27::i;:::-;4897:4;4890:11;;;4622:286;;;;;:::o;2530:91::-;2588:5;2612:2;2605:9;;2530:91;:::o;5302:234::-;5390:4;5406:13;5422:12;:10;:12::i;:::-;5406:28;;5444:64;5453:5;5460:7;5497:10;5469:25;5479:5;5486:7;5469:9;:25::i;:::-;:38;;;;:::i;:::-;5444:8;:64::i;:::-;5525:4;5518:11;;;5302:234;;;;:::o;6772:179::-;6863:13;6879:12;:10;:12::i;:::-;6863:28;;6901:43;6915:5;6922:9;6933:6;6901:43;;;;;;;;;;;;:13;:43::i;:::-;6853:98;6772:179;;:::o;8132:282::-;8273:15;8291:12;:10;:12::i;:::-;8273:30;;8313:40;8329:6;8337:7;8346:6;8313:15;:40::i;:::-;8363:44;8377:6;8385:9;8396:6;8363:44;;;;;;;;;;;;:13;:44::i;:::-;8263:151;8132:282;;;:::o;2843:125::-;2917:7;2943:9;:18;2953:7;2943:18;;;;;;;;;;;;;;;;2936:25;;2843:125;;;:::o;1807:102::-;1863:13;1895:7;1888:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1807:102;:::o;6022:426::-;6115:4;6131:13;6147:12;:10;:12::i;:::-;6131:28;;6169:24;6196:25;6206:5;6213:7;6196:9;:25::i;:::-;6169:52;;6259:15;6239:16;:35;;6231:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;6349:60;6358:5;6365:7;6393:15;6374:16;:34;6349:8;:60::i;:::-;6437:4;6430:11;;;;6022:426;;;;:::o;3163:189::-;3242:4;3258:13;3274:12;:10;:12::i;:::-;3258:28;;3296;3306:5;3313:2;3317:6;3296:9;:28::i;:::-;3341:4;3334:11;;;3163:189;;;;:::o;8757:313::-;8926:15;8944:12;:10;:12::i;:::-;8926:30;;8966:40;8982:6;8990:7;8999:6;8966:15;:40::i;:::-;9016:47;9030:6;9038:9;9049:6;9057:5;9016:13;:47::i;:::-;8916:154;8757:313;;;;:::o;3409:149::-;3498:7;3524:11;:18;3536:5;3524:18;;;;;;;;;;;;;;;:27;3543:7;3524:27;;;;;;;;;;;;;;;;3517:34;;3409:149;;;;:::o;7212:232::-;7353:13;7369:12;:10;:12::i;:::-;7353:28;;7391:46;7405:5;7412:9;7423:6;7431:5;7391:13;:46::i;:::-;7343:101;7212:232;;;:::o;994:154:5:-;1079:4;1117:24;1102:39;;;:11;:39;;;;1095:46;;994:154;;;:::o;640:96:7:-;693:7;719:10;712:17;;640:96;:::o;15645:368:8:-;15793:1;15776:19;;:5;:19;;;15768:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;15872:1;15853:21;;:7;:21;;;15845:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;15953:6;15923:11;:18;15935:5;15923:18;;;;;;;;;;;;;;;:27;15942:7;15923:27;;;;;;;;;;;;;;;:36;;;;15990:7;15974:32;;15983:5;15974:32;;;15999:6;15974:32;;;;;;:::i;:::-;;;;;;;;15645:368;;;:::o;16294:440::-;16424:24;16451:25;16461:5;16468:7;16451:9;:25::i;:::-;16424:52;;16510:17;16490:16;:37;16486:242;;16571:6;16551:16;:26;;16543:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;16652:51;16661:5;16668:7;16696:6;16677:16;:25;16652:8;:51::i;:::-;16486:242;16414:320;16294:440;;;:::o;10617:648::-;10759:1;10743:18;;:4;:18;;;10735:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;10834:1;10820:16;;:2;:16;;;10812:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;10886:38;10907:4;10913:2;10917:6;10886:20;:38::i;:::-;10935:19;10957:9;:15;10967:4;10957:15;;;;;;;;;;;;;;;;10935:37;;11005:6;10990:11;:21;;10982:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;11119:6;11105:11;:20;11087:9;:15;11097:4;11087:15;;;;;;;;;;;;;;;:38;;;;11162:6;11145:9;:13;11155:2;11145:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;11199:2;11184:26;;11193:4;11184:26;;;11203:6;11184:26;;;;;;:::i;:::-;;;;;;;;11221:37;11241:4;11247:2;11251:6;11221:19;:37::i;:::-;10725:540;10617:648;;;:::o;9855:299::-;10005:27;10015:4;10021:2;10025:6;10005:9;:27::i;:::-;10050:45;10071:4;10077:2;10081:6;10089:5;10050:20;:45::i;:::-;10042:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;9855:299;;;;:::o;17318:121::-;;;;:::o;18027:120::-;;;;:::o;13566:762::-;13713:4;13733:15;:2;:13;;;:15::i;:::-;13729:593;;;13782:2;13768:32;;;13801:12;:10;:12::i;:::-;13815:4;13821:6;13829:5;13768:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;13764:506;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14015:1;13998:6;:13;:18;13994:262;;14040:56;;;;;;;;;;:::i;:::-;;;;;;;;13994:262;14208:6;14202:13;14193:6;14189:2;14185:15;14178:38;13764:506;13895:37;;;13885:47;;;:6;:47;;;;13878:54;;;;;13729:593;14307:4;14300:11;;13566:762;;;;;;;:::o;1175:320:6:-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;7:75:9:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:126::-;2897:7;2937:42;2930:5;2926:54;2915:65;;2860:126;;;:::o;2992:96::-;3029:7;3058:24;3076:5;3058:24;:::i;:::-;3047:35;;2992:96;;;:::o;3094:122::-;3167:24;3185:5;3167:24;:::i;:::-;3160:5;3157:35;3147:63;;3206:1;3203;3196:12;3147:63;3094:122;:::o;3222:139::-;3268:5;3306:6;3293:20;3284:29;;3322:33;3349:5;3322:33;:::i;:::-;3222:139;;;;:::o;3367:77::-;3404:7;3433:5;3422:16;;3367:77;;;:::o;3450:122::-;3523:24;3541:5;3523:24;:::i;:::-;3516:5;3513:35;3503:63;;3562:1;3559;3552:12;3503:63;3450:122;:::o;3578:139::-;3624:5;3662:6;3649:20;3640:29;;3678:33;3705:5;3678:33;:::i;:::-;3578:139;;;;:::o;3723:474::-;3791:6;3799;3848:2;3836:9;3827:7;3823:23;3819:32;3816:119;;;3854:79;;:::i;:::-;3816:119;3974:1;3999:53;4044:7;4035:6;4024:9;4020:22;3999:53;:::i;:::-;3989:63;;3945:117;4101:2;4127:53;4172:7;4163:6;4152:9;4148:22;4127:53;:::i;:::-;4117:63;;4072:118;3723:474;;;;;:::o;4203:118::-;4290:24;4308:5;4290:24;:::i;:::-;4285:3;4278:37;4203:118;;:::o;4327:222::-;4420:4;4458:2;4447:9;4443:18;4435:26;;4471:71;4539:1;4528:9;4524:17;4515:6;4471:71;:::i;:::-;4327:222;;;;:::o;4555:619::-;4632:6;4640;4648;4697:2;4685:9;4676:7;4672:23;4668:32;4665:119;;;4703:79;;:::i;:::-;4665:119;4823:1;4848:53;4893:7;4884:6;4873:9;4869:22;4848:53;:::i;:::-;4838:63;;4794:117;4950:2;4976:53;5021:7;5012:6;5001:9;4997:22;4976:53;:::i;:::-;4966:63;;4921:118;5078:2;5104:53;5149:7;5140:6;5129:9;5125:22;5104:53;:::i;:::-;5094:63;;5049:118;4555:619;;;;;:::o;5180:86::-;5215:7;5255:4;5248:5;5244:16;5233:27;;5180:86;;;:::o;5272:112::-;5355:22;5371:5;5355:22;:::i;:::-;5350:3;5343:35;5272:112;;:::o;5390:214::-;5479:4;5517:2;5506:9;5502:18;5494:26;;5530:67;5594:1;5583:9;5579:17;5570:6;5530:67;:::i;:::-;5390:214;;;;:::o;5610:329::-;5669:6;5718:2;5706:9;5697:7;5693:23;5689:32;5686:119;;;5724:79;;:::i;:::-;5686:119;5844:1;5869:53;5914:7;5905:6;5894:9;5890:22;5869:53;:::i;:::-;5859:63;;5815:117;5610:329;;;;:::o;5945:117::-;6054:1;6051;6044:12;6068:117;6177:1;6174;6167:12;6191:180;6239:77;6236:1;6229:88;6336:4;6333:1;6326:15;6360:4;6357:1;6350:15;6377:281;6460:27;6482:4;6460:27;:::i;:::-;6452:6;6448:40;6590:6;6578:10;6575:22;6554:18;6542:10;6539:34;6536:62;6533:88;;;6601:18;;:::i;:::-;6533:88;6641:10;6637:2;6630:22;6420:238;6377:281;;:::o;6664:129::-;6698:6;6725:20;;:::i;:::-;6715:30;;6754:33;6782:4;6774:6;6754:33;:::i;:::-;6664:129;;;:::o;6799:307::-;6860:4;6950:18;6942:6;6939:30;6936:56;;;6972:18;;:::i;:::-;6936:56;7010:29;7032:6;7010:29;:::i;:::-;7002:37;;7094:4;7088;7084:15;7076:23;;6799:307;;;:::o;7112:146::-;7209:6;7204:3;7199;7186:30;7250:1;7241:6;7236:3;7232:16;7225:27;7112:146;;;:::o;7264:423::-;7341:5;7366:65;7382:48;7423:6;7382:48;:::i;:::-;7366:65;:::i;:::-;7357:74;;7454:6;7447:5;7440:21;7492:4;7485:5;7481:16;7530:3;7521:6;7516:3;7512:16;7509:25;7506:112;;;7537:79;;:::i;:::-;7506:112;7627:54;7674:6;7669:3;7664;7627:54;:::i;:::-;7347:340;7264:423;;;;;:::o;7706:338::-;7761:5;7810:3;7803:4;7795:6;7791:17;7787:27;7777:122;;7818:79;;:::i;:::-;7777:122;7935:6;7922:20;7960:78;8034:3;8026:6;8019:4;8011:6;8007:17;7960:78;:::i;:::-;7951:87;;7767:277;7706:338;;;;:::o;8050:943::-;8145:6;8153;8161;8169;8218:3;8206:9;8197:7;8193:23;8189:33;8186:120;;;8225:79;;:::i;:::-;8186:120;8345:1;8370:53;8415:7;8406:6;8395:9;8391:22;8370:53;:::i;:::-;8360:63;;8316:117;8472:2;8498:53;8543:7;8534:6;8523:9;8519:22;8498:53;:::i;:::-;8488:63;;8443:118;8600:2;8626:53;8671:7;8662:6;8651:9;8647:22;8626:53;:::i;:::-;8616:63;;8571:118;8756:2;8745:9;8741:18;8728:32;8787:18;8779:6;8776:30;8773:117;;;8809:79;;:::i;:::-;8773:117;8914:62;8968:7;8959:6;8948:9;8944:22;8914:62;:::i;:::-;8904:72;;8699:287;8050:943;;;;;;;:::o;8999:474::-;9067:6;9075;9124:2;9112:9;9103:7;9099:23;9095:32;9092:119;;;9130:79;;:::i;:::-;9092:119;9250:1;9275:53;9320:7;9311:6;9300:9;9296:22;9275:53;:::i;:::-;9265:63;;9221:117;9377:2;9403:53;9448:7;9439:6;9428:9;9424:22;9403:53;:::i;:::-;9393:63;;9348:118;8999:474;;;;;:::o;9479:797::-;9565:6;9573;9581;9630:2;9618:9;9609:7;9605:23;9601:32;9598:119;;;9636:79;;:::i;:::-;9598:119;9756:1;9781:53;9826:7;9817:6;9806:9;9802:22;9781:53;:::i;:::-;9771:63;;9727:117;9883:2;9909:53;9954:7;9945:6;9934:9;9930:22;9909:53;:::i;:::-;9899:63;;9854:118;10039:2;10028:9;10024:18;10011:32;10070:18;10062:6;10059:30;10056:117;;;10092:79;;:::i;:::-;10056:117;10197:62;10251:7;10242:6;10231:9;10227:22;10197:62;:::i;:::-;10187:72;;9982:287;9479:797;;;;;:::o;10282:180::-;10330:77;10327:1;10320:88;10427:4;10424:1;10417:15;10451:4;10448:1;10441:15;10468:320;10512:6;10549:1;10543:4;10539:12;10529:22;;10596:1;10590:4;10586:12;10617:18;10607:81;;10673:4;10665:6;10661:17;10651:27;;10607:81;10735:2;10727:6;10724:14;10704:18;10701:38;10698:84;;10754:18;;:::i;:::-;10698:84;10519:269;10468:320;;;:::o;10794:180::-;10842:77;10839:1;10832:88;10939:4;10936:1;10929:15;10963:4;10960:1;10953:15;10980:191;11020:3;11039:20;11057:1;11039:20;:::i;:::-;11034:25;;11073:20;11091:1;11073:20;:::i;:::-;11068:25;;11116:1;11113;11109:9;11102:16;;11137:3;11134:1;11131:10;11128:36;;;11144:18;;:::i;:::-;11128:36;10980:191;;;;:::o;11177:223::-;11317:34;11313:1;11305:6;11301:14;11294:58;11386:6;11381:2;11373:6;11369:15;11362:31;11177:223;:::o;11406:366::-;11548:3;11569:67;11633:2;11628:3;11569:67;:::i;:::-;11562:74;;11645:93;11734:3;11645:93;:::i;:::-;11763:2;11758:3;11754:12;11747:19;;11406:366;;;:::o;11778:419::-;11944:4;11982:2;11971:9;11967:18;11959:26;;12031:9;12025:4;12021:20;12017:1;12006:9;12002:17;11995:47;12059:131;12185:4;12059:131;:::i;:::-;12051:139;;11778:419;;;:::o;12203:222::-;12343:34;12339:1;12331:6;12327:14;12320:58;12412:5;12407:2;12399:6;12395:15;12388:30;12203:222;:::o;12431:366::-;12573:3;12594:67;12658:2;12653:3;12594:67;:::i;:::-;12587:74;;12670:93;12759:3;12670:93;:::i;:::-;12788:2;12783:3;12779:12;12772:19;;12431:366;;;:::o;12803:419::-;12969:4;13007:2;12996:9;12992:18;12984:26;;13056:9;13050:4;13046:20;13042:1;13031:9;13027:17;13020:47;13084:131;13210:4;13084:131;:::i;:::-;13076:139;;12803:419;;;:::o;13228:220::-;13368:34;13364:1;13356:6;13352:14;13345:58;13437:3;13432:2;13424:6;13420:15;13413:28;13228:220;:::o;13454:366::-;13596:3;13617:67;13681:2;13676:3;13617:67;:::i;:::-;13610:74;;13693:93;13782:3;13693:93;:::i;:::-;13811:2;13806:3;13802:12;13795:19;;13454:366;;;:::o;13826:419::-;13992:4;14030:2;14019:9;14015:18;14007:26;;14079:9;14073:4;14069:20;14065:1;14054:9;14050:17;14043:47;14107:131;14233:4;14107:131;:::i;:::-;14099:139;;13826:419;;;:::o;14251:178::-;14391:30;14387:1;14379:6;14375:14;14368:54;14251:178;:::o;14435:366::-;14577:3;14598:67;14662:2;14657:3;14598:67;:::i;:::-;14591:74;;14674:93;14763:3;14674:93;:::i;:::-;14792:2;14787:3;14783:12;14776:19;;14435:366;;;:::o;14807:419::-;14973:4;15011:2;15000:9;14996:18;14988:26;;15060:9;15054:4;15050:20;15046:1;15035:9;15031:17;15024:47;15088:131;15214:4;15088:131;:::i;:::-;15080:139;;14807:419;;;:::o;15232:223::-;15372:34;15368:1;15360:6;15356:14;15349:58;15441:6;15436:2;15428:6;15424:15;15417:31;15232:223;:::o;15461:366::-;15603:3;15624:67;15688:2;15683:3;15624:67;:::i;:::-;15617:74;;15700:93;15789:3;15700:93;:::i;:::-;15818:2;15813:3;15809:12;15802:19;;15461:366;;;:::o;15833:419::-;15999:4;16037:2;16026:9;16022:18;16014:26;;16086:9;16080:4;16076:20;16072:1;16061:9;16057:17;16050:47;16114:131;16240:4;16114:131;:::i;:::-;16106:139;;15833:419;;;:::o;16258:221::-;16398:34;16394:1;16386:6;16382:14;16375:58;16467:4;16462:2;16454:6;16450:15;16443:29;16258:221;:::o;16485:366::-;16627:3;16648:67;16712:2;16707:3;16648:67;:::i;:::-;16641:74;;16724:93;16813:3;16724:93;:::i;:::-;16842:2;16837:3;16833:12;16826:19;;16485:366;;;:::o;16857:419::-;17023:4;17061:2;17050:9;17046:18;17038:26;;17110:9;17104:4;17100:20;17096:1;17085:9;17081:17;17074:47;17138:131;17264:4;17138:131;:::i;:::-;17130:139;;16857:419;;;:::o;17282:224::-;17422:34;17418:1;17410:6;17406:14;17399:58;17491:7;17486:2;17478:6;17474:15;17467:32;17282:224;:::o;17512:366::-;17654:3;17675:67;17739:2;17734:3;17675:67;:::i;:::-;17668:74;;17751:93;17840:3;17751:93;:::i;:::-;17869:2;17864:3;17860:12;17853:19;;17512:366;;;:::o;17884:419::-;18050:4;18088:2;18077:9;18073:18;18065:26;;18137:9;18131:4;18127:20;18123:1;18112:9;18108:17;18101:47;18165:131;18291:4;18165:131;:::i;:::-;18157:139;;17884:419;;;:::o;18309:234::-;18449:34;18445:1;18437:6;18433:14;18426:58;18518:17;18513:2;18505:6;18501:15;18494:42;18309:234;:::o;18549:366::-;18691:3;18712:67;18776:2;18771:3;18712:67;:::i;:::-;18705:74;;18788:93;18877:3;18788:93;:::i;:::-;18906:2;18901:3;18897:12;18890:19;;18549:366;;;:::o;18921:419::-;19087:4;19125:2;19114:9;19110:18;19102:26;;19174:9;19168:4;19164:20;19160:1;19149:9;19145:17;19138:47;19202:131;19328:4;19202:131;:::i;:::-;19194:139;;18921:419;;;:::o;19346:118::-;19433:24;19451:5;19433:24;:::i;:::-;19428:3;19421:37;19346:118;;:::o;19470:98::-;19521:6;19555:5;19549:12;19539:22;;19470:98;;;:::o;19574:168::-;19657:11;19691:6;19686:3;19679:19;19731:4;19726:3;19722:14;19707:29;;19574:168;;;;:::o;19748:373::-;19834:3;19862:38;19894:5;19862:38;:::i;:::-;19916:70;19979:6;19974:3;19916:70;:::i;:::-;19909:77;;19995:65;20053:6;20048:3;20041:4;20034:5;20030:16;19995:65;:::i;:::-;20085:29;20107:6;20085:29;:::i;:::-;20080:3;20076:39;20069:46;;19838:283;19748:373;;;;:::o;20127:640::-;20322:4;20360:3;20349:9;20345:19;20337:27;;20374:71;20442:1;20431:9;20427:17;20418:6;20374:71;:::i;:::-;20455:72;20523:2;20512:9;20508:18;20499:6;20455:72;:::i;:::-;20537;20605:2;20594:9;20590:18;20581:6;20537:72;:::i;:::-;20656:9;20650:4;20646:20;20641:2;20630:9;20626:18;20619:48;20684:76;20755:4;20746:6;20684:76;:::i;:::-;20676:84;;20127:640;;;;;;;:::o;20773:141::-;20829:5;20860:6;20854:13;20845:22;;20876:32;20902:5;20876:32;:::i;:::-;20773:141;;;;:::o;20920:349::-;20989:6;21038:2;21026:9;21017:7;21013:23;21009:32;21006:119;;;21044:79;;:::i;:::-;21006:119;21164:1;21189:63;21244:7;21235:6;21224:9;21220:22;21189:63;:::i;:::-;21179:73;;21135:127;20920:349;;;;:::o;21275:233::-;21415:34;21411:1;21403:6;21399:14;21392:58;21484:16;21479:2;21471:6;21467:15;21460:41;21275:233;:::o;21514:366::-;21656:3;21677:67;21741:2;21736:3;21677:67;:::i;:::-;21670:74;;21753:93;21842:3;21753:93;:::i;:::-;21871:2;21866:3;21862:12;21855:19;;21514:366;;;:::o;21886:419::-;22052:4;22090:2;22079:9;22075:18;22067:26;;22139:9;22133:4;22129:20;22125:1;22114:9;22110:17;22103:47;22167:131;22293:4;22167:131;:::i;:::-;22159:139;;21886:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1433200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2886",
								"decimals()": "388",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"safeTransfer(address,uint256)": "infinite",
								"safeTransfer(address,uint256,bytes)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "797",
								"symbol()": "infinite",
								"totalSupply()": "2527",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "15",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_checkOnKIP7Received(address,address,uint256,bytes memory)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 446,
									"end": 18149,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1066,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1140,
									"end": 1145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1137,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1132,
									"end": 1145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "tag",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1132,
									"end": 1145,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1165,
									"end": 1172,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1162,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "7"
								},
								{
									"begin": 1155,
									"end": 1172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "tag",
									"source": 8,
									"value": "8"
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1155,
									"end": 1172,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1066,
									"end": 1179,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 9,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 9,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 9,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 9,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 9,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 9,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 9,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 9,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 9,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 9,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 9,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 9,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 9,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 9,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 9,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 9,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 9,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 9,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 9,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 9,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 9,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "tag",
									"source": 8,
									"value": "9"
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 446,
									"end": 18149,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b939a51e6152cc55493dad7cafd2127846d766274e3f83ac131023dff292d24764736f6c63430008120033",
									".code": [
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "B88D4FDE"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "EB795549"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "42842E0E"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "A457C2D7"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "39509351"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "423F6CEF"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "tag",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A7"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 446,
											"end": 18149,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "tag",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1245,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "tag",
											"source": 8,
											"value": "23"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1245,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "tag",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 1245,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "tag",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "tag",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1596,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1596,
											"end": 1694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3865,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3865,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "32"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3865,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "36"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2680,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "39"
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "tag",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 4622,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "tag",
											"source": 8,
											"value": "42"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4622,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "tag",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 4622,
											"end": 4908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2530,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "tag",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 2530,
											"end": 2621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "tag",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "tag",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 5302,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 5302,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "tag",
											"source": 8,
											"value": "50"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 5302,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6772,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "tag",
											"source": 8,
											"value": "55"
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 6772,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "tag",
											"source": 8,
											"value": "54"
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "tag",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 8132,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "tag",
											"source": 8,
											"value": "58"
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 8132,
											"end": 8414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "tag",
											"source": 8,
											"value": "57"
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 2843,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2843,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1807,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "tag",
											"source": 8,
											"value": "65"
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "31"
										},
										{
											"begin": 1807,
											"end": 1909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "tag",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "tag",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 6022,
											"end": 6448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6022,
											"end": 6448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 6022,
											"end": 6448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "tag",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3163,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3163,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "72"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 3163,
											"end": 3352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "78"
										},
										{
											"begin": 8757,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "tag",
											"source": 8,
											"value": "77"
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 8757,
											"end": 9070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "tag",
											"source": 8,
											"value": "76"
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "tag",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "82"
										},
										{
											"begin": 3409,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "tag",
											"source": 8,
											"value": "81"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3409,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "tag",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3409,
											"end": 3558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "87"
										},
										{
											"begin": 7212,
											"end": 7444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "tag",
											"source": 8,
											"value": "86"
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 7212,
											"end": 7444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "tag",
											"source": 8,
											"value": "85"
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1337,
											"end": 1341,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1410,
											"name": "PUSH",
											"source": 8,
											"value": "6578737100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1372,
											"end": 1410,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1410,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1410,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1383,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1410,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1372,
											"end": 1410,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1410,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1410,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1472,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1372,
											"end": 1472,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1472,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1441,
											"end": 1472,
											"name": "PUSH",
											"source": 8,
											"value": "A219A02500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1426,
											"end": 1472,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1472,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1472,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1472,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1472,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1426,
											"end": 1472,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1472,
											"name": "tag",
											"source": 8,
											"value": "90"
										},
										{
											"begin": 1372,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1524,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1372,
											"end": 1524,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1512,
											"end": 1523,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "93"
										},
										{
											"begin": 1488,
											"end": 1524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 1488,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1372,
											"end": 1524,
											"name": "tag",
											"source": 8,
											"value": "91"
										},
										{
											"begin": 1372,
											"end": 1524,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1353,
											"end": 1524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1245,
											"end": 1531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "tag",
											"source": 8,
											"value": "29"
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1650,
											"end": 1663,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1682,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1675,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "tag",
											"source": 8,
											"value": "95"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1675,
											"end": 1687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "tag",
											"source": 8,
											"value": "97"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "tag",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "tag",
											"source": 8,
											"value": "98"
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1675,
											"end": 1687,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1596,
											"end": 1694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "tag",
											"source": 8,
											"value": "35"
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3948,
											"end": 3952,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3977,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3980,
											"end": 3992,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3980,
											"end": 3990,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3980,
											"end": 3992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3980,
											"end": 3992,
											"name": "tag",
											"source": 8,
											"value": "102"
										},
										{
											"begin": 3980,
											"end": 3992,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 3992,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3964,
											"end": 3992,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4011,
											"end": 4016,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4027,
											"end": 4033,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 4002,
											"end": 4034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4002,
											"end": 4034,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 4002,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4051,
											"end": 4055,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4044,
											"end": 4055,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4044,
											"end": 4055,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3865,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "tag",
											"source": 8,
											"value": "38"
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2741,
											"end": 2748,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2779,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2767,
											"end": 2779,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2760,
											"end": 2779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2680,
											"end": 2786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4753,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4765,
											"end": 4780,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4783,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4783,
											"end": 4793,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 4783,
											"end": 4795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4783,
											"end": 4795,
											"name": "tag",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 4783,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4765,
											"end": 4795,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4765,
											"end": 4795,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 4821,
											"end": 4825,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4827,
											"end": 4834,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4836,
											"end": 4842,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4820,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 4805,
											"end": 4843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4805,
											"end": 4843,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 4805,
											"end": 4843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4880,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4871,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4873,
											"end": 4879,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4862,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 4853,
											"end": 4880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4853,
											"end": 4880,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 4853,
											"end": 4880,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4897,
											"end": 4901,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 4890,
											"end": 4901,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4890,
											"end": 4901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4890,
											"end": 4901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4622,
											"end": 4908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "tag",
											"source": 8,
											"value": "47"
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2588,
											"end": 2593,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 2614,
											"name": "PUSH",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2530,
											"end": 2621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5406,
											"end": 5419,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5434,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 5422,
											"end": 5432,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 5422,
											"end": 5434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5422,
											"end": 5434,
											"name": "tag",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 5422,
											"end": 5434,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5406,
											"end": 5434,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5406,
											"end": 5434,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5444,
											"end": 5508,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 5453,
											"end": 5458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5460,
											"end": 5467,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5507,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5494,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5479,
											"end": 5484,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 5486,
											"end": 5493,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 5469,
											"end": 5494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5494,
											"name": "tag",
											"source": 8,
											"value": "117"
										},
										{
											"begin": 5469,
											"end": 5494,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5469,
											"end": 5507,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5507,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5507,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 5469,
											"end": 5507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5469,
											"end": 5507,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 5469,
											"end": 5507,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5444,
											"end": 5452,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 5444,
											"end": 5508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5444,
											"end": 5508,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 5444,
											"end": 5508,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5525,
											"end": 5529,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 5518,
											"end": 5529,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5518,
											"end": 5529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5518,
											"end": 5529,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5302,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "tag",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6876,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 6879,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 6879,
											"end": 6891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 6879,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6863,
											"end": 6891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6915,
											"end": 6920,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6933,
											"end": 6939,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 6901,
											"end": 6944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "tag",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 6901,
											"end": 6944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6853,
											"end": 6951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6772,
											"end": 6951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "tag",
											"source": 8,
											"value": "59"
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8288,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8291,
											"end": 8303,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 8291,
											"end": 8301,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 8291,
											"end": 8303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8291,
											"end": 8303,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 8291,
											"end": 8303,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8303,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8273,
											"end": 8303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 8329,
											"end": 8335,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8337,
											"end": 8344,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8352,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8328,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 8313,
											"end": 8353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 8313,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 8377,
											"end": 8383,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8385,
											"end": 8394,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8396,
											"end": 8402,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 8363,
											"end": 8407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "tag",
											"source": 8,
											"value": "127"
										},
										{
											"begin": 8363,
											"end": 8407,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8263,
											"end": 8414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8132,
											"end": 8414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2917,
											"end": 2924,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2952,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2953,
											"end": 2960,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 2943,
											"end": 2961,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2936,
											"end": 2961,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2843,
											"end": 2968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1863,
											"end": 1876,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 1895,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1888,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "96"
										},
										{
											"begin": 1888,
											"end": 1902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "tag",
											"source": 8,
											"value": "133"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "tag",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "134"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "tag",
											"source": 8,
											"value": "132"
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1807,
											"end": 1909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6115,
											"end": 6119,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6144,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 6147,
											"end": 6157,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 6147,
											"end": 6159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6147,
											"end": 6159,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 6147,
											"end": 6159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6159,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6131,
											"end": 6159,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6169,
											"end": 6193,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6206,
											"end": 6211,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 6196,
											"end": 6221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6196,
											"end": 6221,
											"name": "tag",
											"source": 8,
											"value": "137"
										},
										{
											"begin": 6196,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6169,
											"end": 6221,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6259,
											"end": 6274,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6274,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6239,
											"end": 6274,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 6231,
											"end": 6315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "tag",
											"source": 8,
											"value": "138"
										},
										{
											"begin": 6231,
											"end": 6315,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6349,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6358,
											"end": 6363,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6365,
											"end": 6372,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6393,
											"end": 6408,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6390,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6374,
											"end": 6408,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6349,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 6349,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6349,
											"end": 6409,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6349,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6437,
											"end": 6441,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 6430,
											"end": 6441,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6430,
											"end": 6441,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6022,
											"end": 6448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3242,
											"end": 3246,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3258,
											"end": 3271,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3274,
											"end": 3284,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 3274,
											"end": 3286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 3274,
											"end": 3286,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3324,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3306,
											"end": 3311,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3313,
											"end": 3315,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3317,
											"end": 3323,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3305,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 3296,
											"end": 3324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3296,
											"end": 3324,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 3296,
											"end": 3324,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3341,
											"end": 3345,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3334,
											"end": 3345,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3334,
											"end": 3345,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8926,
											"end": 8941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8944,
											"end": 8956,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8944,
											"end": 8954,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 8944,
											"end": 8956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8944,
											"end": 8956,
											"name": "tag",
											"source": 8,
											"value": "146"
										},
										{
											"begin": 8944,
											"end": 8956,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8926,
											"end": 8956,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8926,
											"end": 8956,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8966,
											"end": 9006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8982,
											"end": 8988,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8990,
											"end": 8997,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8999,
											"end": 9005,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8966,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 8966,
											"end": 9006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8966,
											"end": 9006,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8966,
											"end": 9006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9016,
											"end": 9063,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 9030,
											"end": 9036,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9038,
											"end": 9047,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9049,
											"end": 9055,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9057,
											"end": 9062,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 9016,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 9016,
											"end": 9063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9016,
											"end": 9063,
											"name": "tag",
											"source": 8,
											"value": "148"
										},
										{
											"begin": 9016,
											"end": 9063,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "tag",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3498,
											"end": 3505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3535,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3536,
											"end": 3541,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3542,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3543,
											"end": 3550,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 3524,
											"end": 3551,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 3517,
											"end": 3551,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3517,
											"end": 3551,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3409,
											"end": 3558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "tag",
											"source": 8,
											"value": "88"
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7353,
											"end": 7366,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7369,
											"end": 7381,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7369,
											"end": 7379,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 7369,
											"end": 7381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7369,
											"end": 7381,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 7369,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7353,
											"end": 7381,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7353,
											"end": 7381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7437,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 7405,
											"end": 7410,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7412,
											"end": 7421,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7423,
											"end": 7429,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7431,
											"end": 7436,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 7391,
											"end": 7437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7391,
											"end": 7437,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 7391,
											"end": 7437,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7343,
											"end": 7444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7212,
											"end": 7444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 994,
											"end": 1148,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 994,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1079,
											"end": 1083,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1117,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1102,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1102,
											"end": 1141,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1141,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1141,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1102,
											"end": 1141,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1141,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1102,
											"end": 1141,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1141,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1095,
											"end": 1141,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1148,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 994,
											"end": 1148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 7,
											"value": "103"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15645,
											"end": 16013,
											"name": "tag",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 15645,
											"end": 16013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15793,
											"end": 15794,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15776,
											"end": 15795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15776,
											"end": 15795,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15776,
											"end": 15781,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15776,
											"end": 15795,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15776,
											"end": 15795,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15776,
											"end": 15795,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 15768,
											"end": 15835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 15768,
											"end": 15835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15872,
											"end": 15873,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15853,
											"end": 15874,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15853,
											"end": 15874,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15860,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15874,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15853,
											"end": 15874,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15853,
											"end": 15874,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 15845,
											"end": 15912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 15845,
											"end": 15912,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15953,
											"end": 15959,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15934,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15935,
											"end": 15940,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15923,
											"end": 15941,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15942,
											"end": 15949,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15923,
											"end": 15950,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15959,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15959,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15959,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 15923,
											"end": 15959,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15990,
											"end": 15997,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15983,
											"end": 15988,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "PUSH",
											"source": 8,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15999,
											"end": 16005,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15974,
											"end": 16006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15974,
											"end": 16006,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 15645,
											"end": 16013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15645,
											"end": 16013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15645,
											"end": 16013,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15645,
											"end": 16013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16294,
											"end": 16734,
											"name": "tag",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 16294,
											"end": 16734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16424,
											"end": 16448,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 16451,
											"end": 16476,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 16461,
											"end": 16466,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16468,
											"end": 16475,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16451,
											"end": 16460,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "83"
										},
										{
											"begin": 16451,
											"end": 16476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16451,
											"end": 16476,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 16451,
											"end": 16476,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16424,
											"end": 16476,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16424,
											"end": 16476,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16510,
											"end": 16527,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16490,
											"end": 16506,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16490,
											"end": 16527,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 16486,
											"end": 16728,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16571,
											"end": 16577,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16551,
											"end": 16567,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16551,
											"end": 16577,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 16551,
											"end": 16577,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 16543,
											"end": 16610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 16543,
											"end": 16610,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16652,
											"end": 16703,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 16661,
											"end": 16666,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16668,
											"end": 16675,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16696,
											"end": 16702,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16677,
											"end": 16693,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 16677,
											"end": 16702,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 16652,
											"end": 16660,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 16652,
											"end": 16703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 16652,
											"end": 16703,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 16652,
											"end": 16703,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16486,
											"end": 16728,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 16486,
											"end": 16728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 16414,
											"end": 16734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16294,
											"end": 16734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16294,
											"end": 16734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16294,
											"end": 16734,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 16294,
											"end": 16734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 11265,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 10617,
											"end": 11265,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10759,
											"end": 10760,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10747,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 10735,
											"end": 10802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 10735,
											"end": 10802,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10834,
											"end": 10835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10820,
											"end": 10836,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10820,
											"end": 10836,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10822,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10836,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10820,
											"end": 10836,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10820,
											"end": 10836,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 10812,
											"end": 10875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 10812,
											"end": 10875,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 10924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 10907,
											"end": 10911,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10913,
											"end": 10915,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10917,
											"end": 10923,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 10906,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 10886,
											"end": 10924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10886,
											"end": 10924,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 10886,
											"end": 10924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10954,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 10966,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10967,
											"end": 10971,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 10957,
											"end": 10972,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10972,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10935,
											"end": 10972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11005,
											"end": 11011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10990,
											"end": 11011,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10990,
											"end": 11011,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 10982,
											"end": 11053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 10982,
											"end": 11053,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11119,
											"end": 11125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11105,
											"end": 11116,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11105,
											"end": 11125,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11096,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11097,
											"end": 11101,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11102,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11125,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11125,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11125,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11087,
											"end": 11125,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11162,
											"end": 11168,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11154,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11155,
											"end": 11157,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11158,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "119"
										},
										{
											"begin": 11145,
											"end": 11168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "tag",
											"source": 8,
											"value": "182"
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 11145,
											"end": 11168,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11199,
											"end": 11201,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11193,
											"end": 11197,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "PUSH",
											"source": 8,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 11203,
											"end": 11209,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11184,
											"end": 11210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "tag",
											"source": 8,
											"value": "183"
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11184,
											"end": 11210,
											"name": "LOG3",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11258,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 11241,
											"end": 11245,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11247,
											"end": 11249,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11251,
											"end": 11257,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11240,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 11221,
											"end": 11258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11221,
											"end": 11258,
											"name": "tag",
											"source": 8,
											"value": "184"
										},
										{
											"begin": 11221,
											"end": 11258,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10725,
											"end": 11265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 11265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 11265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 11265,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10617,
											"end": 11265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 10154,
											"name": "tag",
											"source": 8,
											"value": "123"
										},
										{
											"begin": 9855,
											"end": 10154,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10005,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 10015,
											"end": 10019,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10021,
											"end": 10023,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10025,
											"end": 10031,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10005,
											"end": 10014,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 10005,
											"end": 10032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10005,
											"end": 10032,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 10005,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10050,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 10071,
											"end": 10075,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10077,
											"end": 10079,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10081,
											"end": 10087,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10089,
											"end": 10094,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10050,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 10050,
											"end": 10095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10050,
											"end": 10095,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 10050,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 10042,
											"end": 10147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "tag",
											"source": 8,
											"value": "191"
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 10042,
											"end": 10147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 10154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 10154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 10154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 10154,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9855,
											"end": 10154,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 17318,
											"end": 17439,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 17318,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 17318,
											"end": 17439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17318,
											"end": 17439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17318,
											"end": 17439,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 17318,
											"end": 17439,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 18027,
											"end": 18147,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 18027,
											"end": 18147,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 18027,
											"end": 18147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18027,
											"end": 18147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18027,
											"end": 18147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 18027,
											"end": 18147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "tag",
											"source": 8,
											"value": "189"
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13713,
											"end": 13717,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13733,
											"end": 13748,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 13733,
											"end": 13735,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 13746,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13733,
											"end": 13746,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 13746,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "197"
										},
										{
											"begin": 13733,
											"end": 13748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13733,
											"end": 13748,
											"name": "tag",
											"source": 8,
											"value": "196"
										},
										{
											"begin": 13733,
											"end": 13748,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13729,
											"end": 14322,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13729,
											"end": 14322,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 13729,
											"end": 14322,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13782,
											"end": 13784,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13800,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13768,
											"end": 13800,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13800,
											"name": "PUSH",
											"source": 8,
											"value": "9D188C22"
										},
										{
											"begin": 13801,
											"end": 13813,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 13801,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 13801,
											"end": 13813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13801,
											"end": 13813,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 13801,
											"end": 13813,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13815,
											"end": 13819,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 13821,
											"end": 13827,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13829,
											"end": 13834,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 13768,
											"end": 13835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "tag",
											"source": 8,
											"value": "200"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 13768,
											"end": 13835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "tag",
											"source": 8,
											"value": "203"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 13768,
											"end": 13835,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "3F"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "tag",
											"source": 8,
											"value": "210"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "tag",
											"source": 8,
											"value": "209"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14015,
											"end": 14016,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13998,
											"end": 14004,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13998,
											"end": 14011,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 13998,
											"end": 14016,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13994,
											"end": 14256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 13994,
											"end": 14256,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 14040,
											"end": 14096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14040,
											"end": 14096,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13994,
											"end": 14256,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 13994,
											"end": 14256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14208,
											"end": 14214,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 14202,
											"end": 14215,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14193,
											"end": 14199,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14189,
											"end": 14191,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14185,
											"end": 14200,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14178,
											"end": 14216,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "tag",
											"source": 8,
											"value": "205"
										},
										{
											"begin": 13764,
											"end": 14270,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13895,
											"end": 13932,
											"name": "PUSH",
											"source": 8,
											"value": "9D188C22"
										},
										{
											"begin": 13895,
											"end": 13932,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 13895,
											"end": 13932,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13932,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13885,
											"end": 13932,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13891,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13932,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13885,
											"end": 13932,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13932,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13885,
											"end": 13932,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13932,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13932,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13878,
											"end": 13932,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 13878,
											"end": 13932,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13729,
											"end": 14322,
											"name": "tag",
											"source": 8,
											"value": "198"
										},
										{
											"begin": 13729,
											"end": 14322,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14307,
											"end": 14311,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 14300,
											"end": 14311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14300,
											"end": 14311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 14328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2979,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2935,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2926,
											"end": 2980,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2915,
											"end": 2980,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2860,
											"end": 2986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3029,
											"end": 3036,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3076,
											"end": 3081,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 3058,
											"end": 3082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 3058,
											"end": 3082,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3047,
											"end": 3082,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3088,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2992,
											"end": 3088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 3185,
											"end": 3190,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 3167,
											"end": 3191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 3167,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3160,
											"end": 3165,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3157,
											"end": 3192,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3203,
											"end": 3204,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3196,
											"end": 3208,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 3147,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3216,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3094,
											"end": 3216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3268,
											"end": 3273,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3293,
											"end": 3313,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3313,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 3349,
											"end": 3354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 3322,
											"end": 3355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 3322,
											"end": 3355,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3361,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3222,
											"end": 3361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3404,
											"end": 3411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3422,
											"end": 3438,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3444,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3367,
											"end": 3444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 3541,
											"end": 3546,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 3523,
											"end": 3547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 3523,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3513,
											"end": 3548,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3559,
											"end": 3560,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3552,
											"end": 3564,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 3503,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3572,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3624,
											"end": 3629,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3662,
											"end": 3668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3649,
											"end": 3669,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3640,
											"end": 3669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 3705,
											"end": 3710,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 3678,
											"end": 3711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 3678,
											"end": 3711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3578,
											"end": 3717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3805,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3848,
											"end": 3850,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3836,
											"end": 3845,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3827,
											"end": 3834,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3823,
											"end": 3846,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3819,
											"end": 3851,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 3854,
											"end": 3933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 3854,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 3816,
											"end": 3935,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 4044,
											"end": 4051,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4024,
											"end": 4033,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 3999,
											"end": 4052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 3999,
											"end": 4052,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3989,
											"end": 4052,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3945,
											"end": 4062,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4101,
											"end": 4103,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4172,
											"end": 4179,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4152,
											"end": 4161,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4148,
											"end": 4170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4127,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 4127,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4117,
											"end": 4180,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4072,
											"end": 4190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 4197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3723,
											"end": 4197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4308,
											"end": 4313,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4290,
											"end": 4314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 4290,
											"end": 4314,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4288,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4278,
											"end": 4315,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4203,
											"end": 4321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4447,
											"end": 4456,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4435,
											"end": 4461,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 4539,
											"end": 4540,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4524,
											"end": 4541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4515,
											"end": 4521,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4471,
											"end": 4542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 4471,
											"end": 4542,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4549,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4327,
											"end": 4549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4640,
											"end": 4646,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4699,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4685,
											"end": 4694,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4676,
											"end": 4683,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4672,
											"end": 4695,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4668,
											"end": 4700,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 4703,
											"end": 4782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "tag",
											"source": 9,
											"value": "333"
										},
										{
											"begin": 4703,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 4665,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4823,
											"end": 4824,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4893,
											"end": 4900,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4869,
											"end": 4891,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4848,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "tag",
											"source": 9,
											"value": "334"
										},
										{
											"begin": 4848,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4838,
											"end": 4901,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4794,
											"end": 4911,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4950,
											"end": 4952,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 5021,
											"end": 5028,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5001,
											"end": 5010,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 4976,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 4976,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 5029,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4921,
											"end": 5039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5078,
											"end": 5080,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 5149,
											"end": 5156,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5140,
											"end": 5146,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 5125,
											"end": 5147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 5104,
											"end": 5157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 5104,
											"end": 5157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5094,
											"end": 5157,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5049,
											"end": 5167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 5174,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 5174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5215,
											"end": 5222,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5259,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5248,
											"end": 5253,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5244,
											"end": 5260,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5260,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5233,
											"end": 5260,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5266,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5180,
											"end": 5266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5384,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5272,
											"end": 5384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 5371,
											"end": 5376,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 5355,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 5355,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5350,
											"end": 5353,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5343,
											"end": 5378,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5384,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5479,
											"end": 5483,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5519,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5506,
											"end": 5515,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5502,
											"end": 5520,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5520,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5494,
											"end": 5520,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5594,
											"end": 5595,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5583,
											"end": 5592,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5579,
											"end": 5596,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5576,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 5530,
											"end": 5597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5530,
											"end": 5597,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 5530,
											"end": 5597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5604,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5390,
											"end": 5604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5669,
											"end": 5675,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5720,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5697,
											"end": 5704,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5693,
											"end": 5716,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5689,
											"end": 5721,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5724,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5724,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 5724,
											"end": 5803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5724,
											"end": 5803,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 5724,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "tag",
											"source": 9,
											"value": "343"
										},
										{
											"begin": 5686,
											"end": 5805,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5844,
											"end": 5845,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5869,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 5914,
											"end": 5921,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5905,
											"end": 5911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 5903,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5890,
											"end": 5912,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5869,
											"end": 5922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 5869,
											"end": 5922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5869,
											"end": 5922,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 5869,
											"end": 5922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5859,
											"end": 5922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5815,
											"end": 5932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5945,
											"end": 6062,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 5945,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6055,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6068,
											"end": 6185,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 6068,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6178,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6174,
											"end": 6175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6167,
											"end": 6179,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6191,
											"end": 6371,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 6191,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6239,
											"end": 6316,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6236,
											"end": 6237,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6229,
											"end": 6317,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6336,
											"end": 6340,
											"name": "PUSH",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 6333,
											"end": 6334,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6326,
											"end": 6341,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 6357,
											"end": 6358,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6350,
											"end": 6365,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6658,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6377,
											"end": 6658,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6482,
											"end": 6486,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 6460,
											"end": 6487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6460,
											"end": 6487,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6460,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6452,
											"end": 6458,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6448,
											"end": 6488,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6590,
											"end": 6596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6578,
											"end": 6588,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6575,
											"end": 6597,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6542,
											"end": 6552,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6539,
											"end": 6573,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6536,
											"end": 6598,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6533,
											"end": 6621,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6533,
											"end": 6621,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6533,
											"end": 6621,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 6601,
											"end": 6619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 6601,
											"end": 6619,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6533,
											"end": 6621,
											"name": "tag",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6533,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6641,
											"end": 6651,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6637,
											"end": 6639,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6652,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6420,
											"end": 6658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6658,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6377,
											"end": 6658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6793,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 6664,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6698,
											"end": 6704,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 6725,
											"end": 6745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "tag",
											"source": 9,
											"value": "354"
										},
										{
											"begin": 6725,
											"end": 6745,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6715,
											"end": 6745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 6782,
											"end": 6786,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6774,
											"end": 6780,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 6754,
											"end": 6787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6754,
											"end": 6787,
											"name": "tag",
											"source": 9,
											"value": "355"
										},
										{
											"begin": 6754,
											"end": 6787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6793,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6664,
											"end": 6793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 7106,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 6799,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6860,
											"end": 6864,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6950,
											"end": 6968,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6942,
											"end": 6948,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6969,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6992,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6992,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 6936,
											"end": 6992,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 6972,
											"end": 6990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "tag",
											"source": 9,
											"value": "358"
										},
										{
											"begin": 6972,
											"end": 6990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6936,
											"end": 6992,
											"name": "tag",
											"source": 9,
											"value": "357"
										},
										{
											"begin": 6936,
											"end": 6992,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7010,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7032,
											"end": 7038,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7010,
											"end": 7039,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 7010,
											"end": 7039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7010,
											"end": 7039,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 7010,
											"end": 7039,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7002,
											"end": 7039,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7002,
											"end": 7039,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7094,
											"end": 7098,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7088,
											"end": 7092,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7076,
											"end": 7099,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7076,
											"end": 7099,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 7106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 7106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 7106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 7106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7112,
											"end": 7258,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7112,
											"end": 7258,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7209,
											"end": 7215,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7204,
											"end": 7207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7199,
											"end": 7202,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7186,
											"end": 7216,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 7250,
											"end": 7251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7241,
											"end": 7247,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7236,
											"end": 7239,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7232,
											"end": 7248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7225,
											"end": 7252,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7112,
											"end": 7258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7112,
											"end": 7258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7112,
											"end": 7258,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7112,
											"end": 7258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7687,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7264,
											"end": 7687,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7341,
											"end": 7346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7366,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 7382,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7423,
											"end": 7429,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7430,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 7382,
											"end": 7430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7382,
											"end": 7430,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 7382,
											"end": 7430,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7431,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 7366,
											"end": 7431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7366,
											"end": 7431,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 7366,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7431,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7357,
											"end": 7431,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7454,
											"end": 7460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7447,
											"end": 7452,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7440,
											"end": 7461,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7492,
											"end": 7496,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7485,
											"end": 7490,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7481,
											"end": 7497,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7533,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7521,
											"end": 7527,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7516,
											"end": 7519,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7512,
											"end": 7528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7509,
											"end": 7534,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7618,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7618,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 7506,
											"end": 7618,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7537,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 7537,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 7537,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7537,
											"end": 7616,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 7537,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7506,
											"end": 7618,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 7506,
											"end": 7618,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 7674,
											"end": 7680,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7669,
											"end": 7672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7664,
											"end": 7667,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7681,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 7627,
											"end": 7681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7627,
											"end": 7681,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 7627,
											"end": 7681,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7347,
											"end": 7687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7687,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7687,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7687,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7264,
											"end": 7687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 8044,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 7706,
											"end": 8044,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7761,
											"end": 7766,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7810,
											"end": 7813,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7803,
											"end": 7807,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 7795,
											"end": 7801,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7791,
											"end": 7808,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7787,
											"end": 7814,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7777,
											"end": 7899,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7777,
											"end": 7899,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7818,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 7818,
											"end": 7897,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 7818,
											"end": 7897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7818,
											"end": 7897,
											"name": "tag",
											"source": 9,
											"value": "369"
										},
										{
											"begin": 7818,
											"end": 7897,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7777,
											"end": 7899,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7777,
											"end": 7899,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7935,
											"end": 7941,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7922,
											"end": 7942,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 8034,
											"end": 8037,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8026,
											"end": 8032,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8019,
											"end": 8023,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8011,
											"end": 8017,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 8007,
											"end": 8024,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8038,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 7960,
											"end": 8038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7960,
											"end": 8038,
											"name": "tag",
											"source": 9,
											"value": "370"
										},
										{
											"begin": 7960,
											"end": 8038,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7951,
											"end": 8038,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7951,
											"end": 8038,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 8044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 8044,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 8044,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 8044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 8044,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7706,
											"end": 8044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8145,
											"end": 8151,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8153,
											"end": 8159,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8161,
											"end": 8167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8169,
											"end": 8175,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 8206,
											"end": 8215,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8197,
											"end": 8204,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8193,
											"end": 8216,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8222,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 8186,
											"end": 8306,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8186,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8186,
											"end": 8306,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8225,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 8225,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 8225,
											"end": 8304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8225,
											"end": 8304,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 8225,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8186,
											"end": 8306,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8186,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8370,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 8415,
											"end": 8422,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8406,
											"end": 8412,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8395,
											"end": 8404,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8391,
											"end": 8413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 8370,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8370,
											"end": 8423,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 8370,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8360,
											"end": 8423,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8316,
											"end": 8433,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8472,
											"end": 8474,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8498,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 8543,
											"end": 8550,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8534,
											"end": 8540,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8523,
											"end": 8532,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8519,
											"end": 8541,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8551,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 8498,
											"end": 8551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8551,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 8498,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8488,
											"end": 8551,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8488,
											"end": 8551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8443,
											"end": 8561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8600,
											"end": 8602,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8626,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 8671,
											"end": 8678,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8662,
											"end": 8668,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8651,
											"end": 8660,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8647,
											"end": 8669,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8679,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 8626,
											"end": 8679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8679,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 8626,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8679,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8616,
											"end": 8679,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8571,
											"end": 8689,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8756,
											"end": 8758,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 8745,
											"end": 8754,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8741,
											"end": 8759,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8760,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 8787,
											"end": 8805,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8779,
											"end": 8785,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8776,
											"end": 8806,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8890,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8890,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8773,
											"end": 8890,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8809,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 8809,
											"end": 8888,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 8809,
											"end": 8888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8809,
											"end": 8888,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 8809,
											"end": 8888,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8890,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 8773,
											"end": 8890,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8914,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 8959,
											"end": 8965,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 8957,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 8944,
											"end": 8966,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8914,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 8914,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8914,
											"end": 8976,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 8914,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8976,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8904,
											"end": 8976,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8699,
											"end": 8986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8050,
											"end": 8993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9473,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 8999,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9067,
											"end": 9073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9075,
											"end": 9081,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9124,
											"end": 9126,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9112,
											"end": 9121,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9103,
											"end": 9110,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9099,
											"end": 9122,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9095,
											"end": 9127,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9092,
											"end": 9211,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9092,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 9092,
											"end": 9211,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 9130,
											"end": 9209,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9130,
											"end": 9209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9130,
											"end": 9209,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 9130,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9092,
											"end": 9211,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 9092,
											"end": 9211,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9250,
											"end": 9251,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 9320,
											"end": 9327,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9311,
											"end": 9317,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9300,
											"end": 9309,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9296,
											"end": 9318,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9275,
											"end": 9328,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9275,
											"end": 9328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9275,
											"end": 9328,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 9275,
											"end": 9328,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9265,
											"end": 9328,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9265,
											"end": 9328,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9221,
											"end": 9338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9377,
											"end": 9379,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9403,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 9448,
											"end": 9455,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9439,
											"end": 9445,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9428,
											"end": 9437,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9424,
											"end": 9446,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9403,
											"end": 9456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9403,
											"end": 9456,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 9403,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 9456,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9393,
											"end": 9456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9348,
											"end": 9466,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9473,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9473,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9473,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9473,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8999,
											"end": 9473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 10276,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 9479,
											"end": 10276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9565,
											"end": 9571,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9573,
											"end": 9579,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9581,
											"end": 9587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9630,
											"end": 9632,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9618,
											"end": 9627,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9609,
											"end": 9616,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9605,
											"end": 9628,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9601,
											"end": 9633,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 9598,
											"end": 9717,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9598,
											"end": 9717,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 9598,
											"end": 9717,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9636,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 9636,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 9636,
											"end": 9715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9636,
											"end": 9715,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 9636,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9598,
											"end": 9717,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 9598,
											"end": 9717,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9757,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9781,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 9826,
											"end": 9833,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9817,
											"end": 9823,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9806,
											"end": 9815,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9802,
											"end": 9824,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9834,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 9781,
											"end": 9834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9781,
											"end": 9834,
											"name": "tag",
											"source": 9,
											"value": "388"
										},
										{
											"begin": 9781,
											"end": 9834,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9771,
											"end": 9834,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 9771,
											"end": 9834,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9727,
											"end": 9844,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9883,
											"end": 9885,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9909,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 9954,
											"end": 9961,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 9945,
											"end": 9951,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9934,
											"end": 9943,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 9930,
											"end": 9952,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9909,
											"end": 9962,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 9909,
											"end": 9962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9909,
											"end": 9962,
											"name": "tag",
											"source": 9,
											"value": "389"
										},
										{
											"begin": 9909,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9899,
											"end": 9962,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9899,
											"end": 9962,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9854,
											"end": 9972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10039,
											"end": 10041,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10028,
											"end": 10037,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 10024,
											"end": 10042,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10011,
											"end": 10043,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 10070,
											"end": 10088,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10062,
											"end": 10068,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10059,
											"end": 10089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10092,
											"end": 10171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "tag",
											"source": 9,
											"value": "391"
										},
										{
											"begin": 10092,
											"end": 10171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "tag",
											"source": 9,
											"value": "390"
										},
										{
											"begin": 10056,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 10251,
											"end": 10258,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 10242,
											"end": 10248,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10231,
											"end": 10240,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 10227,
											"end": 10249,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10259,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 10197,
											"end": 10259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10197,
											"end": 10259,
											"name": "tag",
											"source": 9,
											"value": "392"
										},
										{
											"begin": 10197,
											"end": 10259,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10187,
											"end": 10259,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10187,
											"end": 10259,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9982,
											"end": 10269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 10276,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 10276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 10276,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 10276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 10276,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9479,
											"end": 10276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10282,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10282,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10330,
											"end": 10407,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10327,
											"end": 10328,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10320,
											"end": 10408,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10427,
											"end": 10431,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 10424,
											"end": 10425,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10417,
											"end": 10432,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10451,
											"end": 10455,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10448,
											"end": 10449,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10441,
											"end": 10456,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10468,
											"end": 10788,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 10468,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10512,
											"end": 10518,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10550,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10543,
											"end": 10547,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10539,
											"end": 10551,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10529,
											"end": 10551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10596,
											"end": 10597,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10586,
											"end": 10598,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10617,
											"end": 10635,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10607,
											"end": 10688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 10607,
											"end": 10688,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 10665,
											"end": 10671,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10661,
											"end": 10678,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10607,
											"end": 10688,
											"name": "tag",
											"source": 9,
											"value": "395"
										},
										{
											"begin": 10607,
											"end": 10688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10735,
											"end": 10737,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10727,
											"end": 10733,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10738,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10704,
											"end": 10722,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10701,
											"end": 10739,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10698,
											"end": 10782,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 10698,
											"end": 10782,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 10754,
											"end": 10772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "tag",
											"source": 9,
											"value": "397"
										},
										{
											"begin": 10754,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10698,
											"end": 10782,
											"name": "tag",
											"source": 9,
											"value": "396"
										},
										{
											"begin": 10698,
											"end": 10782,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10519,
											"end": 10788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10468,
											"end": 10788,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10468,
											"end": 10788,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10468,
											"end": 10788,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10468,
											"end": 10788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10794,
											"end": 10974,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 10794,
											"end": 10974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10842,
											"end": 10919,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10839,
											"end": 10840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10832,
											"end": 10920,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10939,
											"end": 10943,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 10936,
											"end": 10937,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10929,
											"end": 10944,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10967,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 10960,
											"end": 10961,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10953,
											"end": 10968,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10980,
											"end": 11171,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 10980,
											"end": 11171,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11020,
											"end": 11023,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11039,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11057,
											"end": 11058,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11039,
											"end": 11059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 11039,
											"end": 11059,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11039,
											"end": 11059,
											"name": "tag",
											"source": 9,
											"value": "400"
										},
										{
											"begin": 11039,
											"end": 11059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11034,
											"end": 11059,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11034,
											"end": 11059,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11073,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11091,
											"end": 11092,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11073,
											"end": 11093,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 11073,
											"end": 11093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11073,
											"end": 11093,
											"name": "tag",
											"source": 9,
											"value": "401"
										},
										{
											"begin": 11073,
											"end": 11093,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11068,
											"end": 11093,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 11068,
											"end": 11093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11116,
											"end": 11117,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11113,
											"end": 11114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11109,
											"end": 11118,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11118,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11102,
											"end": 11118,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11137,
											"end": 11140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11134,
											"end": 11135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11131,
											"end": 11141,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 11128,
											"end": 11164,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 11128,
											"end": 11164,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 11128,
											"end": 11164,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 11144,
											"end": 11162,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 11144,
											"end": 11162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11162,
											"name": "tag",
											"source": 9,
											"value": "403"
										},
										{
											"begin": 11144,
											"end": 11162,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11128,
											"end": 11164,
											"name": "tag",
											"source": 9,
											"value": "402"
										},
										{
											"begin": 11128,
											"end": 11164,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10980,
											"end": 11171,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10980,
											"end": 11171,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10980,
											"end": 11171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10980,
											"end": 11171,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10980,
											"end": 11171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11177,
											"end": 11400,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 11177,
											"end": 11400,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11317,
											"end": 11351,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A2064656372656173656420616C6C6F77616E63652062656C6F7720"
										},
										{
											"begin": 11313,
											"end": 11314,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11305,
											"end": 11311,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11301,
											"end": 11315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11294,
											"end": 11352,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11386,
											"end": 11392,
											"name": "PUSH",
											"source": 9,
											"value": "7A65726F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11381,
											"end": 11383,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11373,
											"end": 11379,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11369,
											"end": 11384,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11362,
											"end": 11393,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11177,
											"end": 11400,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11177,
											"end": 11400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "tag",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11548,
											"end": 11551,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11569,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 11633,
											"end": 11635,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 11628,
											"end": 11631,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11569,
											"end": 11636,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 11569,
											"end": 11636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11569,
											"end": 11636,
											"name": "tag",
											"source": 9,
											"value": "406"
										},
										{
											"begin": 11569,
											"end": 11636,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11636,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11562,
											"end": 11636,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 11734,
											"end": 11737,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11738,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 11645,
											"end": 11738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11645,
											"end": 11738,
											"name": "tag",
											"source": 9,
											"value": "407"
										},
										{
											"begin": 11645,
											"end": 11738,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11763,
											"end": 11765,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11758,
											"end": 11761,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11754,
											"end": 11766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11747,
											"end": 11766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11747,
											"end": 11766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11772,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11406,
											"end": 11772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11944,
											"end": 11948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11982,
											"end": 11984,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11971,
											"end": 11980,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11967,
											"end": 11985,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11959,
											"end": 11985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11959,
											"end": 11985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12031,
											"end": 12040,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12025,
											"end": 12029,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12021,
											"end": 12041,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 12017,
											"end": 12018,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12006,
											"end": 12015,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12002,
											"end": 12019,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11995,
											"end": 12042,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 12185,
											"end": 12189,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12190,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "253"
										},
										{
											"begin": 12059,
											"end": 12190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12059,
											"end": 12190,
											"name": "tag",
											"source": 9,
											"value": "409"
										},
										{
											"begin": 12059,
											"end": 12190,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12190,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12051,
											"end": 12190,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11778,
											"end": 12197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12425,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 12203,
											"end": 12425,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12343,
											"end": 12377,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A20617070726F76652066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 12339,
											"end": 12340,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12331,
											"end": 12337,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12327,
											"end": 12341,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12320,
											"end": 12378,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12412,
											"end": 12417,
											"name": "PUSH",
											"source": 9,
											"value": "6573730000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12407,
											"end": 12409,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12399,
											"end": 12405,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12395,
											"end": 12410,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12388,
											"end": 12418,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12425,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12203,
											"end": 12425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12573,
											"end": 12576,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12658,
											"end": 12660,
											"name": "PUSH",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 12653,
											"end": 12656,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 12594,
											"end": 12661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "tag",
											"source": 9,
											"value": "412"
										},
										{
											"begin": 12594,
											"end": 12661,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12661,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12587,
											"end": 12661,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 12759,
											"end": 12762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 12670,
											"end": 12763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "tag",
											"source": 9,
											"value": "413"
										},
										{
											"begin": 12670,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12788,
											"end": 12790,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 12783,
											"end": 12786,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12779,
											"end": 12791,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12791,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12772,
											"end": 12791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12431,
											"end": 12797,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12431,
											"end": 12797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 12969,
											"end": 12973,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13007,
											"end": 13009,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 12996,
											"end": 13005,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 12992,
											"end": 13010,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 12984,
											"end": 13010,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12984,
											"end": 13010,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13056,
											"end": 13065,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13050,
											"end": 13054,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13046,
											"end": 13066,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 13042,
											"end": 13043,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13031,
											"end": 13040,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13027,
											"end": 13044,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13020,
											"end": 13067,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13084,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 13210,
											"end": 13214,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 13084,
											"end": 13215,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 13084,
											"end": 13215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13084,
											"end": 13215,
											"name": "tag",
											"source": 9,
											"value": "415"
										},
										{
											"begin": 13084,
											"end": 13215,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13076,
											"end": 13215,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13076,
											"end": 13215,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 13222,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 12803,
											"end": 13222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13228,
											"end": 13448,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13228,
											"end": 13448,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13368,
											"end": 13402,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A20617070726F766520746F20746865207A65726F20616464726573"
										},
										{
											"begin": 13364,
											"end": 13365,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13362,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13352,
											"end": 13366,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13345,
											"end": 13403,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13437,
											"end": 13440,
											"name": "PUSH",
											"source": 9,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13432,
											"end": 13434,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 13424,
											"end": 13430,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13420,
											"end": 13435,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13413,
											"end": 13441,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 13228,
											"end": 13448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13228,
											"end": 13448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13454,
											"end": 13820,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 13454,
											"end": 13820,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13596,
											"end": 13599,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 13617,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13681,
											"end": 13683,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 13676,
											"end": 13679,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 13617,
											"end": 13684,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 13617,
											"end": 13684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13617,
											"end": 13684,
											"name": "tag",
											"source": 9,
											"value": "418"
										},
										{
											"begin": 13617,
											"end": 13684,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13610,
											"end": 13684,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13610,
											"end": 13684,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 13782,
											"end": 13785,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13786,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 13693,
											"end": 13786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13693,
											"end": 13786,
											"name": "tag",
											"source": 9,
											"value": "419"
										},
										{
											"begin": 13693,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13811,
											"end": 13813,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 13806,
											"end": 13809,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 13802,
											"end": 13814,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 13795,
											"end": 13814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13795,
											"end": 13814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13454,
											"end": 13820,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13454,
											"end": 13820,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13454,
											"end": 13820,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13454,
											"end": 13820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 13826,
											"end": 14245,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 13826,
											"end": 14245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 13992,
											"end": 13996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14030,
											"end": 14032,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14019,
											"end": 14028,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14015,
											"end": 14033,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14007,
											"end": 14033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14007,
											"end": 14033,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14079,
											"end": 14088,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14073,
											"end": 14077,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14069,
											"end": 14089,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 14065,
											"end": 14066,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14054,
											"end": 14063,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14050,
											"end": 14067,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14043,
											"end": 14090,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14107,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 14233,
											"end": 14237,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 14107,
											"end": 14238,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 14107,
											"end": 14238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14107,
											"end": 14238,
											"name": "tag",
											"source": 9,
											"value": "421"
										},
										{
											"begin": 14107,
											"end": 14238,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14099,
											"end": 14238,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14099,
											"end": 14238,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13826,
											"end": 14245,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 13826,
											"end": 14245,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 13826,
											"end": 14245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 13826,
											"end": 14245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14429,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14251,
											"end": 14429,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14391,
											"end": 14421,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A20696E73756666696369656E7420616C6C6F77616E636500000000"
										},
										{
											"begin": 14387,
											"end": 14388,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14379,
											"end": 14385,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14375,
											"end": 14389,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14368,
											"end": 14422,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14429,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14251,
											"end": 14429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14801,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 14435,
											"end": 14801,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14577,
											"end": 14580,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 14598,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 14662,
											"end": 14664,
											"name": "PUSH",
											"source": 9,
											"value": "1C"
										},
										{
											"begin": 14657,
											"end": 14660,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 14598,
											"end": 14665,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 14598,
											"end": 14665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14598,
											"end": 14665,
											"name": "tag",
											"source": 9,
											"value": "424"
										},
										{
											"begin": 14598,
											"end": 14665,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14591,
											"end": 14665,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14591,
											"end": 14665,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14674,
											"end": 14767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 14763,
											"end": 14766,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14674,
											"end": 14767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 14674,
											"end": 14767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14674,
											"end": 14767,
											"name": "tag",
											"source": 9,
											"value": "425"
										},
										{
											"begin": 14674,
											"end": 14767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14792,
											"end": 14794,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 14787,
											"end": 14790,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14783,
											"end": 14795,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14795,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14776,
											"end": 14795,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14801,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14801,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14801,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14435,
											"end": 14801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14807,
											"end": 15226,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 14807,
											"end": 15226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 14973,
											"end": 14977,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15011,
											"end": 15013,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15000,
											"end": 15009,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 14996,
											"end": 15014,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 14988,
											"end": 15014,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14988,
											"end": 15014,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15060,
											"end": 15069,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15054,
											"end": 15058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15050,
											"end": 15070,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 15046,
											"end": 15047,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15035,
											"end": 15044,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15031,
											"end": 15048,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15024,
											"end": 15071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 15214,
											"end": 15218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 15088,
											"end": 15219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "tag",
											"source": 9,
											"value": "427"
										},
										{
											"begin": 15088,
											"end": 15219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15080,
											"end": 15219,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15080,
											"end": 15219,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14807,
											"end": 15226,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 14807,
											"end": 15226,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 14807,
											"end": 15226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 14807,
											"end": 15226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15232,
											"end": 15455,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 15232,
											"end": 15455,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15372,
											"end": 15406,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A207472616E736665722066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 15368,
											"end": 15369,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15360,
											"end": 15366,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15356,
											"end": 15370,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15349,
											"end": 15407,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15441,
											"end": 15447,
											"name": "PUSH",
											"source": 9,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15436,
											"end": 15438,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 15428,
											"end": 15434,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15424,
											"end": 15439,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15417,
											"end": 15448,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 15232,
											"end": 15455,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15232,
											"end": 15455,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15827,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 15461,
											"end": 15827,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15603,
											"end": 15606,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 15624,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 15688,
											"end": 15690,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 15683,
											"end": 15686,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 15624,
											"end": 15691,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 15624,
											"end": 15691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15624,
											"end": 15691,
											"name": "tag",
											"source": 9,
											"value": "430"
										},
										{
											"begin": 15624,
											"end": 15691,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15617,
											"end": 15691,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15617,
											"end": 15691,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15700,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 15789,
											"end": 15792,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15700,
											"end": 15793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 15700,
											"end": 15793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15700,
											"end": 15793,
											"name": "tag",
											"source": 9,
											"value": "431"
										},
										{
											"begin": 15700,
											"end": 15793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15818,
											"end": 15820,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 15813,
											"end": 15816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 15809,
											"end": 15821,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 15802,
											"end": 15821,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15802,
											"end": 15821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15827,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15827,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15827,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15461,
											"end": 15827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 15833,
											"end": 16252,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 15833,
											"end": 16252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 15999,
											"end": 16003,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16037,
											"end": 16039,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16026,
											"end": 16035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16022,
											"end": 16040,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16014,
											"end": 16040,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16014,
											"end": 16040,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16086,
											"end": 16095,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16080,
											"end": 16084,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16076,
											"end": 16096,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 16072,
											"end": 16073,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16061,
											"end": 16070,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16057,
											"end": 16074,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16050,
											"end": 16097,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16114,
											"end": 16245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 16240,
											"end": 16244,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 16114,
											"end": 16245,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 16114,
											"end": 16245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16114,
											"end": 16245,
											"name": "tag",
											"source": 9,
											"value": "433"
										},
										{
											"begin": 16114,
											"end": 16245,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16106,
											"end": 16245,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16106,
											"end": 16245,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15833,
											"end": 16252,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 15833,
											"end": 16252,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 15833,
											"end": 16252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 15833,
											"end": 16252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16479,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 16258,
											"end": 16479,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16398,
											"end": 16432,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A207472616E7366657220746F20746865207A65726F206164647265"
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16386,
											"end": 16392,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16382,
											"end": 16396,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16375,
											"end": 16433,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16467,
											"end": 16471,
											"name": "PUSH",
											"source": 9,
											"value": "7373000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16462,
											"end": 16464,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 16454,
											"end": 16460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16450,
											"end": 16465,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16443,
											"end": 16472,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16479,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16258,
											"end": 16479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16485,
											"end": 16851,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 16485,
											"end": 16851,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16627,
											"end": 16630,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 16648,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 16712,
											"end": 16714,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 16707,
											"end": 16710,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 16648,
											"end": 16715,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 16648,
											"end": 16715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16648,
											"end": 16715,
											"name": "tag",
											"source": 9,
											"value": "436"
										},
										{
											"begin": 16648,
											"end": 16715,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16641,
											"end": 16715,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16641,
											"end": 16715,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16724,
											"end": 16817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 16813,
											"end": 16816,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16724,
											"end": 16817,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 16724,
											"end": 16817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16724,
											"end": 16817,
											"name": "tag",
											"source": 9,
											"value": "437"
										},
										{
											"begin": 16724,
											"end": 16817,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 16842,
											"end": 16844,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 16837,
											"end": 16840,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 16833,
											"end": 16845,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 16826,
											"end": 16845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16826,
											"end": 16845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16485,
											"end": 16851,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16485,
											"end": 16851,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16485,
											"end": 16851,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16485,
											"end": 16851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 16857,
											"end": 17276,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 16857,
											"end": 17276,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17023,
											"end": 17027,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17061,
											"end": 17063,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17050,
											"end": 17059,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17046,
											"end": 17064,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17038,
											"end": 17064,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17038,
											"end": 17064,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17110,
											"end": 17119,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17104,
											"end": 17108,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17100,
											"end": 17120,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 17096,
											"end": 17097,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17085,
											"end": 17094,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17081,
											"end": 17098,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17074,
											"end": 17121,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17138,
											"end": 17269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 17264,
											"end": 17268,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 17138,
											"end": 17269,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 17138,
											"end": 17269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17138,
											"end": 17269,
											"name": "tag",
											"source": 9,
											"value": "439"
										},
										{
											"begin": 17138,
											"end": 17269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17130,
											"end": 17269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17130,
											"end": 17269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16857,
											"end": 17276,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 16857,
											"end": 17276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 16857,
											"end": 17276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 16857,
											"end": 17276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17282,
											"end": 17506,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 17282,
											"end": 17506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17422,
											"end": 17456,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A207472616E7366657220616D6F756E742065786365656473206261"
										},
										{
											"begin": 17418,
											"end": 17419,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17410,
											"end": 17416,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17406,
											"end": 17420,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17399,
											"end": 17457,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17491,
											"end": 17498,
											"name": "PUSH",
											"source": 9,
											"value": "6C616E6365000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17486,
											"end": 17488,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 17478,
											"end": 17484,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17474,
											"end": 17489,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17467,
											"end": 17499,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 17282,
											"end": 17506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17282,
											"end": 17506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17512,
											"end": 17878,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 17512,
											"end": 17878,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17654,
											"end": 17657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 17675,
											"end": 17742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 17739,
											"end": 17741,
											"name": "PUSH",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 17734,
											"end": 17737,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 17675,
											"end": 17742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 17675,
											"end": 17742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17675,
											"end": 17742,
											"name": "tag",
											"source": 9,
											"value": "442"
										},
										{
											"begin": 17675,
											"end": 17742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17668,
											"end": 17742,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17668,
											"end": 17742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17751,
											"end": 17844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 17840,
											"end": 17843,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17751,
											"end": 17844,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 17751,
											"end": 17844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17751,
											"end": 17844,
											"name": "tag",
											"source": 9,
											"value": "443"
										},
										{
											"begin": 17751,
											"end": 17844,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 17869,
											"end": 17871,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 17864,
											"end": 17867,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 17860,
											"end": 17872,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 17853,
											"end": 17872,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17853,
											"end": 17872,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17512,
											"end": 17878,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17512,
											"end": 17878,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17512,
											"end": 17878,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17512,
											"end": 17878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 17884,
											"end": 18303,
											"name": "tag",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 17884,
											"end": 18303,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18050,
											"end": 18054,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18088,
											"end": 18090,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18077,
											"end": 18086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18073,
											"end": 18091,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18065,
											"end": 18091,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18065,
											"end": 18091,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18137,
											"end": 18146,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18131,
											"end": 18135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18127,
											"end": 18147,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 18123,
											"end": 18124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18112,
											"end": 18121,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18108,
											"end": 18125,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18101,
											"end": 18148,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 18291,
											"end": 18295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18296,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 18165,
											"end": 18296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18165,
											"end": 18296,
											"name": "tag",
											"source": 9,
											"value": "445"
										},
										{
											"begin": 18165,
											"end": 18296,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18157,
											"end": 18296,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18157,
											"end": 18296,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17884,
											"end": 18303,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 17884,
											"end": 18303,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 17884,
											"end": 18303,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 17884,
											"end": 18303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18309,
											"end": 18543,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 18309,
											"end": 18543,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18449,
											"end": 18483,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A207472616E7366657220746F206E6F6E20494B4950375265636569"
										},
										{
											"begin": 18445,
											"end": 18446,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18437,
											"end": 18443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18433,
											"end": 18447,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18426,
											"end": 18484,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18518,
											"end": 18535,
											"name": "PUSH",
											"source": 9,
											"value": "76657220696D706C656D656E7465720000000000000000000000000000000000"
										},
										{
											"begin": 18513,
											"end": 18515,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 18505,
											"end": 18511,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18501,
											"end": 18516,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18494,
											"end": 18536,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 18309,
											"end": 18543,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18309,
											"end": 18543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18549,
											"end": 18915,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 18549,
											"end": 18915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18691,
											"end": 18694,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 18712,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 18776,
											"end": 18778,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 18771,
											"end": 18774,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 18712,
											"end": 18779,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 18712,
											"end": 18779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18712,
											"end": 18779,
											"name": "tag",
											"source": 9,
											"value": "448"
										},
										{
											"begin": 18712,
											"end": 18779,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18705,
											"end": 18779,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18705,
											"end": 18779,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18788,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 18877,
											"end": 18880,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18788,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 18788,
											"end": 18881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18788,
											"end": 18881,
											"name": "tag",
											"source": 9,
											"value": "449"
										},
										{
											"begin": 18788,
											"end": 18881,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 18906,
											"end": 18908,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 18901,
											"end": 18904,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 18897,
											"end": 18909,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 18890,
											"end": 18909,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18890,
											"end": 18909,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18549,
											"end": 18915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18549,
											"end": 18915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18549,
											"end": 18915,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18549,
											"end": 18915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 18921,
											"end": 19340,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 18921,
											"end": 19340,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19087,
											"end": 19091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19125,
											"end": 19127,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19114,
											"end": 19123,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19110,
											"end": 19128,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19102,
											"end": 19128,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19102,
											"end": 19128,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19174,
											"end": 19183,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19168,
											"end": 19172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19164,
											"end": 19184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 19160,
											"end": 19161,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19149,
											"end": 19158,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 19145,
											"end": 19162,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19138,
											"end": 19185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19202,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 19328,
											"end": 19332,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19202,
											"end": 19333,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 19202,
											"end": 19333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19202,
											"end": 19333,
											"name": "tag",
											"source": 9,
											"value": "451"
										},
										{
											"begin": 19202,
											"end": 19333,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19194,
											"end": 19333,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19194,
											"end": 19333,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18921,
											"end": 19340,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 18921,
											"end": 19340,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 18921,
											"end": 19340,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 18921,
											"end": 19340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19346,
											"end": 19464,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 19346,
											"end": 19464,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19433,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 19451,
											"end": 19456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19433,
											"end": 19457,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 19433,
											"end": 19457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19433,
											"end": 19457,
											"name": "tag",
											"source": 9,
											"value": "453"
										},
										{
											"begin": 19433,
											"end": 19457,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19428,
											"end": 19431,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19421,
											"end": 19458,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19346,
											"end": 19464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19346,
											"end": 19464,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19346,
											"end": 19464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19470,
											"end": 19568,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 19470,
											"end": 19568,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19521,
											"end": 19527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19555,
											"end": 19560,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19549,
											"end": 19561,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 19539,
											"end": 19561,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19539,
											"end": 19561,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19470,
											"end": 19568,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19470,
											"end": 19568,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19470,
											"end": 19568,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19470,
											"end": 19568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19574,
											"end": 19742,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 19574,
											"end": 19742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19657,
											"end": 19668,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19691,
											"end": 19697,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19686,
											"end": 19689,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19679,
											"end": 19698,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 19731,
											"end": 19735,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 19726,
											"end": 19729,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19722,
											"end": 19736,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19707,
											"end": 19736,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 19707,
											"end": 19736,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19574,
											"end": 19742,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19574,
											"end": 19742,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19574,
											"end": 19742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19574,
											"end": 19742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19574,
											"end": 19742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19748,
											"end": 20121,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 19748,
											"end": 20121,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19834,
											"end": 19837,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 19862,
											"end": 19900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 19894,
											"end": 19899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 19862,
											"end": 19900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 19862,
											"end": 19900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19862,
											"end": 19900,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 19862,
											"end": 19900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19916,
											"end": 19986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 19979,
											"end": 19985,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 19974,
											"end": 19977,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 19916,
											"end": 19986,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 19916,
											"end": 19986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19916,
											"end": 19986,
											"name": "tag",
											"source": 9,
											"value": "458"
										},
										{
											"begin": 19916,
											"end": 19986,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 19909,
											"end": 19986,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 19909,
											"end": 19986,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19995,
											"end": 20060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 20053,
											"end": 20059,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20048,
											"end": 20051,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20041,
											"end": 20045,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20034,
											"end": 20039,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20030,
											"end": 20046,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 19995,
											"end": 20060,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "228"
										},
										{
											"begin": 19995,
											"end": 20060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 19995,
											"end": 20060,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 19995,
											"end": 20060,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20085,
											"end": 20114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 20107,
											"end": 20113,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20085,
											"end": 20114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "229"
										},
										{
											"begin": 20085,
											"end": 20114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20085,
											"end": 20114,
											"name": "tag",
											"source": 9,
											"value": "460"
										},
										{
											"begin": 20085,
											"end": 20114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20080,
											"end": 20083,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20076,
											"end": 20115,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20069,
											"end": 20115,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20069,
											"end": 20115,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19838,
											"end": 20121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19748,
											"end": 20121,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 19748,
											"end": 20121,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 19748,
											"end": 20121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19748,
											"end": 20121,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 19748,
											"end": 20121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20322,
											"end": 20326,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20360,
											"end": 20363,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 20349,
											"end": 20358,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 20345,
											"end": 20364,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20337,
											"end": 20364,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20337,
											"end": 20364,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 20442,
											"end": 20443,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20431,
											"end": 20440,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20427,
											"end": 20444,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20418,
											"end": 20424,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 20374,
											"end": 20445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20374,
											"end": 20445,
											"name": "tag",
											"source": 9,
											"value": "462"
										},
										{
											"begin": 20374,
											"end": 20445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20455,
											"end": 20527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 20523,
											"end": 20525,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 20512,
											"end": 20521,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20508,
											"end": 20526,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20499,
											"end": 20505,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 20455,
											"end": 20527,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 20455,
											"end": 20527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20455,
											"end": 20527,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 20455,
											"end": 20527,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20537,
											"end": 20609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 20605,
											"end": 20607,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 20594,
											"end": 20603,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20590,
											"end": 20608,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20581,
											"end": 20587,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 20537,
											"end": 20609,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 20537,
											"end": 20609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20537,
											"end": 20609,
											"name": "tag",
											"source": 9,
											"value": "464"
										},
										{
											"begin": 20537,
											"end": 20609,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20656,
											"end": 20665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20650,
											"end": 20654,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20646,
											"end": 20666,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 20641,
											"end": 20643,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 20630,
											"end": 20639,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 20626,
											"end": 20644,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 20619,
											"end": 20667,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 20684,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 20755,
											"end": 20759,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20746,
											"end": 20752,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 20684,
											"end": 20760,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 20684,
											"end": 20760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20684,
											"end": 20760,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 20684,
											"end": 20760,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20676,
											"end": 20760,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20676,
											"end": 20760,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20127,
											"end": 20767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 20914,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 20773,
											"end": 20914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20829,
											"end": 20834,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 20860,
											"end": 20866,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20854,
											"end": 20867,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 20845,
											"end": 20867,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 20845,
											"end": 20867,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20876,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 20902,
											"end": 20907,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 20876,
											"end": 20908,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 20876,
											"end": 20908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20876,
											"end": 20908,
											"name": "tag",
											"source": 9,
											"value": "467"
										},
										{
											"begin": 20876,
											"end": 20908,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 20914,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 20914,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 20914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 20914,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20773,
											"end": 20914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 20920,
											"end": 21269,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 20920,
											"end": 21269,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 20989,
											"end": 20995,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21038,
											"end": 21040,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21026,
											"end": 21035,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21017,
											"end": 21024,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21013,
											"end": 21036,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 21009,
											"end": 21041,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 21006,
											"end": 21125,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 21006,
											"end": 21125,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 21006,
											"end": 21125,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 21044,
											"end": 21123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 21044,
											"end": 21123,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 21044,
											"end": 21123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21044,
											"end": 21123,
											"name": "tag",
											"source": 9,
											"value": "470"
										},
										{
											"begin": 21044,
											"end": 21123,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21006,
											"end": 21125,
											"name": "tag",
											"source": 9,
											"value": "469"
										},
										{
											"begin": 21006,
											"end": 21125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21164,
											"end": 21165,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21189,
											"end": 21252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 21244,
											"end": 21251,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 21235,
											"end": 21241,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21224,
											"end": 21233,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 21220,
											"end": 21242,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21189,
											"end": 21252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 21189,
											"end": 21252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21189,
											"end": 21252,
											"name": "tag",
											"source": 9,
											"value": "471"
										},
										{
											"begin": 21189,
											"end": 21252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21179,
											"end": 21252,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21179,
											"end": 21252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21135,
											"end": 21262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20920,
											"end": 21269,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 20920,
											"end": 21269,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 20920,
											"end": 21269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20920,
											"end": 21269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 20920,
											"end": 21269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21275,
											"end": 21508,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 21275,
											"end": 21508,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21415,
											"end": 21449,
											"name": "PUSH",
											"source": 9,
											"value": "4B4950373A207472616E7366657220746F206E6F6E204B495037526563656976"
										},
										{
											"begin": 21411,
											"end": 21412,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21403,
											"end": 21409,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21399,
											"end": 21413,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21392,
											"end": 21450,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21484,
											"end": 21500,
											"name": "PUSH",
											"source": 9,
											"value": "657220696D706C656D656E746572000000000000000000000000000000000000"
										},
										{
											"begin": 21479,
											"end": 21481,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 21471,
											"end": 21477,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21467,
											"end": 21482,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21460,
											"end": 21501,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 21275,
											"end": 21508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21275,
											"end": 21508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21514,
											"end": 21880,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 21514,
											"end": 21880,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21656,
											"end": 21659,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 21677,
											"end": 21744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 21741,
											"end": 21743,
											"name": "PUSH",
											"source": 9,
											"value": "2E"
										},
										{
											"begin": 21736,
											"end": 21739,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 21677,
											"end": 21744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 21677,
											"end": 21744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21677,
											"end": 21744,
											"name": "tag",
											"source": 9,
											"value": "474"
										},
										{
											"begin": 21677,
											"end": 21744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21670,
											"end": 21744,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21670,
											"end": 21744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21753,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 21842,
											"end": 21845,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21753,
											"end": 21846,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 21753,
											"end": 21846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21753,
											"end": 21846,
											"name": "tag",
											"source": 9,
											"value": "475"
										},
										{
											"begin": 21753,
											"end": 21846,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 21871,
											"end": 21873,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 21866,
											"end": 21869,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 21862,
											"end": 21874,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 21874,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21855,
											"end": 21874,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21514,
											"end": 21880,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21514,
											"end": 21880,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21514,
											"end": 21880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21514,
											"end": 21880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 21886,
											"end": 22305,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 21886,
											"end": 22305,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22052,
											"end": 22056,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22090,
											"end": 22092,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 22079,
											"end": 22088,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 22075,
											"end": 22093,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22067,
											"end": 22093,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22067,
											"end": 22093,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 22139,
											"end": 22148,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22133,
											"end": 22137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22129,
											"end": 22149,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 22125,
											"end": 22126,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 22114,
											"end": 22123,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 22110,
											"end": 22127,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 22103,
											"end": 22150,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 22167,
											"end": 22298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 22293,
											"end": 22297,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 22167,
											"end": 22298,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 22167,
											"end": 22298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 22167,
											"end": 22298,
											"name": "tag",
											"source": 9,
											"value": "477"
										},
										{
											"begin": 22167,
											"end": 22298,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 22159,
											"end": 22298,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 22159,
											"end": 22298,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21886,
											"end": 22305,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 21886,
											"end": 22305,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 21886,
											"end": 22305,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 21886,
											"end": 22305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@klaytn/contracts/KIP/interfaces/IKIP13.sol",
								"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol",
								"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol",
								"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol",
								"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol",
								"@klaytn/contracts/KIP/utils/introspection/KIP13.sol",
								"@klaytn/contracts/utils/Address.sol",
								"@klaytn/contracts/utils/Context.sol",
								"contracts/KicketToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"safeTransfer(address,uint256)": "423f6cef",
							"safeTransfer(address,uint256,bytes)": "eb795549",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IKIP7-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IKIP7-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IKIP7-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {KIP7} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IKIP7-balanceOf} and {IKIP7-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IKIP7-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IKIP7-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"safeTransfer(address,uint256)\":{\"details\":\"See {IKIP7-safeTransfer}. Emits a {Transfer} event Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`. - if `recipient` is a smart contract, it must implement {IKIP7Receiver}\"},\"safeTransfer(address,uint256,bytes)\":{\"details\":\"Same as {xref-KIP7-safeTransfer-address-uint256-}[`safeTransfer`], with an additional `_data` parameter which is forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients. Emits a {Transfer} event\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IKIP7-safeTransferFrom}. Emits a {Transfer} event Emits an {Approval} event indicating the updated allowance. This is not required by the KIP. See the note at the beginning of {KIP7}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`. - if `recipient` is a smart contract, it must implement {IKIP7Receiver}\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Same as {xref-KIP7-safeTransferFrom-address-uint256-}[`safeTransferFrom`], with an additional `_data` parameter which is forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients. Emits a {Transfer} event Emits an {Approval} event indicating the updated allowance.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IKIP13-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IKIP7-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IKIP7-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IKIP7-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {KIP7}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/KicketToken.sol\":\"KicketToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@klaytn/contracts/KIP/interfaces/IKIP13.sol\":{\"keccak256\":\"0x538533dcc430536d456ae9e781680ca578ce70bab6b2db7cc18422d2babfd030\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2138a452ed0d0e65ec203a3b4cc610c065b8072efdd3d7757914c0597f1a08fb\",\"dweb:/ipfs/QmR5TvG2H5SwbLmDMnbUHfDxxHW6upYLdCbsZtibHVEvEr\"]},\"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol\":{\"keccak256\":\"0x9ad208086b69dffd327a65877e2304ff51b111e7303ef415ff01fd884c714a51\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ba07be24ca6b3f976160c3351ecc064e56ec47be4c12cba0c693219130bfba2\",\"dweb:/ipfs/QmR3FykeTjeSedaU8cSvfRoJ7bMscoWvP5FWtu1sfzHXCo\"]},\"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol\":{\"keccak256\":\"0x67261ba02258b78860bff7a0a955474f7831d6bb00d7027859b63e0ff1f05a4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aacb28d196440a8cde1383f8c988992d5842ca610f2cb13b7f79aae15feb9176\",\"dweb:/ipfs/Qma7fkd2hm9Yho8Jbjb2mp52ziawEiPFpfA6qNEZfp9rwm\"]},\"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol\":{\"keccak256\":\"0xe4687748e1b4c29a35ffbebd8b7fa7e79f6473448d6cf014bd61c93666594151\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8fb4d882f8780e6f51caee73f6b2ba93cad088d53df5c02f511368942c605f79\",\"dweb:/ipfs/QmZqbEf94MFocmaMPN2sSyUbRTEmvqmRAKTdxxnFkE9u4L\"]},\"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol\":{\"keccak256\":\"0xb63277576f18a3a05c2ec7736bbb7b4a0bd0d12bbd823a4751144d60273a2c46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d5b38071876acadb51cd31254f6eefa30d9240c21b531bdb89648f7475231fd\",\"dweb:/ipfs/QmVvkB9Uwwdq2QJp1uU6eJrcetmaU9zdcNvdg2z9zRmy9e\"]},\"@klaytn/contracts/KIP/utils/introspection/KIP13.sol\":{\"keccak256\":\"0x9efe61dd73941b281759ca65eaaa0338c9a4105ba8c5d5c5b4998438830c8ed9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://261ed10e8f4c3c6408f119e62b87acc63413ff3c848c4b415e2a596eda29aacf\",\"dweb:/ipfs/QmeaBqThx2gmgG4HrR6Uk6Xjcyx5kUs2SSRMK4nkUZRVX6\"]},\"@klaytn/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@klaytn/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/KicketToken.sol\":{\"keccak256\":\"0x34496243398a0a608b38b0399125cb88c166ca1179445600eb5c5d507183080f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163ce18588666b89376cbe34f801c2cc623f894b5e3df6164aeb92bf97397211\",\"dweb:/ipfs/QmU2Y6GcyRPRhXrrmiDuvA24oiTs7tZzTRZ29iA8Zytw1n\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "contracts/KicketToken.sol:KicketToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "contracts/KicketToken.sol:KicketToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "contracts/KicketToken.sol:KicketToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "contracts/KicketToken.sol:KicketToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "contracts/KicketToken.sol:KicketToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@klaytn/contracts/KIP/interfaces/IKIP13.sol": {
				"ast": {
					"absolutePath": "@klaytn/contracts/KIP/interfaces/IKIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							174
						]
					},
					"id": 3,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:0"
						},
						{
							"absolutePath": "@klaytn/contracts/KIP/utils/introspection/IKIP13.sol",
							"file": "../utils/introspection/IKIP13.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3,
							"sourceUnit": 175,
							"src": "120:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						}
					],
					"src": "95:69:0"
				},
				"id": 0
			},
			"@klaytn/contracts/KIP/token/KIP7/IKIP7.sol": {
				"ast": {
					"absolutePath": "@klaytn/contracts/KIP/token/KIP7/IKIP7.sol",
					"exportedSymbols": {
						"IKIP7": [
							120
						]
					},
					"id": 121,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 4,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "239:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IKIP7",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "264:125:1",
								"text": " @dev Interface of the KIP7 standard as defined in the KIP.\n See http://kips.klaytn.com/KIPs/kip-7-fungible_token"
							},
							"fullyImplemented": false,
							"id": 120,
							"linearizedBaseContracts": [
								120
							],
							"name": "IKIP7",
							"nameLocation": "400:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 6,
										"nodeType": "StructuredDocumentation",
										"src": "412:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 14,
									"name": "Transfer",
									"nameLocation": "581:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 8,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "606:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "590:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 7,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "590:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 10,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "628:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "612:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 9,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 14,
												"src": "632:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "589:57:1"
									},
									"src": "575:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "653:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 23,
									"name": "Approval",
									"nameLocation": "812:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "837:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "821:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "860:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "844:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "844:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "877:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 23,
												"src": "869:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:63:1"
									},
									"src": "806:78:1"
								},
								{
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "890:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 29,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "970:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "981:2:1"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 29,
												"src": "1007:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1007:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:9:1"
									},
									"scope": 120,
									"src": "961:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "1022:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1108:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1126:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1117:17:1"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "1158:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:9:1"
									},
									"scope": 120,
									"src": "1099:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "1173:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 47,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1389:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1406:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1398:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1418:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1410:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1410:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1397:28:1"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "1444:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1444:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:6:1"
									},
									"scope": 120,
									"src": "1380:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "1456:285:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve}, {transferFrom}, or {safeTransferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1755:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1773:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1765:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1788:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1780:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 51,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:32:1"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "1820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1819:9:1"
									},
									"scope": 120,
									"src": "1746:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 58,
										"nodeType": "StructuredDocumentation",
										"src": "1835:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 67,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2491:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2507:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2499:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 59,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2524:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2516:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 61,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2516:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:33:1"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "2550:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 64,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2550:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2549:6:1"
									},
									"scope": 120,
									"src": "2482:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2562:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 79,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2863:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2885:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2915:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2907:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2935:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2927:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2927:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2875:72:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2966:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 76,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2966:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2965:6:1"
									},
									"scope": 120,
									"src": "2854:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2978:201:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "eb795549",
									"id": 89,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3193:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3223:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3215:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 81,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3250:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3242:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3242:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "3266:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 85,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3266:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3205:84:1"
									},
									"returnParameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3298:0:1"
									},
									"scope": 120,
									"src": "3184:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "3305:128:1",
										"text": " @dev  Moves `amount` tokens from the caller's account to `recipient`.\n Emits a {Transfer} event."
									},
									"functionSelector": "423f6cef",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "3447:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3468:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3460:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3487:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "3479:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3479:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3459:35:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3503:0:1"
									},
									"scope": 120,
									"src": "3438:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 98,
										"nodeType": "StructuredDocumentation",
										"src": "3510:221:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism\n and passes `data` for {IKIP7Receiver-onKIP7Received} handler logic.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3745:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3779:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3771:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 99,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3771:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3803:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3795:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3795:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3830:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3822:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3859:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "3846:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 105,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3846:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:108:1"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3878:0:1"
									},
									"scope": 120,
									"src": "3736:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "3885:147:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the {allowance} mechanism.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4046:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4080:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4072:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 111,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4072:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4104:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4096:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4096:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4131:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "4123:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4123:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:81:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4152:0:1"
									},
									"scope": 120,
									"src": "4037:116:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 121,
							"src": "390:3765:1",
							"usedErrors": []
						}
					],
					"src": "239:3917:1"
				},
				"id": 1
			},
			"@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol": {
				"ast": {
					"absolutePath": "@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol",
					"exportedSymbols": {
						"IKIP7Receiver": [
							137
						]
					},
					"id": 138,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 122,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "255:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IKIP7Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 137,
							"linearizedBaseContracts": [
								137
							],
							"name": "IKIP7Receiver",
							"nameLocation": "290:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "310:516:2",
										"text": " @dev Whenever an {IKIP7} `amount` is transferred to this contract via {IKIP7-safeTransfer}\n or {IKIP7-safeTransferFrom} by `operator` from `from`, this function is called.\n {onKIP7Received} must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IKIP7Receiver.onKIP7Received.selector`."
									},
									"functionSelector": "9d188c22",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onKIP7Received",
									"nameLocation": "840:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "872:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "864:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "864:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "898:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "890:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "920:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "912:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "912:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "951:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "936:20:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "936:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:108:2"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "981:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 133,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "981:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "980:8:2"
									},
									"scope": 137,
									"src": "831:158:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 138,
							"src": "280:711:2",
							"usedErrors": []
						}
					],
					"src": "255:737:2"
				},
				"id": 2
			},
			"@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol": {
				"ast": {
					"absolutePath": "@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol",
					"exportedSymbols": {
						"IKIP7": [
							120
						],
						"IKIP7Metadata": [
							162
						]
					},
					"id": 163,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 139,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "277:23:3"
						},
						{
							"absolutePath": "@klaytn/contracts/KIP/token/KIP7/IKIP7.sol",
							"file": "../IKIP7.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 163,
							"sourceUnit": 121,
							"src": "302:22:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 142,
										"name": "IKIP7",
										"nameLocations": [
											"484:5:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 120,
										"src": "484:5:3"
									},
									"id": 143,
									"nodeType": "InheritanceSpecifier",
									"src": "484:5:3"
								}
							],
							"canonicalName": "IKIP7Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 141,
								"nodeType": "StructuredDocumentation",
								"src": "326:130:3",
								"text": " @dev Extension of {KIP7} which exposes metadata functions.\n See https://kips.klaytn.com/KIPs/kip-7#metadata-extension"
							},
							"fullyImplemented": false,
							"id": 162,
							"linearizedBaseContracts": [
								162,
								120
							],
							"name": "IKIP7Metadata",
							"nameLocation": "467:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "496:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "564:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "568:2:3"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "594:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 146,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "593:15:3"
									},
									"scope": 162,
									"src": "555:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "615:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "685:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "691:2:3"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "717:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 152,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "717:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "716:15:3"
									},
									"scope": 162,
									"src": "676:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "738:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 161,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "817:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:2:3"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "851:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 158,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "851:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:7:3"
									},
									"scope": 162,
									"src": "808:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 163,
							"src": "457:403:3",
							"usedErrors": []
						}
					],
					"src": "277:584:3"
				},
				"id": 3
			},
			"@klaytn/contracts/KIP/utils/introspection/IKIP13.sol": {
				"ast": {
					"absolutePath": "@klaytn/contracts/KIP/utils/introspection/IKIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							174
						]
					},
					"id": 175,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 164,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "258:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IKIP13",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 165,
								"nodeType": "StructuredDocumentation",
								"src": "283:142:4",
								"text": " @dev Interface of the KIP13 standard as defined in the KIP.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard"
							},
							"fullyImplemented": false,
							"id": 174,
							"linearizedBaseContracts": [
								174
							],
							"name": "IKIP13",
							"nameLocation": "436:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "449:387:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`.\n See - http://kips.klaytn.com/KIPs/kip-13-interface_query_standard#how-interface-identifiers-are-defined\n to learn more about how these ids are created.\n Requirements:\n - implementation of this function call must use less than 30 000 gas"
									},
									"functionSelector": "01ffc9a7",
									"id": 173,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "850:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "875:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "868:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 167,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "868:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:20:4"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "911:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 170,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "911:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "910:6:4"
									},
									"scope": 174,
									"src": "841:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 175,
							"src": "426:493:4",
							"usedErrors": []
						}
					],
					"src": "258:662:4"
				},
				"id": 4
			},
			"@klaytn/contracts/KIP/utils/introspection/KIP13.sol": {
				"ast": {
					"absolutePath": "@klaytn/contracts/KIP/utils/introspection/KIP13.sol",
					"exportedSymbols": {
						"IKIP13": [
							174
						],
						"KIP13": [
							198
						]
					},
					"id": 199,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 176,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "256:23:5"
						},
						{
							"absolutePath": "@klaytn/contracts/KIP/interfaces/IKIP13.sol",
							"file": "../../interfaces/IKIP13.sol",
							"id": 177,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 199,
							"sourceUnit": 3,
							"src": "281:37:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 179,
										"name": "IKIP13",
										"nameLocations": [
											"921:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 174,
										"src": "921:6:5"
									},
									"id": 180,
									"nodeType": "InheritanceSpecifier",
									"src": "921:6:5"
								}
							],
							"canonicalName": "KIP13",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 178,
								"nodeType": "StructuredDocumentation",
								"src": "320:573:5",
								"text": " @dev Implementation of the {IKIP13} interface.\n Contracts that want to implement KIP13 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {KIP13Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 198,
							"linearizedBaseContracts": [
								198,
								174
							],
							"name": "KIP13",
							"nameLocation": "912:5:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										173
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1085:63:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 189,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "1102:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 191,
																	"name": "IKIP13",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 174,
																	"src": "1122:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IKIP13_$174_$",
																		"typeString": "type(contract IKIP13)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IKIP13_$174_$",
																		"typeString": "type(contract IKIP13)"
																	}
																],
																"id": 190,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1117:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1117:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IKIP13_$174",
																"typeString": "type(contract IKIP13)"
															}
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1130:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1117:24:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1102:39:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 188,
												"id": 195,
												"nodeType": "Return",
												"src": "1095:46:5"
											}
										]
									},
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "934:55:5",
										"text": " @dev See {IKIP13-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1003:17:5",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 185,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1061:8:5"
									},
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1028:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1021:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 182,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1021:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:20:5"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1079:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 186,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1079:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:6:5"
									},
									"scope": 198,
									"src": "994:154:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 199,
							"src": "894:256:5",
							"usedErrors": []
						}
					],
					"src": "256:895:5"
				},
				"id": 5
			},
			"@klaytn/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@klaytn/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							493
						]
					},
					"id": 494,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 200,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 201,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:6",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 493,
							"linearizedBaseContracts": [
								493
							],
							"name": "Address",
							"nameLocation": "202:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1241:254:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 209,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "1465:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 208,
												"id": 214,
												"nodeType": "Return",
												"src": "1458:30:6"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:6",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1195:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:6"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1235:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:6"
									},
									"scope": 493,
									"src": "1175:320:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2483:241:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 227,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$493",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$493",
																				"typeString": "library Address"
																			}
																		],
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 225,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 230,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2526:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:6"
											},
											{
												"assignments": [
													236,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 249,
														"src": "2578:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 235,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 243,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 237,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 219,
																"src": "2596:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 239,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "2618:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 245,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "2647:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:6"
											}
										]
									},
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:6",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2431:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:6",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2458:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:6"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:6"
									},
									"scope": 493,
									"src": "2412:312:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "3555:84:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 261,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "3585:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 262,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "3593:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3599:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 260,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															267,
															287
														],
														"referencedDeclaration": 287,
														"src": "3572:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 259,
												"id": 265,
												"nodeType": "Return",
												"src": "3565:67:6"
											}
										]
									},
									"documentation": {
										"id": 251,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:6",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3488:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3504:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 254,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:6"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3541:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:6"
									},
									"scope": 493,
									"src": "3466:173:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "4008:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 280,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4047:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 281,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "4055:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4061:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 283,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "4064:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 279,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															307,
															357
														],
														"referencedDeclaration": 357,
														"src": "4025:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4025:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 278,
												"id": 285,
												"nodeType": "Return",
												"src": "4018:59:6"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "3645:211:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3870:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3900:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3892:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3892:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3929:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3916:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3916:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3957:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3943:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 273,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3943:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3882:93:6"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3994:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3994:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3993:14:6"
									},
									"scope": 493,
									"src": "3861:223:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "4589:111:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4628:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "4636:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 302,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "4642:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4649:43:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 299,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															307,
															357
														],
														"referencedDeclaration": 357,
														"src": "4606:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4606:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 298,
												"id": 305,
												"nodeType": "Return",
												"src": "4599:94:6"
											}
										]
									},
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "4090:351:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4455:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4494:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "4486:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4486:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4523:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "4510:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4510:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4545:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "4537:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4537:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4476:80:6"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "4575:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4575:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4574:14:6"
									},
									"scope": 493,
									"src": "4446:254:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "5127:320:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 324,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5153:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$493",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$493",
																				"typeString": "library Address"
																			}
																		],
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5145:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 322,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5145:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5145:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5159:7:6",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5145:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 327,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "5170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5145:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5177:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 321,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5137:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "5137:81:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 334,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 310,
																	"src": "5247:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 333,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "5236:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5236:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5256:31:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5228:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5228:60:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "ExpressionStatement",
												"src": "5228:60:6"
											},
											{
												"assignments": [
													340,
													342
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5305:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "5300:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 339,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5300:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 342,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5327:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 356,
														"src": "5314:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 341,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5314:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 349,
												"initialValue": {
													"arguments": [
														{
															"id": 347,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "5367:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 343,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "5341:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5348:4:6",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5341:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 345,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 314,
																"src": "5360:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5341:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5341:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5299:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "5406:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 352,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "5415:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 353,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 316,
															"src": "5427:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 350,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "5389:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5389:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 320,
												"id": 355,
												"nodeType": "Return",
												"src": "5382:58:6"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "4706:237:6",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4957:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4996:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "4988:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4988:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5025:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5012:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5012:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5047:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5039:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5076:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5062:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 315,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5062:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4978:116:6"
									},
									"returnParameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "5113:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 318,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5113:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5112:14:6"
									},
									"scope": 493,
									"src": "4948:499:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "5724:97:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 368,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "5760:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "5768:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5774:39:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 367,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															374,
															409
														],
														"referencedDeclaration": 409,
														"src": "5741:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5741:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 366,
												"id": 372,
												"nodeType": "Return",
												"src": "5734:80:6"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "5453:166:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5633:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5660:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "5652:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5681:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "5668:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 361,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5668:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5651:35:6"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "5710:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5710:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5709:14:6"
									},
									"scope": 493,
									"src": "5624:197:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "6163:228:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 388,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 377,
																	"src": "6192:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 387,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "6181:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6181:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6201:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 386,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6173:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6173:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "6173:67:6"
											},
											{
												"assignments": [
													394,
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 394,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6257:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "6252:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 393,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6252:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6279:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "6266:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 395,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6266:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"arguments": [
														{
															"id": 399,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 379,
															"src": "6311:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 397,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "6293:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6300:10:6",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6293:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6251:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 403,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "6350:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 404,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "6359:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 405,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 381,
															"src": "6371:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 402,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "6333:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6333:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 385,
												"id": 407,
												"nodeType": "Return",
												"src": "6326:58:6"
											}
										]
									},
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "5827:173:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6014:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6050:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "6042:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6042:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6079:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "6066:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 378,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6066:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6107:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "6093:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 380,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6093:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:93:6"
									},
									"returnParameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "6149:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6149:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:14:6"
									},
									"scope": 493,
									"src": "6005:386:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "6667:101:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 420,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "6705:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 421,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "6713:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6719:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 419,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															426,
															461
														],
														"referencedDeclaration": 461,
														"src": "6684:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6684:77:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "6677:84:6"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "6397:168:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6579:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6608:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6600:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6599:35:6"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "6653:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 416,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6653:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6652:14:6"
									},
									"scope": 493,
									"src": "6570:198:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "7109:232:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 440,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "7138:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 439,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 216,
																"src": "7127:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7127:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7147:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7119:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7119:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "7119:69:6"
											},
											{
												"assignments": [
													446,
													448
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7205:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "7200:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 445,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7200:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 448,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7227:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "7214:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 447,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7214:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 453,
												"initialValue": {
													"arguments": [
														{
															"id": 451,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "7261:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 449,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "7241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7248:12:6",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7241:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7241:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7199:67:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 455,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "7300:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 456,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 448,
															"src": "7309:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 457,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "7321:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 454,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "7283:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:51:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 437,
												"id": 459,
												"nodeType": "Return",
												"src": "7276:58:6"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "6774:175:6",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6963:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7001:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "6993:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6993:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7030:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7017:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 430,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7017:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7058:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7044:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 432,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7044:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:93:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "7095:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 435,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7095:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7094:14:6"
									},
									"scope": 493,
									"src": "6954:387:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 491,
										"nodeType": "Block",
										"src": "7721:532:6",
										"statements": [
											{
												"condition": {
													"id": 473,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 464,
													"src": "7735:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 489,
													"nodeType": "Block",
													"src": "7792:455:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 477,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 466,
																		"src": "7876:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7887:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7876:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7896:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7876:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 487,
																"nodeType": "Block",
																"src": "8184:53:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 484,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 468,
																					"src": "8209:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 483,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8202:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8202:20:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 486,
																		"nodeType": "ExpressionStatement",
																		"src": "8202:20:6"
																	}
																]
															},
															"id": 488,
															"nodeType": "IfStatement",
															"src": "7872:365:6",
															"trueBody": {
																"id": 482,
																"nodeType": "Block",
																"src": "7899:279:6",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "8019:145:6",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "8041:40:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "8070:10:6"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "8064:5:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8064:17:6"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "8045:15:6",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8113:2:6",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "8117:10:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8109:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8109:19:6"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "8130:15:6"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "8102:6:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8102:44:6"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "8102:44:6"
																				}
																			]
																		},
																		"evmVersion": "paris",
																		"externalReferences": [
																			{
																				"declaration": 466,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8070:10:6",
																				"valueSize": 1
																			},
																			{
																				"declaration": 466,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "8117:10:6",
																				"valueSize": 1
																			}
																		],
																		"id": 481,
																		"nodeType": "InlineAssembly",
																		"src": "8010:154:6"
																	}
																]
															}
														}
													]
												},
												"id": 490,
												"nodeType": "IfStatement",
												"src": "7731:516:6",
												"trueBody": {
													"id": 476,
													"nodeType": "Block",
													"src": "7744:42:6",
													"statements": [
														{
															"expression": {
																"id": 474,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "7765:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 472,
															"id": 475,
															"nodeType": "Return",
															"src": "7758:17:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 462,
										"nodeType": "StructuredDocumentation",
										"src": "7347:209:6",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 492,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7570:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7601:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7596:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 463,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7596:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7631:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7618:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 465,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7618:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7665:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7651:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 467,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7651:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7586:97:6"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "7707:12:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 470,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7707:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:14:6"
									},
									"scope": 493,
									"src": "7561:692:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 494,
							"src": "194:8061:6",
							"usedErrors": []
						}
					],
					"src": "101:8155:6"
				},
				"id": 6
			},
			"@klaytn/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@klaytn/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							515
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 495,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 496,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "Context",
							"nameLocation": "626:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 504,
										"nodeType": "Block",
										"src": "702:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 501,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 500,
												"id": 503,
												"nodeType": "Return",
												"src": "712:17:7"
											}
										]
									},
									"id": 505,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:7"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 505,
												"src": "693:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:7"
									},
									"scope": 515,
									"src": "640:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "809:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 510,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 509,
												"id": 512,
												"nodeType": "Return",
												"src": "819:15:7"
											}
										]
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:7"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "793:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:7"
									},
									"scope": 515,
									"src": "742:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 516,
							"src": "608:235:7",
							"usedErrors": []
						}
					],
					"src": "86:758:7"
				},
				"id": 7
			},
			"contracts/KicketToken.sol": {
				"ast": {
					"absolutePath": "contracts/KicketToken.sol",
					"exportedSymbols": {
						"Address": [
							493
						],
						"Context": [
							515
						],
						"IKIP13": [
							174
						],
						"IKIP7": [
							120
						],
						"IKIP7Metadata": [
							162
						],
						"IKIP7Receiver": [
							137
						],
						"KIP13": [
							198
						],
						"KicketToken": [
							1381
						]
					},
					"id": 1382,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "@klaytn/contracts/KIP/token/KIP7/IKIP7.sol",
							"file": "@klaytn/contracts/KIP/token/KIP7/IKIP7.sol",
							"id": 518,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1382,
							"sourceUnit": 121,
							"src": "58:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol",
							"file": "@klaytn/contracts/KIP/token/KIP7/extensions/IKIP7Metadata.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1382,
							"sourceUnit": 163,
							"src": "111:71:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol",
							"file": "@klaytn/contracts/KIP/token/KIP7/IKIP7Receiver.sol",
							"id": 520,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1382,
							"sourceUnit": 138,
							"src": "183:60:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@klaytn/contracts/KIP/utils/introspection/KIP13.sol",
							"file": "@klaytn/contracts/KIP/utils/introspection/KIP13.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1382,
							"sourceUnit": 199,
							"src": "244:61:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@klaytn/contracts/utils/Context.sol",
							"file": "@klaytn/contracts/utils/Context.sol",
							"id": 522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1382,
							"sourceUnit": 516,
							"src": "306:45:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@klaytn/contracts/utils/Address.sol",
							"file": "@klaytn/contracts/utils/Address.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1382,
							"sourceUnit": 494,
							"src": "352:45:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 524,
										"name": "Context",
										"nameLocations": [
											"470:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 515,
										"src": "470:7:8"
									},
									"id": 525,
									"nodeType": "InheritanceSpecifier",
									"src": "470:7:8"
								},
								{
									"baseName": {
										"id": 526,
										"name": "KIP13",
										"nameLocations": [
											"479:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 198,
										"src": "479:5:8"
									},
									"id": 527,
									"nodeType": "InheritanceSpecifier",
									"src": "479:5:8"
								},
								{
									"baseName": {
										"id": 528,
										"name": "IKIP7",
										"nameLocations": [
											"486:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 120,
										"src": "486:5:8"
									},
									"id": 529,
									"nodeType": "InheritanceSpecifier",
									"src": "486:5:8"
								},
								{
									"baseName": {
										"id": 530,
										"name": "IKIP7Metadata",
										"nameLocations": [
											"493:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 162,
										"src": "493:13:8"
									},
									"id": 531,
									"nodeType": "InheritanceSpecifier",
									"src": "493:13:8"
								}
							],
							"canonicalName": "KicketToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1381,
							"linearizedBaseContracts": [
								1381,
								162,
								120,
								198,
								174,
								515
							],
							"name": "KicketToken",
							"nameLocation": "455:11:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 534,
									"libraryName": {
										"id": 532,
										"name": "Address",
										"nameLocations": [
											"521:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 493,
										"src": "521:7:8"
									},
									"nodeType": "UsingForDirective",
									"src": "515:26:8",
									"typeName": {
										"id": 533,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:8",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "583:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "547:45:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "555:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "547:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "566:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "655:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "599:67:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "607:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "599:47:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "626:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "618:27:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "637:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "689:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "673:28:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "673:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "723:5:8",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "708:20:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "708:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "749:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1381,
									"src": "734:22:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "734:6:8",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1122:57:8",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1132:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1140:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1132:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1132:13:8"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1155:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1165:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1155:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1155:17:8"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "763:298:8",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1092:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1078:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1078:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1113:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1099:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1099:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:44:8"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1122:0:8"
									},
									"scope": 1381,
									"src": "1066:113:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										197
									],
									"body": {
										"id": 596,
										"nodeType": "Block",
										"src": "1343:188:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 577,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1372:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 579,
																			"name": "IKIP7",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 120,
																			"src": "1392:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IKIP7_$120_$",
																				"typeString": "type(contract IKIP7)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IKIP7_$120_$",
																				"typeString": "type(contract IKIP7)"
																			}
																		],
																		"id": 578,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1387:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1387:11:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IKIP7_$120",
																		"typeString": "type(contract IKIP7)"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1399:11:8",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1387:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1372:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 583,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1426:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 585,
																			"name": "IKIP7Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 162,
																			"src": "1446:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IKIP7Metadata_$162_$",
																				"typeString": "type(contract IKIP7Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IKIP7Metadata_$162_$",
																				"typeString": "type(contract IKIP7Metadata)"
																			}
																		],
																		"id": 584,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1441:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1441:19:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IKIP7Metadata_$162",
																		"typeString": "type(contract IKIP7Metadata)"
																	}
																},
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1461:11:8",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1441:31:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1426:46:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1372:100:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 592,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 570,
																"src": "1512:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 590,
																"name": "KIP13",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "1488:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_KIP13_$198_$",
																	"typeString": "type(contract KIP13)"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1494:17:8",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 197,
															"src": "1488:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1488:36:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1372:152:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 576,
												"id": 595,
												"nodeType": "Return",
												"src": "1353:171:8"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1185:55:8",
										"text": " @dev See {IKIP13-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 597,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1254:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 573,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 572,
												"name": "KIP13",
												"nameLocations": [
													"1321:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 198,
												"src": "1321:5:8"
											}
										],
										"src": "1312:15:8"
									},
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1279:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1272:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 569,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1272:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:20:8"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1337:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1337:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1336:6:8"
									},
									"scope": 1381,
									"src": "1245:286:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										149
									],
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "1665:29:8",
										"statements": [
											{
												"expression": {
													"id": 604,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "1682:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 603,
												"id": 605,
												"nodeType": "Return",
												"src": "1675:12:8"
											}
										]
									},
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "1537:54:8",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1605:4:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 600,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1632:8:8"
									},
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1609:2:8"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "1650:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 601,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1650:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1649:15:8"
									},
									"scope": 1381,
									"src": "1596:98:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										155
									],
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "1878:31:8",
										"statements": [
											{
												"expression": {
													"id": 614,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "1895:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 613,
												"id": 615,
												"nodeType": "Return",
												"src": "1888:14:8"
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "1700:102:8",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1816:6:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 610,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1845:8:8"
									},
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1822:2:8"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "1863:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 611,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1863:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:15:8"
									},
									"scope": 1381,
									"src": "1807:102:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										161
									],
									"body": {
										"id": 626,
										"nodeType": "Block",
										"src": "2595:26:8",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2612:2:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 623,
												"id": 625,
												"nodeType": "Return",
												"src": "2605:9:8"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "1915:610:8",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {KIP7} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IKIP7-balanceOf} and {IKIP7-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2539:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 620,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2570:8:8"
									},
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2547:2:8"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2588:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 621,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2588:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:7:8"
									},
									"scope": 1381,
									"src": "2530:91:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										29
									],
									"body": {
										"id": 636,
										"nodeType": "Block",
										"src": "2750:36:8",
										"statements": [
											{
												"expression": {
													"id": 634,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "2767:12:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 633,
												"id": 635,
												"nodeType": "Return",
												"src": "2760:19:8"
											}
										]
									},
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "2627:48:8",
										"text": " @dev See {IKIP7-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2689:11:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 630,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2723:8:8"
									},
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2700:2:8"
									},
									"returnParameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "2741:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:9:8"
									},
									"scope": 1381,
									"src": "2680:106:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										37
									],
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "2926:42:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 646,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "2943:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 648,
													"indexExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 640,
														"src": "2953:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2943:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 645,
												"id": 649,
												"nodeType": "Return",
												"src": "2936:25:8"
											}
										]
									},
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "2792:46:8",
										"text": " @dev See {IKIP7-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2852:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 642,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2899:8:8"
									},
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2870:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2862:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2861:17:8"
									},
									"returnParameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2917:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2917:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2916:9:8"
									},
									"scope": 1381,
									"src": "2843:125:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										47
									],
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3248:104:8",
										"statements": [
											{
												"assignments": [
													663
												],
												"declarations": [
													{
														"constant": false,
														"id": 663,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3266:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 675,
														"src": "3258:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 662,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3258:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 664,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "3274:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3274:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3258:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 668,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3306:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 669,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3313:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3317:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 667,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "3296:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3296:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "3296:28:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3341:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 661,
												"id": 674,
												"nodeType": "Return",
												"src": "3334:11:8"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2974:184:8",
										"text": " @dev See {IKIP7-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3172:8:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 658,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3224:8:8"
									},
									"parameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3189:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3181:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3181:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3201:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3193:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 655,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3180:28:8"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 676,
												"src": "3242:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3242:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:6:8"
									},
									"scope": 1381,
									"src": "3163:189:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										57
									],
									"body": {
										"id": 693,
										"nodeType": "Block",
										"src": "3507:51:8",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 687,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3524:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 689,
														"indexExpression": {
															"id": 688,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "3536:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3524:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 691,
													"indexExpression": {
														"id": 690,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 681,
														"src": "3543:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3524:27:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 686,
												"id": 692,
												"nodeType": "Return",
												"src": "3517:34:8"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3358:46:8",
										"text": " @dev See {IKIP7-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3418:9:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 683,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3480:8:8"
									},
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3436:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3428:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3451:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3443:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3443:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:32:8"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3498:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3497:9:8"
									},
									"scope": 1381,
									"src": "3409:149:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										67
									],
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "3954:108:8",
										"statements": [
											{
												"assignments": [
													706
												],
												"declarations": [
													{
														"constant": false,
														"id": 706,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3972:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 718,
														"src": "3964:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 705,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3964:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 709,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 707,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "3980:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3980:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3964:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 711,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 706,
															"src": "4011:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 712,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 697,
															"src": "4018:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 713,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 699,
															"src": "4027:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 710,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "4002:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4002:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "4002:32:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4051:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 704,
												"id": 717,
												"nodeType": "Return",
												"src": "4044:11:8"
											}
										]
									},
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "3564:296:8",
										"text": " @dev See {IKIP7-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3874:7:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 701,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3930:8:8"
									},
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3890:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3882:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3882:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3907:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3899:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3899:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3881:33:8"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "3948:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3948:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3947:6:8"
									},
									"scope": 1381,
									"src": "3865:197:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										79
									],
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "4755:153:8",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4773:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 751,
														"src": "4765:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 732,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4765:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 734,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "4783:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4783:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4765:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "4821:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 733,
															"src": "4827:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4836:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "4805:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4805:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "4805:38:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 722,
															"src": "4863:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 745,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "4869:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 746,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4873:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 743,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "4853:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4853:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "4853:27:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4897:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 731,
												"id": 750,
												"nodeType": "Return",
												"src": "4890:11:8"
											}
										]
									},
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "4068:549:8",
										"text": " @dev See {IKIP7-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {KIP7}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4631:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 728,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4731:8:8"
									},
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4661:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4653:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4683:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4675:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4675:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4703:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4695:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4695:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4643:72:8"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "4749:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4749:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4748:6:8"
									},
									"scope": 1381,
									"src": "4622:286:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "5396:140:8",
										"statements": [
											{
												"assignments": [
													763
												],
												"declarations": [
													{
														"constant": false,
														"id": 763,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5414:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 780,
														"src": "5406:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 762,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5406:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 764,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "5422:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5422:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5406:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 768,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "5453:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "5460:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 771,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "5479:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 772,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 755,
																		"src": "5486:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "5469:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5469:25:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 774,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 757,
																"src": "5497:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5469:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 767,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1315,
														"src": "5444:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5444:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "5444:64:8"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5525:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 761,
												"id": 779,
												"nodeType": "Return",
												"src": "5518:11:8"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "4914:383:8",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IKIP7-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "5311:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5337:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5329:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5329:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "5354:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5346:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5346:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5328:37:8"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5390:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 759,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5390:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5389:6:8"
									},
									"scope": 1381,
									"src": "5302:234:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "6121:327:8",
										"statements": [
											{
												"assignments": [
													792
												],
												"declarations": [
													{
														"constant": false,
														"id": 792,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6139:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "6131:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 791,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6131:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 793,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "6147:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6147:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6131:28:8"
											},
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "6177:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "6169:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6169:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 802,
												"initialValue": {
													"arguments": [
														{
															"id": 799,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "6206:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 800,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "6213:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 798,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "6196:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6196:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6169:52:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 804,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "6239:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 805,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "6259:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6239:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6276:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de",
																"typeString": "literal_string \"KIP7: decreased allowance below zero\""
															},
															"value": "KIP7: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_72e8f4ff426c2490bd4bd68932c643f73f97346ca1baf4d493699bbd94e8b5de",
																"typeString": "literal_string \"KIP7: decreased allowance below zero\""
															}
														],
														"id": 803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6231:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6231:84:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 809,
												"nodeType": "ExpressionStatement",
												"src": "6231:84:8"
											},
											{
												"id": 818,
												"nodeType": "UncheckedBlock",
												"src": "6325:95:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 811,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 792,
																	"src": "6358:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 812,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 784,
																	"src": "6365:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 813,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 797,
																		"src": "6374:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 814,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "6393:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6374:34:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 810,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "6349:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6349:60:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 817,
														"nodeType": "ExpressionStatement",
														"src": "6349:60:8"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6437:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 790,
												"id": 820,
												"nodeType": "Return",
												"src": "6430:11:8"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "5542:475:8",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IKIP7-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "6031:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6057:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "6049:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6049:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "6074:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "6066:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6066:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6048:42:8"
									},
									"returnParameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "6115:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 788,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6115:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6114:6:8"
									},
									"scope": 1381,
									"src": "6022:426:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										97
									],
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "6853:98:8",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "6871:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 843,
														"src": "6863:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6863:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 835,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 833,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "6879:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6879:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6863:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 837,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "6915:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "6922:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 839,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "6933:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6941:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 836,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "6901:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6901:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "6901:43:8"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "6454:313:8",
										"text": " @dev See {IKIP7-safeTransfer}.\n Emits a {Transfer} event\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`.\n - if `recipient` is a smart contract, it must implement {IKIP7Receiver}"
									},
									"functionSelector": "423f6cef",
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "6781:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 829,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6844:8:8"
									},
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "6802:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6794:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6794:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6821:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "6813:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6813:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6793:35:8"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6853:0:8"
									},
									"scope": 1381,
									"src": "6772:179:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										89
									],
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "7343:101:8",
										"statements": [
											{
												"assignments": [
													856
												],
												"declarations": [
													{
														"constant": false,
														"id": 856,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7361:5:8",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "7353:13:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 855,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7353:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 859,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 857,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "7369:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7369:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7353:28:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 861,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "7405:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "7412:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 863,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "7423:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 864,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "7431:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 860,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "7391:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7391:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "7391:46:8"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "6957:250:8",
										"text": " @dev Same as {xref-KIP7-safeTransfer-address-uint256-}[`safeTransfer`], with an additional `_data` parameter which is\n forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients.\n Emits a {Transfer} event"
									},
									"functionSelector": "eb795549",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "7221:12:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 853,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7334:8:8"
									},
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "7251:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "7243:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7243:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7278:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "7270:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7270:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "7307:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "7294:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7294:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7233:85:8"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7343:0:8"
									},
									"scope": 1381,
									"src": "7212:232:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										119
									],
									"body": {
										"id": 897,
										"nodeType": "Block",
										"src": "8263:151:8",
										"statements": [
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "8281:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 897,
														"src": "8273:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 879,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8273:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 883,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 881,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "8291:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8291:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8273:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 885,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "8329:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 886,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "8337:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8346:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "8313:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8313:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "8313:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "8377:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 892,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8385:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8396:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8404:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 890,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "8363:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8363:44:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "8363:44:8"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "7450:677:8",
										"text": " @dev See {IKIP7-safeTransferFrom}.\n Emits a {Transfer} event\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the KIP. See the note at the beginning of {KIP7}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least `amount`.\n - if `recipient` is a smart contract, it must implement {IKIP7Receiver}"
									},
									"functionSelector": "42842e0e",
									"id": 898,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8141:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 877,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8254:8:8"
									},
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8175:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "8167:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8167:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8199:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "8191:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8191:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8226:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 898,
												"src": "8218:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8218:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8157:81:8"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8263:0:8"
									},
									"scope": 1381,
									"src": "8132:282:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										109
									],
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "8916:154:8",
										"statements": [
											{
												"assignments": [
													912
												],
												"declarations": [
													{
														"constant": false,
														"id": 912,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "8934:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 929,
														"src": "8926:15:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 911,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8926:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 913,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "8944:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8944:12:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8926:30:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 917,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "8982:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 918,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 912,
															"src": "8990:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 919,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "8999:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "8966:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8966:40:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "8966:40:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 923,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 901,
															"src": "9030:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "9038:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "9049:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 926,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "9057:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 922,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "9016:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9016:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "9016:47:8"
											}
										]
									},
									"documentation": {
										"id": 899,
										"nodeType": "StructuredDocumentation",
										"src": "8420:332:8",
										"text": " @dev Same as {xref-KIP7-safeTransferFrom-address-uint256-}[`safeTransferFrom`], with an additional `_data` parameter which is\n forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients.\n Emits a {Transfer} event\n Emits an {Approval} event indicating the updated allowance."
									},
									"functionSelector": "b88d4fde",
									"id": 930,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "8766:16:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 909,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8907:8:8"
									},
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 901,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8800:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "8792:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 900,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8792:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8824:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "8816:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8816:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8851:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "8843:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8843:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "8880:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "8867:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 906,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8867:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8782:109:8"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8916:0:8"
									},
									"scope": 1381,
									"src": "8757:313:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "9995:159:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 943,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "10015:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 944,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 935,
															"src": "10021:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 945,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "10025:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 942,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1036,
														"src": "10005:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10005:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "10005:27:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 950,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "10071:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 951,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 935,
																	"src": "10077:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 952,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 937,
																	"src": "10081:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 953,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "10089:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 949,
																"name": "_checkOnKIP7Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "10050:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10050:45:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a207472616e7366657220746f206e6f6e20494b495037526563656976657220696d706c656d656e746572",
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10097:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3",
																"typeString": "literal_string \"KIP7: transfer to non IKIP7Receiver implementer\""
															},
															"value": "KIP7: transfer to non IKIP7Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3",
																"typeString": "literal_string \"KIP7: transfer to non IKIP7Receiver implementer\""
															}
														],
														"id": 948,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10042:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10042:105:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "10042:105:8"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "9076:774:8",
										"text": " @dev Safely transfers `amout` token from `from` to `to`, checking first that contract recipients\n are aware of the KIP7 protocol to prevent tokens from being forever locked.\n `_data` is additional data, it has no specified format and it is sent in call to `to` to be used\n for additional KIP7 receiver handler logic\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - if `to` is a contract it must implement {IKIP7Receiver} and\n - If `to` refers to a smart contract, it must implement {IKIP7Receiver}, which is called upon\n   a safe transfer."
									},
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "9864:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9895:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "9887:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9887:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9917:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "9909:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9909:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9937:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "9929:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 936,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9929:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "9966:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "9953:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 938,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9953:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9877:100:8"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9995:0:8"
									},
									"scope": 1381,
									"src": "9855:299:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "10725:540:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 970,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "10743:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10759:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10751:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 971,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10751:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10751:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10743:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10763:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d",
																"typeString": "literal_string \"KIP7: transfer from the zero address\""
															},
															"value": "KIP7: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7f1df8cc77037b9964c771e74b8f71dd475556433d4a64825d0f5b88bbb7334d",
																"typeString": "literal_string \"KIP7: transfer from the zero address\""
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10735:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10735:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "10735:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 980,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "10820:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10834:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10826:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 981,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10826:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10826:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10820:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10838:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956",
																"typeString": "literal_string \"KIP7: transfer to the zero address\""
															},
															"value": "KIP7: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_648f3a78dc1bca1abd4957b5fdfa3e42cb79d66e5a6dc9f283cd71140c519956",
																"typeString": "literal_string \"KIP7: transfer to the zero address\""
															}
														],
														"id": 979,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10812:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10812:63:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "10812:63:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 990,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "10907:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 991,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "10913:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 992,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "10917:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 989,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "10886:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10886:38:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 994,
												"nodeType": "ExpressionStatement",
												"src": "10886:38:8"
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "10943:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "10935:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 995,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10935:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"baseExpression": {
														"id": 997,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "10957:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 999,
													"indexExpression": {
														"id": 998,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "10967:4:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10957:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10935:37:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1002,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 996,
																"src": "10990:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1003,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "11005:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10990:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11013:39:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e",
																"typeString": "literal_string \"KIP7: transfer amount exceeds balance\""
															},
															"value": "KIP7: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cd7155baabe16ac4b43a8dfeaf21acdeb122fb75e6869bb834116fbfc032454e",
																"typeString": "literal_string \"KIP7: transfer amount exceeds balance\""
															}
														],
														"id": 1001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10982:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10982:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "10982:71:8"
											},
											{
												"id": 1016,
												"nodeType": "UncheckedBlock",
												"src": "11063:73:8",
												"statements": [
													{
														"expression": {
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1008,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "11087:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1010,
																"indexExpression": {
																	"id": 1009,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "11097:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11087:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1011,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "11105:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1012,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 966,
																	"src": "11119:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11105:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11087:38:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1015,
														"nodeType": "ExpressionStatement",
														"src": "11087:38:8"
													}
												]
											},
											{
												"expression": {
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1017,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "11145:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1019,
														"indexExpression": {
															"id": 1018,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "11155:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11145:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1020,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "11162:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11145:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1022,
												"nodeType": "ExpressionStatement",
												"src": "11145:23:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1024,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "11193:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "11199:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1026,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "11203:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1023,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "11184:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11184:26:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "EmitStatement",
												"src": "11179:31:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1030,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 962,
															"src": "11241:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1031,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "11247:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 966,
															"src": "11251:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1029,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "11221:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11221:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "11221:37:8"
											}
										]
									},
									"documentation": {
										"id": 960,
										"nodeType": "StructuredDocumentation",
										"src": "10160:452:8",
										"text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "10626:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10653:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "10645:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10645:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10675:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "10667:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10667:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10695:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "10687:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10687:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10635:72:8"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10725:0:8"
									},
									"scope": 1381,
									"src": "10617:648:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11686:47:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1045,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "11706:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "11715:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1047,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11723:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1044,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1051,
															1080
														],
														"referencedDeclaration": 1080,
														"src": "11696:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11696:30:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11696:30:8"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "11271:341:8",
										"text": " @dev Safely mints `amount` and transfers it to `account`.\n Requirements:\n - `account` cannot be the zero address.\n - If `account` refers to a smart contract, it must implement {IKIP7Receiver-onKIP7Received},\n   which is called upon a safe mint.\n Emits a {Transfer} event."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11626:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11644:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11636:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11636:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11661:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11653:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1040,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11653:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11635:33:8"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11686:0:8"
									},
									"scope": 1381,
									"src": "11617:116:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "12068:199:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1062,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "12084:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1063,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1056,
															"src": "12093:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1061,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "12078:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12078:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "12078:22:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12160:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "12152:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1068,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "12152:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12152:10:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1072,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1054,
																	"src": "12164:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1073,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1056,
																	"src": "12173:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1074,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "12181:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1067,
																"name": "_checkOnKIP7Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "12131:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12131:56:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a207472616e7366657220746f206e6f6e20494b495037526563656976657220696d706c656d656e746572",
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12201:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3",
																"typeString": "literal_string \"KIP7: transfer to non IKIP7Receiver implementer\""
															},
															"value": "KIP7: transfer to non IKIP7Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a0e7d54dbfb79f42baf3b241fbbdfe466891b188c53da77437478ae76c50e1e3",
																"typeString": "literal_string \"KIP7: transfer to non IKIP7Receiver implementer\""
															}
														],
														"id": 1066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12110:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12110:150:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1078,
												"nodeType": "ExpressionStatement",
												"src": "12110:150:8"
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11739:205:8",
										"text": " @dev Same as {xref-KIP7-_safeMint-address-uint256-}[`_safeMint`], with an additional `_data` parameter which is\n forwarded in {IKIP7Receiver-onKIP7Received} to contract recipients."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "11958:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11985:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "11977:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11977:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12010:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "12002:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "12039:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "12026:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1057,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12026:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11967:83:8"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12068:0:8"
									},
									"scope": 1381,
									"src": "11949:318:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1135,
										"nodeType": "Block",
										"src": "12702:323:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1094,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1089,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1083,
																"src": "12720:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1092,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12739:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12731:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1090,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12731:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12731:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12720:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12743:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_343b104de6cf0053df5ee8745270d136e86745f9a5b8e81f6c879d9f58292e7a",
																"typeString": "literal_string \"KIP7: mint to the zero address\""
															},
															"value": "KIP7: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_343b104de6cf0053df5ee8745270d136e86745f9a5b8e81f6c879d9f58292e7a",
																"typeString": "literal_string \"KIP7: mint to the zero address\""
															}
														],
														"id": 1088,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12712:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12712:64:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "12712:64:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12816:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12808:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1099,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12808:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12808:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12820:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1104,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "12829:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1098,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "12787:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12787:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "12787:49:8"
											},
											{
												"expression": {
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1107,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "12847:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1108,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "12863:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12847:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "12847:22:8"
											},
											{
												"expression": {
													"id": 1115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1111,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "12879:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1113,
														"indexExpression": {
															"id": 1112,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12889:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12879:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1114,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1085,
														"src": "12901:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12879:28:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1116,
												"nodeType": "ExpressionStatement",
												"src": "12879:28:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12939:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12931:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1118,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12931:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12931:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1122,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "12943:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1123,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "12952:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1117,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "12922:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12922:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "EmitStatement",
												"src": "12917:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12998:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12990:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1127,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12990:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12990:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1131,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "13002:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1132,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "13011:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "12970:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12970:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "12970:48:8"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "12273:359:8",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 1136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "12646:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "12660:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "12652:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12652:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12677:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "12669:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12669:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12651:33:8"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12702:0:8"
									},
									"scope": 1381,
									"src": "12637:388:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "13719:609:8",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1150,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "13733:2:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13736:10:8",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 216,
														"src": "13733:13:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13733:15:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "14286:36:8",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14307:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1149,
															"id": 1194,
															"nodeType": "Return",
															"src": "14300:11:8"
														}
													]
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "13729:593:8",
												"trueBody": {
													"id": 1192,
													"nodeType": "Block",
													"src": "13750:530:8",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1172,
																		"nodeType": "Block",
																		"src": "13860:87:8",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1170,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1166,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1164,
																						"src": "13885:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1167,
																								"name": "IKIP7Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 137,
																								"src": "13895:13:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IKIP7Receiver_$137_$",
																									"typeString": "type(contract IKIP7Receiver)"
																								}
																							},
																							"id": 1168,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "13909:14:8",
																							"memberName": "onKIP7Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 136,
																							"src": "13895:28:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IKIP7Receiver.onKIP7Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1169,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "13924:8:8",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "13895:37:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "13885:47:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 1149,
																				"id": 1171,
																				"nodeType": "Return",
																				"src": "13878:54:8"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1173,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1165,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1164,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "13852:6:8",
																				"nodeType": "VariableDeclaration",
																				"scope": 1173,
																				"src": "13845:13:8",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1163,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "13845:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13844:15:8"
																	},
																	"src": "13836:111:8"
																},
																{
																	"block": {
																		"id": 1189,
																		"nodeType": "Block",
																		"src": "13976:294:8",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1180,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1177,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1175,
																							"src": "13998:6:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1178,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14005:6:8",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "13998:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1179,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14015:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "13998:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1187,
																					"nodeType": "Block",
																					"src": "14121:135:8",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "14152:86:8",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "14189:2:8",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14193:6:8"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "14185:3:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14185:15:8"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "14208:6:8"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "14202:5:8"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "14202:13:8"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "14178:6:8"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "14178:38:8"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "14178:38:8"
																									}
																								]
																							},
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 1175,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14193:6:8",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1175,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "14208:6:8",
																									"valueSize": 1
																								}
																							],
																							"id": 1186,
																							"nodeType": "InlineAssembly",
																							"src": "14143:95:8"
																						}
																					]
																				},
																				"id": 1188,
																				"nodeType": "IfStatement",
																				"src": "13994:262:8",
																				"trueBody": {
																					"id": 1185,
																					"nodeType": "Block",
																					"src": "14018:97:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4b4950373a207472616e7366657220746f206e6f6e204b495037526563656976657220696d706c656d656e746572",
																										"id": 1182,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "14047:48:8",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a",
																											"typeString": "literal_string \"KIP7: transfer to non KIP7Receiver implementer\""
																										},
																										"value": "KIP7: transfer to non KIP7Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0ae591f351dfa15a3ad3b7d472c86196a5fcc5808c170d2277e2bf58f3bda96a",
																											"typeString": "literal_string \"KIP7: transfer to non KIP7Receiver implementer\""
																										}
																									],
																									"id": 1181,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "14040:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1183,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "14040:56:8",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1184,
																							"nodeType": "ExpressionStatement",
																							"src": "14040:56:8"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1190,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1176,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1175,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "13968:6:8",
																				"nodeType": "VariableDeclaration",
																				"scope": 1190,
																				"src": "13955:19:8",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1174,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "13955:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "13954:21:8"
																	},
																	"src": "13948:322:8"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1157,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "13801:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13801:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1159,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "13815:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1160,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "13821:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1161,
																		"name": "_data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1145,
																		"src": "13829:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1154,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "13782:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1153,
																			"name": "IKIP7Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 137,
																			"src": "13768:13:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IKIP7Receiver_$137_$",
																				"typeString": "type(contract IKIP7Receiver)"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "13768:17:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IKIP7Receiver_$137",
																			"typeString": "contract IKIP7Receiver"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13786:14:8",
																	"memberName": "onKIP7Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 136,
																	"src": "13768:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13768:67:8",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1191,
															"nodeType": "TryStatement",
															"src": "13764:506:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1137,
										"nodeType": "StructuredDocumentation",
										"src": "13031:530:8",
										"text": " @dev Internal function to invoke {IKIP7Receiver-onKIP7Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of transfer token amount\n @param to target address that will receive the tokens\n @param amount uint256 value to be transferred\n @param _data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnKIP7Received",
									"nameLocation": "13575:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13613:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "13605:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13605:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13635:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "13627:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13627:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13655:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "13647:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13647:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "13684:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "13671:18:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1144,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13671:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13595:100:8"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "13713:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13713:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13712:6:8"
									},
									"scope": 1381,
									"src": "13566:762:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "14713:509:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1207,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "14731:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14750:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14742:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1208,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14742:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14742:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14731:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14754:34:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f8d0526e32074d0a2a1ba4e766622a4012e2a771cf7ee32cbe50bf4b8dc5509",
																"typeString": "literal_string \"KIP7: burn from the zero address\""
															},
															"value": "KIP7: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f8d0526e32074d0a2a1ba4e766622a4012e2a771cf7ee32cbe50bf4b8dc5509",
																"typeString": "literal_string \"KIP7: burn from the zero address\""
															}
														],
														"id": 1206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14723:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14723:66:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "14723:66:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1217,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "14821:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14838:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14830:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14830:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14830:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "14842:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1216,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1369,
														"src": "14800:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14800:49:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "14800:49:8"
											},
											{
												"assignments": [
													1226
												],
												"declarations": [
													{
														"constant": false,
														"id": 1226,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "14868:14:8",
														"nodeType": "VariableDeclaration",
														"scope": 1269,
														"src": "14860:22:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14860:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"baseExpression": {
														"id": 1227,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "14885:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1229,
													"indexExpression": {
														"id": 1228,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "14895:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14885:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14860:43:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1232,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "14921:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1233,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1203,
																"src": "14939:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "14921:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14947:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2781f1ad00ded74975e5b49c588aa68807fc7ac10551d8b83aee8182d97a996c",
																"typeString": "literal_string \"KIP7: burn amount exceeds balance\""
															},
															"value": "KIP7: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2781f1ad00ded74975e5b49c588aa68807fc7ac10551d8b83aee8182d97a996c",
																"typeString": "literal_string \"KIP7: burn amount exceeds balance\""
															}
														],
														"id": 1231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14913:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14913:70:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "14913:70:8"
											},
											{
												"id": 1246,
												"nodeType": "UncheckedBlock",
												"src": "14993:79:8",
												"statements": [
													{
														"expression": {
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1238,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "15017:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1240,
																"indexExpression": {
																	"id": 1239,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "15027:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "15017:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1241,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1226,
																	"src": "15038:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1242,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "15055:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "15038:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15017:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1245,
														"nodeType": "ExpressionStatement",
														"src": "15017:44:8"
													}
												]
											},
											{
												"expression": {
													"id": 1249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1247,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 546,
														"src": "15081:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1248,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "15097:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15081:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1250,
												"nodeType": "ExpressionStatement",
												"src": "15081:22:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1252,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15128:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15145:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15137:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1253,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15137:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15137:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1257,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "15149:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1251,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "15119:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15119:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "EmitStatement",
												"src": "15114:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1261,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "15187:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15204:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15196:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "15196:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15196:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1266,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "15208:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1260,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "15167:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15167:48:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "15167:48:8"
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "14334:309:8",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "14657:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "14671:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "14663:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14663:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "14688:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "14680:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14680:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14662:33:8"
									},
									"returnParameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14713:0:8"
									},
									"scope": 1381,
									"src": "14648:574:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "15758:255:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1281,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "15776:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15793:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15785:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1282,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15785:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15785:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15776:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 1287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15797:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99",
																"typeString": "literal_string \"KIP7: approve from the zero address\""
															},
															"value": "KIP7: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d9bb28a65bb515d2a8833343eb23d5515d4236be409c13c16453307eb2444d99",
																"typeString": "literal_string \"KIP7: approve from the zero address\""
															}
														],
														"id": 1280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15768:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15768:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1289,
												"nodeType": "ExpressionStatement",
												"src": "15768:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1291,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "15853:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15872:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15864:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1292,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15864:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15864:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15853:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4b4950373a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 1297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15876:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3",
																"typeString": "literal_string \"KIP7: approve to the zero address\""
															},
															"value": "KIP7: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0aaab2957387af1d0bde8edd7ee6df980232923930359e1dc11528ded07266b3",
																"typeString": "literal_string \"KIP7: approve to the zero address\""
															}
														],
														"id": 1290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15845:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15845:67:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "15845:67:8"
											},
											{
												"expression": {
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1300,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "15923:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1303,
															"indexExpression": {
																"id": 1301,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "15935:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15923:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1304,
														"indexExpression": {
															"id": 1302,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "15942:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15923:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1305,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "15953:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15923:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "15923:36:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1309,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1273,
															"src": "15983:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1310,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "15990:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1311,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "15999:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1308,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "15974:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15974:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "EmitStatement",
												"src": "15969:37:8"
											}
										]
									},
									"documentation": {
										"id": 1271,
										"nodeType": "StructuredDocumentation",
										"src": "15228:412:8",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 1315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "15654:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15680:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "15672:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "15703:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "15695:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15695:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15728:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "15720:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15720:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15662:78:8"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15758:0:8"
									},
									"scope": 1381,
									"src": "15645:368:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "16414:320:8",
										"statements": [
											{
												"assignments": [
													1326
												],
												"declarations": [
													{
														"constant": false,
														"id": 1326,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "16432:16:8",
														"nodeType": "VariableDeclaration",
														"scope": 1357,
														"src": "16424:24:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "16424:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1331,
												"initialValue": {
													"arguments": [
														{
															"id": 1328,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "16461:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1329,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1320,
															"src": "16468:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1327,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "16451:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16451:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16424:52:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1332,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1326,
														"src": "16490:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16515:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1334,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "16515:7:8",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1333,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16510:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1336,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16510:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16524:3:8",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16510:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16490:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "16486:242:8",
												"trueBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "16529:199:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1340,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1326,
																			"src": "16551:16:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1341,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1322,
																			"src": "16571:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "16551:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4b4950373a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16579:30:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7",
																			"typeString": "literal_string \"KIP7: insufficient allowance\""
																		},
																		"value": "KIP7: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0a35052bc7f172b76e75e4cb124f26997616a7b0add9bfad7a8cecbff00903d7",
																			"typeString": "literal_string \"KIP7: insufficient allowance\""
																		}
																	],
																	"id": 1339,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "16543:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16543:67:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1345,
															"nodeType": "ExpressionStatement",
															"src": "16543:67:8"
														},
														{
															"id": 1354,
															"nodeType": "UncheckedBlock",
															"src": "16624:94:8",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1347,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1318,
																				"src": "16661:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1348,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1320,
																				"src": "16668:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1349,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1326,
																					"src": "16677:16:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1350,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1322,
																					"src": "16696:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "16677:25:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1346,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "16652:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 1352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16652:51:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1353,
																	"nodeType": "ExpressionStatement",
																	"src": "16652:51:8"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "16019:270:8",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "16303:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16336:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "16328:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16328:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "16359:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "16351:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16351:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16384:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "16376:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16376:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16318:78:8"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16414:0:8"
									},
									"scope": 1381,
									"src": "16294:440:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "17437:2:8",
										"statements": []
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "16740:573:8",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "17327:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17365:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "17357:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17357:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17387:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "17379:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17379:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17407:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1369,
												"src": "17399:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17399:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17347:72:8"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17437:0:8"
									},
									"scope": 1381,
									"src": "17318:121:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "18145:2:8",
										"statements": []
									},
									"documentation": {
										"id": 1370,
										"nodeType": "StructuredDocumentation",
										"src": "17445:577:8",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "18036:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1372,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18073:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "18065:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18065:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "18095:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "18087:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18087:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18115:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "18107:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18107:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18055:72:8"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18145:0:8"
									},
									"scope": 1381,
									"src": "18027:120:8",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1382,
							"src": "446:17703:8",
							"usedErrors": []
						}
					],
					"src": "32:18117:8"
				},
				"id": 8
			}
		}
	}
}